上文说到，有了Spring之后，通过依赖注入的方式，我们的业务代码不用自己管理关联对象的生命周期。业务代码只需要按照业务本身的流程，走啊走啊，走到哪里，需要另外的对象来协助了，就给Spring说，我想要个对象——于是Spring就很贴心的给你个对象。听起来似乎很简单，使用起来也不难，但是如果仅仅是这样的拿来主义，倒也洒脱，不用费什么脑子。。。可是，你就真的不关心，Spring是从哪里把对象给你的吗？如果你想要了解Spring深一些，而不仅仅是拿来用用，那么你就应该好好思考一下上诉问题，不然，这篇博文你还看个铲铲啊。。。你可以这样去思考：Spring既然要负责应用程序中那么多对象的创建管理，就像苹果要生产那么多的手机（对象）一样，肯定有一个专门搞对象的地方。苹果生产手机的地方叫工厂，比如富士康，但放在软件开发中，对于Spring搞对象的地方我们就不叫工厂了，而叫做容器。是的，容器的概念在java中你最熟悉的莫过于Tomcat了，它正是一个运行Servlet的web容器，而Spring要想实现依赖注入功能，就离不开对象生产的容器——如果没有容器负责对象的创建管理，你的程序代码只是喊要对象了，Spring也无处给你啊。实际上，容器是Spring框架实现功能的核心，容器不只是帮我们创建了对象那么简单，它负责了对象整个的生命周期的管理——创建、装配、销毁。关于Spring的这个容器你最常听闻的一个术语就是IOC容器。所谓IOC，是一种叫控制反转的编程思想，网上有很通俗易懂的总结，我就不胡乱阐述了。总之一句话，我的应用程序里不用再过问对象的创建和管理对象之间的依赖关系了，都让IOC容器给代劳吧，也就是说，我把对象创建、管理的控制权都交给Spring容器,这是一种控制权的反转，所以Spring容器才能称为IOC容器。不过这里要厘清一点：并不是说只有Spring的容器才叫IOC容器，基于IOC容器的框架还有很多，并不是Spring特有的。好了，终于把Spring的容器概念阐述的差不多了，但有什么卵用呢？光有容器你其实什么都干不了！你以为容器那么科幻，跟叮当猫面前的百宝袋一样，你想要啥它就给你啥？实际上，容器里面什么都没有，决定容器里面放什么对象的是我们自己，决定对象之间的依赖关系的，也是我们自己，容器只是给我们提供一个管理对象的空间而已。那么，我们怎么向容器中放入我们需要容器代为管理的对象呢？这就涉及到Spring的应用上下文了。什么是应用上下文呢，你可以简单的理解成就是将你需要Spring帮你管理的对象放入容器的那么一种。。一种。。额。。一种容器对象——是的，应用上下文即是Spring容器抽象的一种实现；而我们常见的ApplicationContext本质上说就是一个维护Bean定义以及对象之间协作关系的高级接口。额，听起来是不是很抽象拗口？那你再读一遍呢。。。这里，我们必须明确，Spring的核心是容器，而容器并不唯一，框架本身就提供了很多个容器的实现，大概分为两种类型：一种是不常用的BeanFactory，这是最简单的容器，只能提供基本的DI功能；还有一种就是继承了BeanFactory后派生而来的应用上下文，其抽象接口也就是我们上面提到的的ApplicationContext，它能提供更多企业级的服务，例如解析配置文本信息等等，这也是应用上下文实例对象最常见的应用场景。有了上下文对象，我们就能向容器注册需要Spring管理的对象了。对于上下文抽象接口，Spring也为我们提供了多种类型的容器实现，供我们在不同的应用场景选择——AnnotationConfigApplicationContext:从一个或多个基于java的配置类中加载上下文定义，适用于java注解的方式；ClassPathXmlApplicationContext:从类路径下的一个或多个xml配置文件中加载上下文定义，适用于xml配置的方式；FileSystemXmlApplicationContext:从文件系统下的一个或多个xml配置文件中加载上下文定义，也就是说系统盘符中加载xml配置文件；AnnotationConfigWebApplicationContext:专门为web应用准备的，适用于注解方式；XmlWebApplicationContext:从web应用下的一个或多个xml配置文件加载上下文定义，适用于xml配置方式。有了以上理解，问题就很好办了。你只要将你需要IOC容器替你管理的对象基于xml也罢，java注解也好，总之你要将需要管理的对象（Spring中我们都称之问bean）、bean之间的协作关系配置好，然后利用应用上下文对象加载进我们的Spring容器，容器就能为你的程序提供你想要的对象管理服务了。下面，还是贴一下简单的应用上下文的应用实例：我们先采用xml配置的方式配置bean和建立bean之间的协作关系：然后通过应用上下文将配置加载到IOC容器，让Spring替我们管理对象，待我们需要使用对象的时候，再从容器中获取bean就ok了：以上测试中，我将配置文件applicationContext.xml分别放在项目中和任意的系统盘符下，我只需要使用相应的上下文对象去加载配置文件，最后的结果是完全一样的。当然，现在项目中越来越多的使用java注解，所以注解的方式必不可少：自此，Spring容器和应用上下文就算阐述的差不多了，具体的技能点在今后的博文中会慢慢的给大家奉上。
