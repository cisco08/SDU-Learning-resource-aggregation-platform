{
	"arr" : [
		{

			"title":"Java 语法",
			"content":"\n                    <div class=\"markdown_views\">\n                <blockquote>\n  <p><strong>详细代码请参看</strong> <a href=\"https://github.com/suxue1994/Java_class_code/tree/master/Chapter_02_code\">Java基础语法随堂代码</a></p>\n</blockquote>\n\n\n\n<h2 id=\"关键字掌握\">关键字(掌握)</h2>\n\n\n\n<h3 id=\"定义\">定义</h3>\n\n<pre><code> 被Java语言赋予特定含义的单词\n</code></pre>\n\n\n\n<h3 id=\"特点\">特点：</h3>\n\n<pre><code>    全部小写。\n</code></pre>\n\n\n\n<h3 id=\"注意事项\">注意事项：</h3>\n\n<pre><code>    A:goto和const作为保留字存在。\n    B:类似于Notepad++这样的高级记事本会对关键字有特殊颜色标记\n</code></pre>\n\n\n\n<h2 id=\"标识符掌握\">标识符(掌握)</h2>\n\n\n\n<h3 id=\"定义-1\">定义</h3>\n\n<pre><code>    就是给类，接口，方法，变量等起名字的字符序列\n</code></pre>\n\n\n\n<h3 id=\"组成规则\">组成规则：</h3>\n\n<pre><code>    A:英文大小写字母\n    B:数字\n    C:$和_\n</code></pre>\n\n\n\n<h3 id=\"注意事项-1\">注意事项：</h3>\n\n<pre><code>    A:不能以数字开头\n    B:不能是java中的关键字\n    C:区分大小写\n</code></pre>\n\n\n\n<h3 id=\"常见的命名规则见名知意\">常见的命名规则(见名知意)</h3>\n\n\n\n<h4 id=\"包\">包</h4>\n\n<pre><code>   【全部小写】\n        单级包：小写\n            举例：liuyi,com\n        多级包：小写，并用.隔开\n            举例：cn.itcast,com.baidu              \n</code></pre>\n\n\n\n<h4 id=\"类或者接口\">类或者接口</h4>\n\n<pre><code>        一个单词：首字母大写\n            举例：Student,Demo\n        多个单词：每个单词首字母大写\n            举例：HelloWorld,StudentName\n</code></pre>\n\n\n\n<h4 id=\"方法或者变量\">方法或者变量</h4>\n\n<pre><code>        一个单词：首字母小写\n            举例：name,main\n        多个单词：从第二个单词开始，每个单词首字母大写\n            举例：studentAge,showAllNames()\n</code></pre>\n\n\n\n<h4 id=\"常量\">常量</h4>\n\n<pre><code>        全部大写\n        一个单词：大写\n            举例：PI\n        多个单词：大写，并用_隔开\n            举例：STUDENT_MAX_AGE\n</code></pre>\n\n\n\n<h2 id=\"注释掌握\">注释(掌握)</h2>\n\n\n\n<h3 id=\"定义-2\">定义</h3>\n\n<pre><code>    就是对程序进行解释说明的文字\n</code></pre>\n\n\n\n<h3 id=\"分类\">分类</h3>\n\n<pre><code>    A:单行注释  //\n    B:多行注释  /**/\n    C:文档注释(后面讲) /** */\n</code></pre>\n\n\n\n<h3 id=\"把helloworld案例写了一个带注释的版本\">把HelloWorld案例写了一个带注释的版本。</h3>\n\n\n\n<pre class=\"prettyprint\"><code class=\" hljs fsharp\">/*\n    需求：我准备写一个java程序，把<span class=\"hljs-string\">\"HelloWorld\"</span>这句话输出在控制台\n\n    分析：\n        A:要写一个Java程序，必须定义类\n        B:把数据能够输出，说明我们的程序是可以独立运行的，而程序要独立运行，必须定义main方法\n        C:把数据输出在控制台，必须使用输出语句\n\n    实现：\n        A:java语言提供了一个关键字：<span class=\"hljs-keyword\">class</span>用来定义类，后面跟的是类名\n        B:main方法的格式是固定的：\n            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> main(String[] args) {\n\n            }\n        C:输出语句的格式是固定的：\n            System.out.println(<span class=\"hljs-string\">\"HelloWorld\"</span>);\n            <span class=\"hljs-string\">\"HelloWorld\"</span>这个内容是可以改变的\n*/\n\n<span class=\"hljs-comment\">//这是我的HelloWorld案例</span>\n<span class=\"hljs-keyword\">class</span> HelloWorld {\n    /*\n        为了程序能够独立运行，定义main方法\n        main方法是程序的入口\n        被jvm自动调用\n    */\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> main(String[] args) {\n        <span class=\"hljs-comment\">//为了把数据显示在控制台，我们就使用了输出语句</span>\n        System.out.println(<span class=\"hljs-string\">\"HelloWorld\"</span>);\n    }\n}</code></pre>\n\n\n\n<h3 id=\"注释的作用\">注释的作用</h3>\n\n<pre><code>    A:解释说明程序，提高了代码的阅读性。\n    B:可以帮助我们调试程序。\n        后面我们会讲解一个更高端的一个调试工具\n</code></pre>\n\n\n\n<h2 id=\"常量掌握\">常量(掌握)</h2>\n\n\n\n<h3 id=\"定义-3\">定义</h3>\n\n<pre><code>   在程序执行的过程中，其值不发生改变的量\n</code></pre>\n\n\n\n<h3 id=\"分类-1\">分类</h3>\n\n\n\n<h4 id=\"字面值常量\">字面值常量</h4>\n\n<pre><code>    A:字符串常量 \"hello\"        用双引号括起来的内容\n    B:整数常量  12,23          所有的整数\n    C:小数常量  12.345         所有的小数\n    D:字符常量  'a','A','0'    用单引号括起来的内容   \n    E:布尔常量  true,false     比较特殊\n    F:空常量   null(后面讲)    \n</code></pre>\n\n\n\n<h4 id=\"自定义常量后面讲\">自定义常量(后面讲)</h4>\n\n\n\n<h3 id=\"在java中针对整数常量提供了四种表现形式\">在Java中针对整数常量提供了四种表现形式</h3>\n\n<pre><code>    A:二进制   由0，1组成。以0b开头。\n    B:八进制   由0，1，...7组成。以0开头。\n    C:十进制   由0，1，...9组成。整数默认是十进制。\n    D:十六进制  由0，1，...9,a,b,c,d,e,f(大小写均可)组成。以0x开头。\n</code></pre>\n\n\n\n<h2 id=\"进制转换了解\">进制转换(了解)</h2>\n\n\n\n<h3 id=\"不同进制的数据表现\">不同进制的数据表现</h3>\n\n<pre><code>    二进制：由0，1组成。以0b开头。\n    八进制：由0,1,...7组成。以0开头。\n    十进制：由0,1,...9组成。默认整数是十进制。\n    十六进制：由0,1,...9,a,b,c,d,e,f(大小写均可)组成。以0x开头\n</code></pre>\n\n\n\n<h3 id=\"其他进制到十进制\">其他进制到十进制</h3>\n\n<pre><code>    系数：就是每一个位上的数值\n    基数：x进制的基数就是x\n    权：对每一个位上的数据，从右，并且从0开始编号，对应的编号就是该数据的权。\n\n    结果：系数*基数^权次幂之和。\n</code></pre>\n\n\n\n<h3 id=\"十进制到其他进制\">十进制到其他进制</h3>\n\n<pre><code>    除基取余，直到商为0，余数反转。\n</code></pre>\n\n\n\n<h3 id=\"进制转换的快速转换法\">进制转换的快速转换法</h3>\n\n<pre><code>    A:十进制和二进制间的转换\n        8421码。\n    B:二进制到八进制，十六进制的转换 \n</code></pre>\n\n<p>—–下将华丽丽的上图—–</p>\n\n\n\n<h3 id=\"进制概述以及二进制八进制十六进制图解\">进制概述以及二进制,八进制,十六进制图解</h3>\n\n<pre><code>![这里写图片描述](https://img-blog.csdn.net/20170910210023447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjgyMDI2NjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n</code></pre>\n\n\n\n<h3 id=\"快速的进制转换法\">快速的进制转换法</h3>\n\n<pre><code>![这里写图片描述](https://img-blog.csdn.net/20170910210231020?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjgyMDI2NjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast) \n</code></pre>\n\n\n\n<h3 id=\"任意进制到十进制的转换\">任意进制到十进制的转换</h3>\n\n<pre><code>![这里写图片描述](https://img-blog.csdn.net/20170910210342817?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjgyMDI2NjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  \n</code></pre>\n\n\n\n<h3 id=\"十进制到任意进制的转换\">十进制到任意进制的转换</h3>\n\n<pre><code>![这里写图片描述](https://img-blog.csdn.net/20170910210425706?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjgyMDI2NjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  \n</code></pre>\n\n\n\n<h3 id=\"原码反码补码的讲解\">原码反码补码的讲解</h3>\n\n<pre><code>![这里写图片描述](https://img-blog.csdn.net/20170910210456388?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjgyMDI2NjE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  \n</code></pre>\n\n\n\n<h3 id=\"有符号数据表示法的练习\">有符号数据表示法的练习</h3>\n\n\n\n<pre class=\"prettyprint\"><code class=\" hljs avrasm\"><span class=\"hljs-label\">A:</span>已知某数<span class=\"hljs-built_in\">X</span>的原码为<span class=\"hljs-number\">10110100</span>B，试求<span class=\"hljs-built_in\">X</span>的补码和反码。\n\n            符号位     数值位\n\n    原码: <span class=\"hljs-number\">1</span>           <span class=\"hljs-number\">0110100</span>\n\n    反码： <span class=\"hljs-number\">1</span>           <span class=\"hljs-number\">1001011</span>\n\n    补码： <span class=\"hljs-number\">1</span>           <span class=\"hljs-number\">1001100</span>\n\n    B:已知某数<span class=\"hljs-built_in\">X</span>的补码<span class=\"hljs-number\">11101110</span>B，试求其原码。\n\n            符号位     数值位\n\n    补码： <span class=\"hljs-number\">1</span>           <span class=\"hljs-number\">1101110</span>\n\n    反码： <span class=\"hljs-number\">1</span>           <span class=\"hljs-number\">1101101</span>\n\n    原码： <span class=\"hljs-number\">1</span>           <span class=\"hljs-number\">0010010</span></code></pre>\n\n\n\n<h2 id=\"变量掌握\">变量(掌握)</h2>\n\n\n\n<h3 id=\"定义-4\">定义</h3>\n\n<pre><code>    在程序的执行过程中，其值在某个范围内可以发生改变的量\n</code></pre>\n\n\n\n<h3 id=\"变量的定义格式\">变量的定义格式：</h3>\n\n<pre><code>    A:数据类型 变量名 = 初始化值;\n    B:数据类型 变量名;\n      变量名 = 初始化值;\n</code></pre>\n\n\n\n<h3 id=\"使用变量的时候要注意的问题\">使用变量的时候要注意的问题：</h3>\n\n<pre><code>    A:作用域\n        变量定义在哪个大括号内，它就在这个大括号内有效。\n        并且，在同一个大括号内不能同时定义同名的变量。\n\n    B:初始化值\n        没有初始化值的变量不能直接使用。\n        你只要在使用前给值就行，不一定非要在定义的时候立即给值。\n        推荐在定义的时候给值。\n\n        定义变量的格式：\n            a:数据类型 变量名 = 初始化值;\n            b:数据类型 变量名;\n              变量名 = 初始化值;\n\n    C:在一行上建议只定义一个变量\n        可以定义多个，但是不建议\n</code></pre>\n\n\n\n<h2 id=\"数据类型掌握\">数据类型(掌握)</h2>\n\n\n\n<h3 id=\"定义-5\">定义</h3>\n\n<pre><code>    Java是一种强类型语言，针对每种数据都提供了对应的数据类型。\n</code></pre>\n\n\n\n<h3 id=\"分类-2\">分类：</h3>\n\n<pre><code>    A:基本数据类型：4类8种\n    B:引用数据类型：类，接口，数组。\n</code></pre>\n\n\n\n<h3 id=\"基本数据类型\">基本数据类型</h3>\n\n\n\n<h4 id=\"整数\">整数</h4>\n\n<pre><code>占用字节数\n        byte            1\n        short           2\n        int             4\n        long            8\n</code></pre>\n\n\n\n<h4 id=\"浮点数\">浮点数</h4>\n\n<pre><code>        float           4\n        double          8\n</code></pre>\n\n\n\n<h4 id=\"字符\">字符</h4>\n\n<pre><code>        char            2\n</code></pre>\n\n\n\n<h4 id=\"布尔\">布尔</h4>\n\n<pre><code>        boolean         1\n\n    注意：\n        整数默认是int类型，浮点数默认是double。\n\n        长整数要加L或者l。建议使用L\n        单精度的浮点数要加F或者f。建议使用F\n</code></pre>\n\n\n\n<h2 id=\"数据类型转换掌握\">数据类型转换(掌握)</h2>\n\n\n\n<h3 id=\"boolean类型不参与转换\">boolean类型不参与转换</h3>\n\n\n\n<h3 id=\"默认转换\">默认转换</h3>\n\n<pre><code>    A:从小到大\n    B:byte,short,char -- int -- long -- float -- double\n    C:byte,short,char之间不相互转换，直接转成int类型参与运算。\n</code></pre>\n\n\n\n<h3 id=\"强制转换\">强制转换</h3>\n\n<pre><code>    A:从大到小\n    B:可能会有精度的损失，一般不建议这样使用。\n    C:格式：\n        目标数据类型 变量名 = (目标数据类型) (被转换的数据);\n</code></pre>\n\n\n\n<h3 id=\"思考题和面试题\">思考题和面试题：</h3>\n\n<pre><code>    A:下面两种方式有区别吗?\n</code></pre>\n\n\n\n<pre class=\"prettyprint\"><code class=\" hljs cpp\">            <span class=\"hljs-keyword\">float</span> f1 = <span class=\"hljs-number\">12.345f</span>; <span class=\"hljs-comment\">//表示本身就是一个float数，无精度损失</span>\n            <span class=\"hljs-keyword\">float</span> f2 = (<span class=\"hljs-keyword\">float</span>)<span class=\"hljs-number\">12.345</span>; <span class=\"hljs-comment\">//强制转换，存在精度损失</span></code></pre>\n\n<pre><code>    B:下面的程序有问题吗，如果有，在哪里呢?\n</code></pre>\n\n\n\n<pre class=\"prettyprint\"><code class=\" hljs cs\">            <span class=\"hljs-keyword\">byte</span> b1 = <span class=\"hljs-number\">3</span>;\n            <span class=\"hljs-keyword\">byte</span> b2 = <span class=\"hljs-number\">4</span>;\n            <span class=\"hljs-keyword\">byte</span> b3 = b1 + b2;  <span class=\"hljs-comment\">//存在精度损失，因为计算时先转int型，随后赋值时存在类型降低</span>\n            <span class=\"hljs-keyword\">byte</span> b4 = <span class=\"hljs-number\">3</span> + <span class=\"hljs-number\">4</span>;  <span class=\"hljs-comment\">//存在精度损失，因为数字默认int型，随后赋值时存在类型降低</span></code></pre>\n\n<pre><code>    C:下面的操作结果是什么呢?\n\n        byte b = (byte)130;  //-126\n</code></pre>\n\n\n\n<pre class=\"prettyprint\"><code class=\" hljs mathematica\">    <span class=\"hljs-keyword\">D</span>:字符参与运算\n            是查找ASCII里面的值\n            <span class=\"hljs-string\">'a'</span>     <span class=\"hljs-number\">97</span>\n            <span class=\"hljs-string\">'A'</span>     <span class=\"hljs-number\">65</span>\n            <span class=\"hljs-string\">'0'</span>     <span class=\"hljs-number\">48</span>\n\n\n</code></pre>\n\n<pre><code>        System.out.println('a'); //a\n        System.out.println('a' + 1); //98\n</code></pre>\n\n\n\n<pre class=\"prettyprint\"><code class=\" hljs mathematica\">    <span class=\"hljs-keyword\">E</span>:字符串参与运算\n            这里其实是字符串的连接\n\n\n</code></pre>\n\n<pre><code>        System.out.println(\"hello\"+'a'+1); //helloa1\n        System.out.println('a'+1+\"hello\"); //98hello\n        System.out.println(\"5+5=\"+5+5); //5+5=55\n        System.out.println(5+5+\"=5+5\"); //10=5+5\n</code></pre>\n\n<p>“`</p>            </div>\n            <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/markdown_views-ea0013b516.css\"/>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"Java标准库类",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                \n<div id=\"article_content\" class=\"article_content\" style=\"margin:20px 0px 0px;font-size:14px;line-height:26px;font-family:Arial;\">\n<p style=\"margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;\">\n<a href=\"http://lib.csdn.net/base/javaee\" class=\"replace_word\" title=\"Java EE知识库\" style=\"color:rgb(223,52,52);text-decoration:none;font-weight:bold;\">Java</a>/<br/>\njava/applet/<br/>\njava/applet/Applet<br/>\njava/applet/AppletContext<br/>\njava/applet/AppletStub<br/>\njava/applet/AudioClip<br/>\njava/awt/<br/>\njava/awt/AWTError<br/>\njava/awt/AWTEvent<br/>\njava/awt/AWTEventMulticaster<br/>\njava/awt/AWTException<br/>\njava/awt/AWTKeyStroke<br/>\njava/awt/AWTPermission<br/>\njava/awt/ActiveEvent<br/>\njava/awt/Adjustable<br/>\njava/awt/AlphaComposite<br/>\njava/awt/AttributeValue<br/>\njava/awt/BasicStroke<br/>\njava/awt/BorderLayout<br/>\njava/awt/BufferCapabilities<br/>\njava/awt/Button<br/>\njava/awt/Canvas<br/>\njava/awt/CardLayout<br/>\njava/awt/Checkbox<br/>\njava/awt/CheckboxGroup<br/>\njava/awt/CheckboxMenuItem<br/>\njava/awt/Choice<br/>\njava/awt/Color<br/>\njava/awt/ColorPaintContext<br/>\njava/awt/Component<br/>\njava/awt/ComponentOrientation<br/>\njava/awt/Composite<br/>\njava/awt/CompositeContext<br/>\njava/awt/Conditional<br/>\njava/awt/<a href=\"http://lib.csdn.net/base/docker\" class=\"replace_word\" title=\"Docker知识库\" style=\"color:rgb(223,52,52);text-decoration:none;font-weight:bold;\">Container</a><br/>\njava/awt/ContainerOrderFocusTraversalPolicy<br/>\njava/awt/Cursor<br/>\njava/awt/DefaultFocusTraversalPolicy<br/>\njava/awt/DefaultKeyboardFocusManager<br/>\njava/awt/Dialog<br/>\njava/awt/Dimension<br/>\njava/awt/DisplayMode<br/>\njava/awt/Event<br/>\njava/awt/EventDispatchThread<br/>\njava/awt/EventQueue<br/>\njava/awt/FileDialog<br/>\njava/awt/FlowLayout<br/>\njava/awt/FocusTraversalPolicy<br/>\njava/awt/Font<br/>\njava/awt/FontFormatException<br/>\njava/awt/FontMetrics<br/>\njava/awt/Frame<br/>\njava/awt/GradientPaint<br/>\njava/awt/GradientPaintContext<br/>\njava/awt/Graphics<br/>\njava/awt/Graphics2D<br/>\njava/awt/GraphicsCallback<br/>\njava/awt/GraphicsConfigTemplate<br/>\njava/awt/GraphicsConfiguration<br/>\njava/awt/GraphicsDevice<br/>\njava/awt/GraphicsEnvironment<br/>\njava/awt/GridBagConstraints<br/>\njava/awt/GridBagLayout<br/>\njava/awt/GridLayout<br/>\njava/awt/HeadlessException<br/>\njava/awt/IllegalComponentStateException<br/>\njava/awt/Image<br/>\njava/awt/ImageCapabilities<br/>\njava/awt/Insets<br/>\njava/awt/ItemSelectable<br/>\njava/awt/JobAttributes<br/>\njava/awt/KeyEventDispatcher<br/>\njava/awt/KeyEventPostProcessor<br/>\njava/awt/KeyboardFocusManager<br/>\njava/awt/Label<br/>\njava/awt/LayoutManager<br/>\njava/awt/LayoutManager2<br/>\njava/awt/List<br/>\njava/awt/MediaTracker<br/>\njava/awt/Menu<br/>\njava/awt/MenuBar<br/>\njava/awt/MenuComponent<br/>\njava/awt/MenuContainer<br/>\njava/awt/MenuItem<br/>\njava/awt/MenuShortcut<br/>\njava/awt/MouseInfo<br/>\njava/awt/PageAttributes<br/>\njava/awt/Paint<br/>\njava/awt/PaintContext<br/>\njava/awt/Panel<br/>\njava/awt/Point<br/>\njava/awt/PointerInfo<br/>\njava/awt/Polygon<br/>\njava/awt/PopupMenu<br/>\njava/awt/PrintGraphics<br/>\njava/awt/PrintJob<br/>\njava/awt/Rectangle<br/>\njava/awt/RenderingHints<br/>\njava/awt/Robot<br/>\njava/awt/ScrollPane<br/>\njava/awt/ScrollPaneAdjustable<br/>\njava/awt/Scrollbar<br/>\njava/awt/SentEvent<br/>\njava/awt/SequencedEvent<br/>\njava/awt/Shape<br/>\njava/awt/Stroke<br/>\njava/awt/SystemColor<br/>\njava/awt/TextArea<br/>\njava/awt/TextComponent<br/>\njava/awt/TextField<br/>\njava/awt/TexturePaint<br/>\njava/awt/TexturePaintContext<br/>\njava/awt/Toolkit<br/>\njava/awt/Transparency<br/>\njava/awt/Window<br/>\njava/awt/color/<br/>\njava/awt/color/CMMException<br/>\njava/awt/color/ColorSpace<br/>\njava/awt/color/ICC_ColorSpace<br/>\njava/awt/color/ICC_Profile<br/>\njava/awt/color/ICC_ProfileGray<br/>\njava/awt/color/ICC_ProfileRGB<br/>\njava/awt/color/ProfileDataException<br/>\njava/awt/datatransfer/<br/>\njava/awt/datatransfer/Clipboard<br/>\njava/awt/datatransfer/ClipboardOwner<br/>\njava/awt/datatransfer/DataFlavor<br/>\njava/awt/datatransfer/FlavorEvent<br/>\njava/awt/datatransfer/FlavorListener<br/>\njava/awt/datatransfer/FlavorMap<br/>\njava/awt/datatransfer/FlavorTable<br/>\njava/awt/datatransfer/MimeType<br/>\njava/awt/datatransfer/MimeTypeParameterList<br/>\njava/awt/datatransfer/MimeTypeParseException<br/>\njava/awt/datatransfer/StringSelection<br/>\njava/awt/datatransfer/SystemFlavorMap<br/>\njava/awt/datatransfer/Transferable<br/>\njava/awt/datatransfer/UnsupportedFlavorException<br/>\njava/awt/dnd/<br/>\njava/awt/dnd/Autoscroll<br/>\njava/awt/dnd/DnDConstants<br/>\njava/awt/dnd/DnDEventMulticaster<br/>\njava/awt/dnd/DragGestureEvent<br/>\njava/awt/dnd/DragGestureListener<br/>\njava/awt/dnd/DragGestureRecognizer<br/>\njava/awt/dnd/DragSource<br/>\njava/awt/dnd/DragSourceAdapter<br/>\njava/awt/dnd/DragSourceContext<br/>\njava/awt/dnd/DragSourceDragEvent<br/>\njava/awt/dnd/DragSourceDropEvent<br/>\njava/awt/dnd/DragSourceEvent<br/>\njava/awt/dnd/DragSourceListener<br/>\njava/awt/dnd/DragSourceMotionListener<br/>\njava/awt/dnd/DropTarget<br/>\njava/awt/dnd/DropTargetAdapter<br/>\njava/awt/dnd/DropTargetContext<br/>\njava/awt/dnd/DropTargetDragEvent<br/>\njava/awt/dnd/DropTargetDropEvent<br/>\njava/awt/dnd/DropTargetEvent<br/>\njava/awt/dnd/DropTargetListener<br/>\njava/awt/dnd/InvalidDnDOperationException<br/>\njava/awt/dnd/MouseDragGestureRecognizer<br/>\njava/awt/dnd/SerializationTester<br/>\njava/awt/dnd/peer/<br/>\njava/awt/dnd/peer/DragSourceContextPeer<br/>\njava/awt/dnd/peer/DropTargetContextPeer<br/>\njava/awt/dnd/peer/DropTargetPeer<br/>\njava/awt/event/<br/>\njava/awt/event/AWTEventListener<br/>\njava/awt/event/AWTEventListenerProxy<br/>\njava/awt/event/ActionEvent<br/>\njava/awt/event/ActionListener<br/>\njava/awt/event/AdjustmentEvent<br/>\njava/awt/event/AdjustmentListener<br/>\njava/awt/event/ComponentAdapter<br/>\njava/awt/event/ComponentEvent<br/>\njava/awt/event/ComponentListener<br/>\njava/awt/event/ContainerAdapter<br/>\njava/awt/event/ContainerEvent<br/>\njava/awt/event/ContainerListener<br/>\njava/awt/event/FocusAdapter<br/>\njava/awt/event/FocusEvent<br/>\njava/awt/event/FocusListener<br/>\njava/awt/event/HierarchyBoundsAdapter<br/>\njava/awt/event/HierarchyBoundsListener<br/>\njava/awt/event/HierarchyEvent<br/>\njava/awt/event/HierarchyListener<br/>\njava/awt/event/InputEvent<br/>\njava/awt/event/InputMethodEvent<br/>\njava/awt/event/InputMethodListener<br/>\njava/awt/event/InvocationEvent<br/>\njava/awt/event/ItemEvent<br/>\njava/awt/event/ItemListener<br/>\njava/awt/event/KeyAdapter<br/>\njava/awt/event/KeyEvent<br/>\njava/awt/event/KeyListener<br/>\njava/awt/event/MouseAdapter<br/>\njava/awt/event/MouseEvent<br/>\njava/awt/event/MouseListener<br/>\njava/awt/event/MouseMotionAdapter<br/>\njava/awt/event/MouseMotionListener<br/>\njava/awt/event/MouseWheelEvent<br/>\njava/awt/event/MouseWheelListener<br/>\njava/awt/event/NativeLibLoader<br/>\njava/awt/event/PaintEvent<br/>\njava/awt/event/TextEvent<br/>\njava/awt/event/TextListener<br/>\njava/awt/event/WindowAdapter<br/>\njava/awt/event/WindowEvent<br/>\njava/awt/event/WindowFocusListener<br/>\njava/awt/event/WindowListener<br/>\njava/awt/event/WindowStateListener<br/>\njava/awt/font/<br/>\njava/awt/font/CharArrayIterator<br/>\njava/awt/font/FontRenderContext<br/>\njava/awt/font/GlyphJustificationInfo<br/>\njava/awt/font/GlyphMetrics<br/>\njava/awt/font/GlyphVector<br/>\njava/awt/font/GraphicAttribute<br/>\njava/awt/font/ImageGraphicAttribute<br/>\njava/awt/font/LineBreakMeasurer<br/>\njava/awt/font/LineMetrics<br/>\njava/awt/font/MultipleMaster<br/>\njava/awt/font/NumericShaper<br/>\njava/awt/font/OpenType<br/>\njava/awt/font/ShapeGraphicAttribute<br/>\njava/awt/font/StyledParagraph<br/>\njava/awt/font/TextAttribute<br/>\njava/awt/font/TextHitInfo<br/>\njava/awt/font/TextJustifier<br/>\njava/awt/font/TextLayout<br/>\njava/awt/font/TextLine<br/>\njava/awt/font/TextMeasurer<br/>\njava/awt/font/TransformAttribute<br/>\njava/awt/geom/<br/>\njava/awt/geom/AffineTransform<br/>\njava/awt/geom/Arc2D<br/>\njava/awt/geom/ArcIterator<br/>\njava/awt/geom/Area<br/>\njava/awt/geom/CubicCurve2D<br/>\njava/awt/geom/CubicIterator<br/>\njava/awt/geom/Dimension2D<br/>\njava/awt/geom/Ellipse2D<br/>\njava/awt/geom/EllipseIterator<br/>\njava/awt/geom/FlatteningPathIterator<br/>\njava/awt/geom/GeneralPath<br/>\njava/awt/geom/GeneralPathIterator<br/>\njava/awt/geom/IllegalPathStateException<br/>\njava/awt/geom/Line2D<br/>\njava/awt/geom/LineIterator<br/>\njava/awt/geom/NoninvertibleTransformException<br/>\njava/awt/geom/PathIterator<br/>\njava/awt/geom/Point2D<br/>\njava/awt/geom/QuadCurve2D<br/>\njava/awt/geom/QuadIterator<br/>\njava/awt/geom/RectIterator<br/>\njava/awt/geom/Rectangle2D<br/>\njava/awt/geom/RectangularShape<br/>\njava/awt/geom/RoundRectIterator<br/>\njava/awt/geom/RoundRectangle2D<br/>\njava/awt/im/<br/>\njava/awt/im/InputContext<br/>\njava/awt/im/InputMethodHighlight<br/>\njava/awt/im/InputMethodRequests<br/>\njava/awt/im/InputSubset<br/>\njava/awt/im/spi/<br/>\njava/awt/im/spi/InputMethod<br/>\njava/awt/im/spi/InputMethodContext<br/>\njava/awt/im/spi/InputMethodDescriptor<br/>\njava/awt/image/<br/>\njava/awt/image/AffineTransformOp<br/>\njava/awt/image/AreaAveragingScaleFilter<br/>\njava/awt/image/BandCombineOp<br/>\njava/awt/image/BandedSampleModel<br/>\njava/awt/image/BufferStrategy<br/>\njava/awt/image/BufferedImage<br/>\njava/awt/image/BufferedImageFilter<br/>\njava/awt/image/BufferedImageOp<br/>\njava/awt/image/ByteLookupTable<br/>\njava/awt/image/ColorConvertOp<br/>\njava/awt/image/ColorModel<br/>\njava/awt/image/ComponentColorModel<br/>\njava/awt/image/ComponentSampleModel<br/>\njava/awt/image/ConvolveOp<br/>\njava/awt/image/CropImageFilter<br/>\njava/awt/image/DataBuffer<br/>\njava/awt/image/DataBufferByte<br/>\njava/awt/image/DataBufferDouble<br/>\njava/awt/image/DataBufferFloat<br/>\njava/awt/image/DataBufferInt<br/>\njava/awt/image/DataBufferShort<br/>\njava/awt/image/DataBufferUShort<br/>\njava/awt/image/DirectColorModel<br/>\njava/awt/image/FilteredImageSource<br/>\njava/awt/image/ImageConsumer<br/>\njava/awt/image/ImageFilter<br/>\njava/awt/image/ImageObserver<br/>\njava/awt/image/ImageProducer<br/>\njava/awt/image/ImagingOpException<br/>\njava/awt/image/IndexColorModel<br/>\njava/awt/image/Kernel<br/>\njava/awt/image/LookupOp<br/>\njava/awt/image/LookupTable<br/>\njava/awt/image/MemoryImageSource<br/>\njava/awt/image/MultiPixelPackedSampleModel<br/>\njava/awt/image/PackedColorModel<br/>\njava/awt/image/PixelGrabber<br/>\njava/awt/image/PixelInterleavedSampleModel<br/>\njava/awt/image/RGBImageFilter<br/>\njava/awt/image/Raster<br/>\njava/awt/image/RasterFormatException<br/>\njava/awt/image/RasterOp<br/>\njava/awt/image/RenderedImage<br/>\njava/awt/image/ReplicateScaleFilter<br/>\njava/awt/image/RescaleOp<br/>\njava/awt/image/SampleModel<br/>\njava/awt/image/ShortLookupTable<br/>\njava/awt/image/SinglePixelPackedSampleModel<br/>\njava/awt/image/TileObserver<br/>\njava/awt/image/VolatileImage<br/>\njava/awt/image/WritableRaster<br/>\njava/awt/image/WritableRenderedImage<br/>\njava/awt/image/renderable/<br/>\njava/awt/image/renderable/ContextualRenderedImageFactory<br/>\njava/awt/image/renderable/ParameterBlock<br/>\njava/awt/image/renderable/RenderContext<br/>\njava/awt/image/renderable/RenderableImage<br/>\njava/awt/image/renderable/RenderableImageOp<br/>\njava/awt/image/renderable/RenderableImageProducer<br/>\njava/awt/image/renderable/RenderedImageFactory<br/>\njava/awt/peer/<br/>\njava/awt/peer/ButtonPeer<br/>\njava/awt/peer/CanvasPeer<br/>\njava/awt/peer/CheckboxMenuItemPeer<br/>\njava/awt/peer/CheckboxPeer<br/>\njava/awt/peer/ChoicePeer<br/>\njava/awt/peer/ComponentPeer<br/>\njava/awt/peer/ContainerPeer<br/>\njava/awt/peer/DialogPeer<br/>\njava/awt/peer/FileDialogPeer<br/>\njava/awt/peer/FontPeer<br/>\njava/awt/peer/FramePeer<br/>\njava/awt/peer/KeyboardFocusManagerPeer<br/>\njava/awt/peer/LabelPeer<br/>\njava/awt/peer/LightweightPeer<br/>\njava/awt/peer/ListPeer<br/>\njava/awt/peer/MenuBarPeer<br/>\njava/awt/peer/MenuComponentPeer<br/>\njava/awt/peer/MenuItemPeer<br/>\njava/awt/peer/MenuPeer<br/>\njava/awt/peer/MouseInfoPeer<br/>\njava/awt/peer/PanelPeer<br/>\njava/awt/peer/PopupMenuPeer<br/>\njava/awt/peer/RobotPeer<br/>\njava/awt/peer/ScrollPanePeer<br/>\njava/awt/peer/ScrollbarPeer<br/>\njava/awt/peer/TextAreaPeer<br/>\njava/awt/peer/TextComponentPeer<br/>\njava/awt/peer/TextFieldPeer<br/>\njava/awt/peer/WindowPeer<br/>\njava/awt/print/<br/>\njava/awt/print/Book<br/>\njava/awt/print/PageFormat<br/>\njava/awt/print/Pageable<br/>\njava/awt/print/Paper<br/>\njava/awt/print/Printable<br/>\njava/awt/print/PrinterAbortException<br/>\njava/awt/print/PrinterException<br/>\njava/awt/print/PrinterGraphics<br/>\njava/awt/print/PrinterIOException<br/>\njava/awt/print/PrinterJob<br/>\njava/beans/<br/>\njava/beans/AppletInitializer<br/>\njava/beans/BeanDescriptor<br/>\njava/beans/BeanInfo<br/>\njava/beans/Beans<br/>\njava/beans/Customizer<br/>\njava/beans/DefaultPersistenceDelegate<br/>\njava/beans/DesignMode<br/>\njava/beans/Encoder<br/>\njava/beans/EventHandler<br/>\njava/beans/EventSetDescriptor<br/>\njava/beans/ExceptionListener<br/>\njava/beans/Expression<br/>\njava/beans/FeatureDescriptor<br/>\njava/beans/IndexedPropertyChangeEvent<br/>\njava/beans/IndexedPropertyDescriptor<br/>\njava/beans/IntrospectionException<br/>\njava/beans/Introspector<br/>\njava/beans/MetaData<br/>\njava/beans/MethodDescriptor<br/>\njava/beans/NameGenerator<br/>\njava/beans/ParameterDescriptor<br/>\njava/beans/PersistenceDelegate<br/>\njava/beans/PropertyChangeEvent<br/>\njava/beans/PropertyChangeListener<br/>\njava/beans/PropertyChangeListenerProxy<br/>\njava/beans/PropertyChangeSupport<br/>\njava/beans/PropertyDescriptor<br/>\njava/beans/PropertyEditor<br/>\njava/beans/PropertyEditorManager<br/>\njava/beans/PropertyEditorSupport<br/>\njava/beans/PropertyVetoException<br/>\njava/beans/ReflectionUtils<br/>\njava/beans/SimpleBeanInfo<br/>\njava/beans/Statement<br/>\njava/beans/VetoableChangeListener<br/>\njava/beans/VetoableChangeListenerProxy<br/>\njava/beans/VetoableChangeSupport<br/>\njava/beans/Visibility<br/>\njava/beans/XMLDecoder<br/>\njava/beans/XMLEncoder<br/>\njava/beans/beancontext/<br/>\njava/beans/beancontext/BeanContext<br/>\njava/beans/beancontext/BeanContextChild<br/>\njava/beans/beancontext/BeanContextChildComponentProxy<br/>\njava/beans/beancontext/BeanContextChildSupport<br/>\njava/beans/beancontext/BeanContextContainerProxy<br/>\njava/beans/beancontext/BeanContextEvent<br/>\njava/beans/beancontext/BeanContextMembershipEvent<br/>\njava/beans/beancontext/BeanContextMembershipListener<br/>\njava/beans/beancontext/BeanContextProxy<br/>\njava/beans/beancontext/BeanContextServiceAvailableEvent<br/>\njava/beans/beancontext/BeanContextServiceProvider<br/>\njava/beans/beancontext/BeanContextServiceProviderBeanInfo<br/>\njava/beans/beancontext/BeanContextServiceRevokedEvent<br/>\njava/beans/beancontext/BeanContextServiceRevokedListener<br/>\njava/beans/beancontext/BeanContextServices<br/>\njava/beans/beancontext/BeanContextServicesListener<br/>\njava/beans/beancontext/BeanContextServicesSupport<br/>\njava/beans/beancontext/BeanContextSupport<br/>\njava/io/<br/>\njava/io/Bits<br/>\njava/io/BufferedInputStream<br/>\njava/io/BufferedOutputStream<br/>\njava/io/BufferedReader<br/>\njava/io/BufferedWriter<br/>\njava/io/ByteArrayInputStream<br/>\njava/io/ByteArrayOutputStream<br/>\njava/io/CharArrayReader<br/>\njava/io/CharArrayWriter<br/>\njava/io/CharConversionException<br/>\njava/io/Closeable<br/>\njava/io/DataInput<br/>\njava/io/DataInputStream<br/>\njava/io/DataOutput<br/>\njava/io/DataOutputStream<br/>\njava/io/EOFException<br/>\njava/io/ExpiringCache<br/>\njava/io/Externalizable<br/>\njava/io/File<br/>\njava/io/FileFilter<br/>\njava/io/FileInputStream<br/>\njava/io/FileNotFoundException<br/>\njava/io/FileOutputStream<br/>\njava/io/FilePermission<br/>\njava/io/FileReader<br/>\njava/io/FileSystem<br/>\njava/io/FileWriter<br/>\njava/io/FilenameFilter<br/>\njava/io/FilterInputStream<br/>\njava/io/FilterOutputStream<br/>\njava/io/FilterReader<br/>\njava/io/FilterWriter<br/>\njava/io/Flushable<br/>\njava/io/IOException<br/>\njava/io/InputStream<br/>\njava/io/InputStreamReader<br/>\njava/io/InterruptedIOException<br/>\njava/io/InvalidClassException<br/>\njava/io/InvalidObjectException<br/>\njava/io/LineNumberInputStream<br/>\njava/io/LineNumberReader<br/>\njava/io/NotActiveException<br/>\njava/io/NotSerializableException<br/>\njava/io/ObjectInput<br/>\njava/io/ObjectInputStream<br/>\njava/io/ObjectInputValidation<br/>\njava/io/ObjectOutput<br/>\njava/io/ObjectOutputStream<br/>\njava/io/ObjectStreamClass<br/>\njava/io/ObjectStreamConstants<br/>\njava/io/ObjectStreamException<br/>\njava/io/ObjectStreamField<br/>\njava/io/OptionalDataException<br/>\njava/io/OutputStream<br/>\njava/io/OutputStreamWriter<br/>\njava/io/PipedInputStream<br/>\njava/io/PipedOutputStream<br/>\njava/io/PipedReader<br/>\njava/io/PipedWriter<br/>\njava/io/PrintStream<br/>\njava/io/PrintWriter<br/>\njava/io/PushbackInputStream<br/>\njava/io/PushbackReader<br/>\njava/io/RandomAccessFile<br/>\njava/io/Reader<br/>\njava/io/SequenceInputStream<br/>\njava/io/Serializable<br/>\njava/io/SerializablePermission<br/>\njava/io/StreamCorruptedException<br/>\njava/io/StreamTokenizer<br/>\njava/io/StringBufferInputStream<br/>\njava/io/StringReader<br/>\njava/io/StringWriter<br/>\njava/io/SyncFailedException<br/>\njava/io/UTFDataFormatException<br/>\njava/io/UnsupportedEncodingException<br/>\njava/io/WriteAbortedException<br/>\njava/io/Writer<br/>\njava/io/FileDescriptor<br/>\njava/io/UnixFileSystem<br/>\njava/lang/<br/>\njava/lang/AbstractMethodError<br/>\njava/lang/AbstractStringBuilder<br/>\njava/lang/Appendable<br/>\njava/lang/ArithmeticException<br/>\njava/lang/ArrayIndexOutOfBoundsException<br/>\njava/lang/ArrayStoreException<br/>\njava/lang/AssertionError<br/>\njava/lang/AssertionStatusDirectives<br/>\njava/lang/Boolean<br/>\njava/lang/Byte<br/>\njava/lang/CharSequence<br/>\njava/lang/Character<br/>\njava/lang/Class<br/>\njava/lang/ClassCastException<br/>\njava/lang/ClassCircularityError<br/>\njava/lang/ClassFormatError<br/>\njava/lang/ClassLoader<br/>\njava/lang/ClassNotFoundException<br/>\njava/lang/CloneNotSupportedException<br/>\njava/lang/Cloneable<br/>\njava/lang/Comparable<br/>\njava/lang/Compiler<br/>\njava/lang/ConditionalSpecialCasing<br/>\njava/lang/Deprecated<br/>\njava/lang/Double<br/>\njava/lang/Enum<br/>\njava/lang/EnumConstantNotPresentException<br/>\njava/lang/Error<br/>\njava/lang/Exception<br/>\njava/lang/ExceptionInInitializerError<br/>\njava/lang/Float<br/>\njava/lang/IllegalAccessError<br/>\njava/lang/IllegalAccessException<br/>\njava/lang/IllegalArgumentException<br/>\njava/lang/IllegalMonitorStateException<br/>\njava/lang/IllegalStateException<br/>\njava/lang/IllegalThreadStateException<br/>\njava/lang/IncompatibleClassChangeError<br/>\njava/lang/IndexOutOfBoundsException<br/>\njava/lang/InheritableThreadLocal<br/>\njava/lang/InstantiationError<br/>\njava/lang/InstantiationException<br/>\njava/lang/Integer<br/>\njava/lang/InternalError<br/>\njava/lang/InterruptedException<br/>\njava/lang/Iterable<br/>\njava/lang/LinkageError<br/>\njava/lang/Long<br/>\njava/lang/Math<br/>\njava/lang/NegativeArraySizeException<br/>\njava/lang/NoClassDefFoundError<br/>\njava/lang/NoSuchFieldError<br/>\njava/lang/NoSuchFieldException<br/>\njava/lang/NoSuchMethodError<br/>\njava/lang/NoSuchMethodException<br/>\njava/lang/NullPointerException<br/>\njava/lang/Number<br/>\njava/lang/NumberFormatException<br/>\njava/lang/Object<br/>\njava/lang/OutOfMemoryError<br/>\njava/lang/Override<br/>\njava/lang/Package<br/>\njava/lang/Process<br/>\njava/lang/ProcessBuilder<br/>\njava/lang/Readable<br/>\njava/lang/Runnable<br/>\njava/lang/Runtime<br/>\njava/lang/RuntimeException<br/>\njava/lang/RuntimePermission<br/>\njava/lang/SecurityException<br/>\njava/lang/SecurityManager<br/>\njava/lang/Short<br/>\njava/lang/Shutdown<br/>\njava/lang/StackOverflowError<br/>\njava/lang/StackTraceElement<br/>\njava/lang/StrictMath<br/>\njava/lang/String<br/>\njava/lang/StringBuffer<br/>\njava/lang/StringBuilder<br/>\njava/lang/StringCoding<br/>\njava/lang/StringIndexOutOfBoundsException<br/>\njava/lang/SuppressWarnings<br/>\njava/lang/System<br/>\njava/lang/Thread<br/>\njava/lang/ThreadDeath<br/>\njava/lang/ThreadGroup<br/>\njava/lang/ThreadLocal<br/>\njava/lang/Throwable<br/>\njava/lang/TypeNotPresentException<br/>\njava/lang/UnknownError<br/>\njava/lang/UnsatisfiedLinkError<br/>\njava/lang/UnsupportedClassVersionError<br/>\njava/lang/UnsupportedOperationException<br/>\njava/lang/VerifyError<br/>\njava/lang/VirtualMachineError<br/>\njava/lang/Void<br/>\njava/lang/annotation/<br/>\njava/lang/annotation/Annotation<br/>\njava/lang/annotation/AnnotationFormatError<br/>\njava/lang/annotation/AnnotationTypeMismatchException<br/>\njava/lang/annotation/Documented<br/>\njava/lang/annotation/ElementType<br/>\njava/lang/annotation/IncompleteAnnotationException<br/>\njava/lang/annotation/Inherited<br/>\njava/lang/annotation/Retention<br/>\njava/lang/annotation/RetentionPolicy<br/>\njava/lang/annotation/Target<br/>\njava/lang/instrument/<br/>\njava/lang/instrument/ClassDefinition<br/>\njava/lang/instrument/ClassFileTransformer<br/>\njava/lang/instrument/IllegalClassFormatException<br/>\njava/lang/instrument/Instrumentation<br/>\njava/lang/instrument/UnmodifiableClassException<br/>\njava/lang/management/<br/>\njava/lang/management/ClassLoadingMXBean<br/>\njava/lang/management/CompilationMXBean<br/>\njava/lang/management/GarbageCollectorMXBean<br/>\njava/lang/management/ManagementFactory<br/>\njava/lang/management/ManagementPermission<br/>\njava/lang/management/MemoryMXBean<br/>\njava/lang/management/MemoryManagerMXBean<br/>\njava/lang/management/MemoryNotificationInfo<br/>\njava/lang/management/MemoryPoolMXBean<br/>\njava/lang/management/MemoryType<br/>\njava/lang/management/MemoryUsage<br/>\njava/lang/management/OperatingSystemMXBean<br/>\njava/lang/management/RuntimeMXBean<br/>\njava/lang/management/ThreadInfo<br/>\njava/lang/management/ThreadMXBean<br/>\njava/lang/ref/<br/>\njava/lang/ref/FinalReference<br/>\njava/lang/ref/Finalizer<br/>\njava/lang/ref/PhantomReference<br/>\njava/lang/ref/Reference<br/>\njava/lang/ref/ReferenceQueue<br/>\njava/lang/ref/SoftReference<br/>\njava/lang/ref/WeakReference<br/>\njava/lang/reflect/<br/>\njava/lang/reflect/AccessibleObject<br/>\njava/lang/reflect/AnnotatedElement<br/>\njava/lang/reflect/Array<br/>\njava/lang/reflect/Constructor<br/>\njava/lang/reflect/Field<br/>\njava/lang/reflect/GenericArrayType<br/>\njava/lang/reflect/GenericDeclaration<br/>\njava/lang/reflect/GenericSignatureFormatError<br/>\njava/lang/reflect/InvocationHandler<br/>\njava/lang/reflect/InvocationTargetException<br/>\njava/lang/reflect/MalformedParameterizedTypeException<br/>\njava/lang/reflect/Member<br/>\njava/lang/reflect/Method<br/>\njava/lang/reflect/Modifier<br/>\njava/lang/reflect/ParameterizedType<br/>\njava/lang/reflect/Proxy<br/>\njava/lang/reflect/ReflectAccess<br/>\njava/lang/reflect/ReflectPermission<br/>\njava/lang/reflect/Type<br/>\njava/lang/reflect/TypeVariable<br/>\njava/lang/reflect/UndeclaredThrowableException<br/>\njava/lang/reflect/WildcardType<br/>\njava/lang/ProcessEnvironment<br/>\njava/lang/ProcessImpl<br/>\njava/lang/Terminator<br/>\njava/lang/CharacterDataLatin1<br/>\njava/lang/CharacterData00<br/>\njava/lang/CharacterData01<br/>\njava/lang/CharacterData02<br/>\njava/lang/CharacterData0E<br/>\njava/lang/CharacterDataUndefined<br/>\njava/lang/CharacterDataPrivateUse<br/>\njava/lang/UNIXProcess<br/>\njava/math/<br/>\njava/math/BigDecimal<br/>\njava/math/BigInteger<br/>\njava/math/BitSieve<br/>\njava/math/MathContext<br/>\njava/math/MutableBigInteger<br/>\njava/math/RoundingMode<br/>\njava/math/SignedMutableBigInteger<br/>\njava/net/<br/>\njava/net/Authenticator<br/>\njava/net/BindException<br/>\njava/net/CacheRequest<br/>\njava/net/CacheResponse<br/>\njava/net/ConnectException<br/>\njava/net/ContentHandler<br/>\njava/net/ContentHandlerFactory<br/>\njava/net/CookieHandler<br/>\njava/net/DatagramPacket<br/>\njava/net/DatagramSocket<br/>\njava/net/DatagramSocketImpl<br/>\njava/net/DatagramSocketImplFactory<br/>\njava/net/FileNameMap<br/>\njava/net/HttpRetryException<br/>\njava/net/HttpURLConnection<br/>\njava/net/Inet4Address<br/>\njava/net/Inet4AddressImpl<br/>\njava/net/Inet6Address<br/>\njava/net/Inet6AddressImpl<br/>\njava/net/InetAddress<br/>\njava/net/InetAddressImpl<br/>\njava/net/InetSocketAddress<br/>\njava/net/JarURLConnection<br/>\njava/net/MalformedURLException<br/>\njava/net/MulticastSocket<br/>\njava/net/NetPermission<br/>\njava/net/NetworkInterface<br/>\njava/net/NoRouteToHostException<br/>\njava/net/PasswordAuthentication<br/>\njava/net/PlainDatagramSocketImpl<br/>\njava/net/PlainSocketImpl<br/>\njava/net/PortUnreachableException<br/>\njava/net/ProtocolException<br/>\njava/net/Proxy<br/>\njava/net/ProxySelector<br/>\njava/net/ResponseCache<br/>\njava/net/SecureCacheResponse<br/>\njava/net/ServerSocket<br/>\njava/net/Socket<br/>\njava/net/SocketAddress<br/>\njava/net/SocketException<br/>\njava/net/SocketImpl<br/>\njava/net/SocketImplFactory<br/>\njava/net/SocketInputStream<br/>\njava/net/SocketOptions<br/>\njava/net/SocketOutputStream<br/>\njava/net/SocketPermission<br/>\njava/net/SocketTimeoutException<br/>\njava/net/SocksConsts<br/>\njava/net/SocksSocketImpl<br/>\njava/net/URI<br/>\njava/net/URISyntaxException<br/>\njava/net/URL<br/>\njava/net/URLClassLoader<br/>\njava/net/URLConnection<br/>\njava/net/URLDecoder<br/>\njava/net/URLEncoder<br/>\njava/net/URLStreamHandler<br/>\njava/net/URLStreamHandlerFactory<br/>\njava/net/UnknownHostException<br/>\njava/net/UnknownServiceException<br/>\njava/nio/<br/>\njava/nio/Bits<br/>\njava/nio/Buffer<br/>\njava/nio/ByteOrder<br/>\njava/nio/MappedByteBuffer<br/>\njava/nio/StringCharBuffer<br/>\njava/nio/channels/<br/>\njava/nio/channels/ByteChannel<br/>\njava/nio/channels/Channel<br/>\njava/nio/channels/Channels<br/>\njava/nio/channels/DatagramChannel<br/>\njava/nio/channels/FileChannel<br/>\njava/nio/channels/FileLock<br/>\njava/nio/channels/GatheringByteChannel<br/>\njava/nio/channels/InterruptibleChannel<br/>\njava/nio/channels/Pipe<br/>\njava/nio/channels/ReadableByteChannel<br/>\njava/nio/channels/ScatteringByteChannel<br/>\njava/nio/channels/SelectableChannel<br/>\njava/nio/channels/SelectionKey<br/>\njava/nio/channels/Selector<br/>\njava/nio/channels/ServerSocketChannel<br/>\njava/nio/channels/SocketChannel<br/>\njava/nio/channels/WritableByteChannel<br/>\njava/nio/channels/spi/<br/>\njava/nio/channels/spi/AbstractInterruptibleChannel<br/>\njava/nio/channels/spi/AbstractSelectableChannel<br/>\njava/nio/channels/spi/AbstractSelectionKey<br/>\njava/nio/channels/spi/AbstractSelector<br/>\njava/nio/channels/spi/SelectorProvider<br/>\njava/nio/channels/ClosedChannelException<br/>\njava/nio/channels/FileLockInterruptionException<br/>\njava/nio/channels/AsynchronousCloseException<br/>\njava/nio/channels/ClosedByInterruptException<br/>\njava/nio/channels/IllegalSelectorException<br/>\njava/nio/channels/UnresolvedAddressException<br/>\njava/nio/channels/UnsupportedAddressTypeException<br/>\njava/nio/channels/AlreadyConnectedException<br/>\njava/nio/channels/ConnectionPendingException<br/>\njava/nio/channels/ClosedSelectorException<br/>\njava/nio/channels/CancelledKeyException<br/>\njava/nio/channels/IllegalBlockingModeException<br/>\njava/nio/channels/NoConnectionPendingException<br/>\njava/nio/channels/NonReadableChannelException<br/>\njava/nio/channels/NonWritableChannelException<br/>\njava/nio/channels/NotYetBoundException<br/>\njava/nio/channels/NotYetConnectedException<br/>\njava/nio/channels/OverlappingFileLockException<br/>\njava/nio/charset/<br/>\njava/nio/charset/Charset<br/>\njava/nio/charset/CoderMalfunctionError<br/>\njava/nio/charset/CoderResult<br/>\njava/nio/charset/CodingErrorAction<br/>\njava/nio/charset/MalformedInputException<br/>\njava/nio/charset/UnmappableCharacterException<br/>\njava/nio/charset/spi/<br/>\njava/nio/charset/spi/CharsetProvider<br/>\njava/nio/charset/CharsetDecoder<br/>\njava/nio/charset/CharsetEncoder<br/>\njava/nio/charset/CharacterCodingException<br/>\njava/nio/charset/IllegalCharsetNameException<br/>\njava/nio/charset/UnsupportedCharsetException<br/>\njava/nio/ByteBuffer<br/>\njava/nio/CharBuffer<br/>\njava/nio/ShortBuffer<br/>\njava/nio/IntBuffer<br/>\njava/nio/LongBuffer<br/>\njava/nio/FloatBuffer<br/>\njava/nio/DoubleBuffer<br/>\njava/nio/HeapByteBuffer<br/>\njava/nio/HeapByteBufferR<br/>\njava/nio/HeapCharBuffer<br/>\njava/nio/HeapCharBufferR<br/>\njava/nio/HeapShortBuffer<br/>\njava/nio/HeapShortBufferR<br/>\njava/nio/HeapIntBuffer<br/>\njava/nio/HeapIntBufferR<br/>\njava/nio/HeapLongBuffer<br/>\njava/nio/HeapLongBufferR<br/>\njava/nio/HeapFloatBuffer<br/>\njava/nio/HeapFloatBufferR<br/>\njava/nio/HeapDoubleBuffer<br/>\njava/nio/HeapDoubleBufferR<br/>\njava/nio/DirectByteBuffer<br/>\njava/nio/DirectByteBufferR<br/>\njava/nio/DirectCharBufferU<br/>\njava/nio/DirectCharBufferRU<br/>\njava/nio/DirectShortBufferU<br/>\njava/nio/DirectShortBufferRU<br/>\njava/nio/DirectIntBufferU<br/>\njava/nio/DirectIntBufferRU<br/>\njava/nio/DirectLongBufferU<br/>\njava/nio/DirectLongBufferRU<br/>\njava/nio/DirectFloatBufferU<br/>\njava/nio/DirectFloatBufferRU<br/>\njava/nio/DirectDoubleBufferU<br/>\njava/nio/DirectDoubleBufferRU<br/>\njava/nio/DirectCharBufferS<br/>\njava/nio/DirectCharBufferRS<br/>\njava/nio/DirectShortBufferS<br/>\njava/nio/DirectShortBufferRS<br/>\njava/nio/DirectIntBufferS<br/>\njava/nio/DirectIntBufferRS<br/>\njava/nio/DirectLongBufferS<br/>\njava/nio/DirectLongBufferRS<br/>\njava/nio/DirectFloatBufferS<br/>\njava/nio/DirectFloatBufferRS<br/>\njava/nio/DirectDoubleBufferS<br/>\njava/nio/DirectDoubleBufferRS<br/>\njava/nio/ByteBufferAsCharBufferB<br/>\njava/nio/ByteBufferAsCharBufferRB<br/>\njava/nio/ByteBufferAsShortBufferB<br/>\njava/nio/ByteBufferAsShortBufferRB<br/>\njava/nio/ByteBufferAsIntBufferB<br/>\njava/nio/ByteBufferAsIntBufferRB<br/>\njava/nio/ByteBufferAsLongBufferB<br/>\njava/nio/ByteBufferAsLongBufferRB<br/>\njava/nio/ByteBufferAsFloatBufferB<br/>\njava/nio/ByteBufferAsFloatBufferRB<br/>\njava/nio/ByteBufferAsDoubleBufferB<br/>\njava/nio/ByteBufferAsDoubleBufferRB<br/>\njava/nio/ByteBufferAsCharBufferL<br/>\njava/nio/ByteBufferAsCharBufferRL<br/>\njava/nio/ByteBufferAsShortBufferL<br/>\njava/nio/ByteBufferAsShortBufferRL<br/>\njava/nio/ByteBufferAsIntBufferL<br/>\njava/nio/ByteBufferAsIntBufferRL<br/>\njava/nio/ByteBufferAsLongBufferL<br/>\njava/nio/ByteBufferAsLongBufferRL<br/>\njava/nio/ByteBufferAsFloatBufferL<br/>\njava/nio/ByteBufferAsFloatBufferRL<br/>\njava/nio/ByteBufferAsDoubleBufferL<br/>\njava/nio/ByteBufferAsDoubleBufferRL<br/>\njava/nio/BufferOverflowException<br/>\njava/nio/BufferUnderflowException<br/>\njava/nio/InvalidMarkException<br/>\njava/nio/ReadOnlyBufferException<br/>\njava/rmi/<br/>\njava/rmi/AccessException<br/>\njava/rmi/AlreadyBoundException<br/>\njava/rmi/ConnectException<br/>\njava/rmi/ConnectIOException<br/>\njava/rmi/MarshalException<br/>\njava/rmi/MarshalledObject<br/>\njava/rmi/Naming<br/>\njava/rmi/NoSuchObjectException<br/>\njava/rmi/NotBoundException<br/>\njava/rmi/RMISecurityException<br/>\njava/rmi/RMISecurityManager<br/>\njava/rmi/Remote<br/>\njava/rmi/RemoteException<br/>\njava/rmi/ServerError<br/>\njava/rmi/ServerException<br/>\njava/rmi/ServerRuntimeException<br/>\njava/rmi/StubNotFoundException<br/>\njava/rmi/UnexpectedException<br/>\njava/rmi/UnknownHostException<br/>\njava/rmi/UnmarshalException<br/>\njava/rmi/activation/<br/>\njava/rmi/activation/Activatable<br/>\njava/rmi/activation/ActivateFailedException<br/>\njava/rmi/activation/ActivationDesc<br/>\njava/rmi/activation/ActivationException<br/>\njava/rmi/activation/ActivationGroup<br/>\njava/rmi/activation/ActivationGroupDesc<br/>\njava/rmi/activation/ActivationGroupID<br/>\njava/rmi/activation/ActivationID<br/>\njava/rmi/activation/ActivationInstantiator<br/>\njava/rmi/activation/ActivationMonitor<br/>\njava/rmi/activation/ActivationSystem<br/>\njava/rmi/activation/Activator<br/>\njava/rmi/activation/UnknownGroupException<br/>\njava/rmi/activation/UnknownObjectException<br/>\njava/rmi/dgc/<br/>\njava/rmi/dgc/DGC<br/>\njava/rmi/dgc/Lease<br/>\njava/rmi/dgc/VMID<br/>\njava/rmi/registry/<br/>\njava/rmi/registry/LocateRegistry<br/>\njava/rmi/registry/Registry<br/>\njava/rmi/registry/RegistryHandler<br/>\njava/rmi/server/<br/>\njava/rmi/server/ExportException<br/>\njava/rmi/server/LoaderHandler<br/>\njava/rmi/server/LogStream<br/>\njava/rmi/server/ObjID<br/>\njava/rmi/server/Operation<br/>\njava/rmi/server/RMIClassLoader<br/>\njava/rmi/server/RMIClassLoaderSpi<br/>\njava/rmi/server/RMIClientSocketFactory<br/>\njava/rmi/server/RMIFailureHandler<br/>\njava/rmi/server/RMIServerSocketFactory<br/>\njava/rmi/server/RMISocketFactory<br/>\njava/rmi/server/RemoteCall<br/>\njava/rmi/server/RemoteObject<br/>\njava/rmi/server/RemoteObjectInvocationHandler<br/>\njava/rmi/server/RemoteRef<br/>\njava/rmi/server/RemoteServer<br/>\njava/rmi/server/RemoteStub<br/>\njava/rmi/server/ServerCloneException<br/>\njava/rmi/server/ServerNotActiveException<br/>\njava/rmi/server/ServerRef<br/>\njava/rmi/server/Skeleton<br/>\njava/rmi/server/SkeletonMismatchException<br/>\njava/rmi/server/SkeletonNotFoundException<br/>\njava/rmi/server/SocketSecurityException<br/>\njava/rmi/server/UID<br/>\njava/rmi/server/UnicastRemoteObject<br/>\njava/rmi/server/Unreferenced<br/>\njava/security/<br/>\njava/security/AccessControlContext<br/>\njava/security/AccessControlException<br/>\njava/security/AccessController<br/>\njava/security/AlgorithmParameterGenerator<br/>\njava/security/AlgorithmParameterGeneratorSpi<br/>\njava/security/AlgorithmParameters<br/>\njava/security/AlgorithmParametersSpi<br/>\njava/security/AllPermission<br/>\njava/security/AuthProvider<br/>\njava/security/BasicPermission<br/>\njava/security/Certificate<br/>\njava/security/CodeSigner<br/>\njava/security/CodeSource<br/>\njava/security/DigestException<br/>\njava/security/DigestInputStream<br/>\njava/security/DigestOutputStream<br/>\njava/security/DomainCombiner<br/>\njava/security/GeneralSecurityException<br/>\njava/security/Guard<br/>\njava/security/GuardedObject<br/>\njava/security/Identity<br/>\njava/security/IdentityScope<br/>\njava/security/InvalidAlgorithmParameterException<br/>\njava/security/InvalidKeyException<br/>\njava/security/InvalidParameterException<br/>\njava/security/Key<br/>\njava/security/KeyException<br/>\njava/security/KeyFactory<br/>\njava/security/KeyFactorySpi<br/>\njava/security/KeyManagementException<br/>\njava/security/KeyPair<br/>\njava/security/KeyPairGenerator<br/>\njava/security/KeyPairGeneratorSpi<br/>\njava/security/KeyRep<br/>\njava/security/KeyStore<br/>\njava/security/KeyStoreException<br/>\njava/security/KeyStoreSpi<br/>\njava/security/MessageDigest<br/>\njava/security/MessageDigestSpi<br/>\njava/security/NoSuchAlgorithmException<br/>\njava/security/NoSuchProviderException<br/>\njava/security/Permission<br/>\njava/security/PermissionCollection<br/>\njava/security/Permissions<br/>\njava/security/Policy<br/>\njava/security/Principal<br/>\njava/security/PrivateKey<br/>\njava/security/PrivilegedAction<br/>\njava/security/PrivilegedActionException<br/>\njava/security/PrivilegedExceptionAction<br/>\njava/security/ProtectionDomain<br/>\njava/security/Provider<br/>\njava/security/ProviderException<br/>\njava/security/PublicKey<br/>\njava/security/SecureClassLoader<br/>\njava/security/SecureRandom<br/>\njava/security/SecureRandomSpi<br/>\njava/security/Security<br/>\njava/security/SecurityPermission<br/>\njava/security/Signature<br/>\njava/security/SignatureException<br/>\njava/security/SignatureSpi<br/>\njava/security/SignedObject<br/>\njava/security/Signer<br/>\njava/security/Timestamp<br/>\njava/security/UnrecoverableEntryException<br/>\njava/security/UnrecoverableKeyException<br/>\njava/security/UnresolvedPermission<br/>\njava/security/UnresolvedPermissionCollection<br/>\njava/security/acl/<br/>\njava/security/acl/Acl<br/>\njava/security/acl/AclEntry<br/>\njava/security/acl/AclNotFoundException<br/>\njava/security/acl/Group<br/>\njava/security/acl/LastOwnerException<br/>\njava/security/acl/NotOwnerException<br/>\njava/security/acl/Owner<br/>\njava/security/acl/Permission<br/>\njava/security/cert/<br/>\njava/security/cert/CRL<br/>\njava/security/cert/CRLException<br/>\njava/security/cert/CRLSelector<br/>\njava/security/cert/CertPath<br/>\njava/security/cert/CertPathBuilder<br/>\njava/security/cert/CertPathBuilderException<br/>\njava/security/cert/CertPathBuilderResult<br/>\njava/security/cert/CertPathBuilderSpi<br/>\njava/security/cert/CertPathHelperImpl<br/>\njava/security/cert/CertPathParameters<br/>\njava/security/cert/CertPathValidator<br/>\njava/security/cert/CertPathValidatorException<br/>\njava/security/cert/CertPathValidatorResult<br/>\njava/security/cert/CertPathValidatorSpi<br/>\njava/security/cert/CertSelector<br/>\njava/security/cert/CertStore<br/>\njava/security/cert/CertStoreException<br/>\njava/security/cert/CertStoreParameters<br/>\njava/security/cert/CertStoreSpi<br/>\njava/security/cert/Certificate<br/>\njava/security/cert/CertificateEncodingException<br/>\njava/security/cert/CertificateException<br/>\njava/security/cert/CertificateExpiredException<br/>\njava/security/cert/CertificateFactory<br/>\njava/security/cert/CertificateFactorySpi<br/>\njava/security/cert/CertificateNotYetValidException<br/>\njava/security/cert/CertificateParsingException<br/>\njava/security/cert/CollectionCertStoreParameters<br/>\njava/security/cert/LDAPCertStoreParameters<br/>\njava/security/cert/PKIXBuilderParameters<br/>\njava/security/cert/PKIXCertPathBuilderResult<br/>\njava/security/cert/PKIXCertPathChecker<br/>\njava/security/cert/PKIXCertPathValidatorResult<br/>\njava/security/cert/PKIXParameters<br/>\njava/security/cert/PolicyNode<br/>\njava/security/cert/PolicyQualifierInfo<br/>\njava/security/cert/TrustAnchor<br/>\njava/security/cert/X509CRL<br/>\njava/security/cert/X509CRLEntry<br/>\njava/security/cert/X509CRLSelector<br/>\njava/security/cert/X509CertSelector<br/>\njava/security/cert/X509Certificate<br/>\njava/security/cert/X509Extension<br/>\njava/security/interfaces/<br/>\njava/security/interfaces/DSAKey<br/>\njava/security/interfaces/DSAKeyPairGenerator<br/>\njava/security/interfaces/DSAParams<br/>\njava/security/interfaces/DSAPrivateKey<br/>\njava/security/interfaces/DSAPublicKey<br/>\njava/security/interfaces/ECKey<br/>\njava/security/interfaces/ECPrivateKey<br/>\njava/security/interfaces/ECPublicKey<br/>\njava/security/interfaces/RSAKey<br/>\njava/security/interfaces/RSAMultiPrimePrivateCrtKey<br/>\njava/security/interfaces/RSAPrivateCrtKey<br/>\njava/security/interfaces/RSAPrivateKey<br/>\njava/security/interfaces/RSAPublicKey<br/>\njava/security/spec/<br/>\njava/security/spec/AlgorithmParameterSpec<br/>\njava/security/spec/DSAParameterSpec<br/>\njava/security/spec/DSAPrivateKeySpec<br/>\njava/security/spec/DSAPublicKeySpec<br/>\njava/security/spec/ECField<br/>\njava/security/spec/ECFieldF2m<br/>\njava/security/spec/ECFieldFp<br/>\njava/security/spec/ECGenParameterSpec<br/>\njava/security/spec/ECParameterSpec<br/>\njava/security/spec/ECPoint<br/>\njava/security/spec/ECPrivateKeySpec<br/>\njava/security/spec/ECPublicKeySpec<br/>\njava/security/spec/EllipticCurve<br/>\njava/security/spec/EncodedKeySpec<br/>\njava/security/spec/InvalidKeySpecException<br/>\njava/security/spec/InvalidParameterSpecException<br/>\njava/security/spec/KeySpec<br/>\njava/security/spec/MGF1ParameterSpec<br/>\njava/security/spec/PKCS8EncodedKeySpec<br/>\njava/security/spec/PSSParameterSpec<br/>\njava/security/spec/RSAKeyGenParameterSpec<br/>\njava/security/spec/RSAMultiPrimePrivateCrtKeySpec<br/>\njava/security/spec/RSAOtherPrimeInfo<br/>\njava/security/spec/RSAPrivateCrtKeySpec<br/>\njava/security/spec/RSAPrivateKeySpec<br/>\njava/security/spec/RSAPublicKeySpec<br/>\njava/security/spec/X509EncodedKeySpec<br/>\njava/sql/<br/>\njava/sql/Array<br/>\njava/sql/BatchUpdateException<br/>\njava/sql/Blob<br/>\njava/sql/CallableStatement<br/>\njava/sql/Clob<br/>\njava/sql/Connection<br/>\njava/sql/DataTruncation<br/>\njava/sql/DatabaseMetaData<br/>\njava/sql/Date<br/>\njava/sql/Driver<br/>\njava/sql/DriverManager<br/>\njava/sql/DriverPropertyInfo<br/>\njava/sql/ParameterMetaData<br/>\njava/sql/PreparedStatement<br/>\njava/sql/Ref<br/>\njava/sql/ResultSet<br/>\njava/sql/ResultSetMetaData<br/>\njava/sql/SQLData<br/>\njava/sql/SQLException<br/>\njava/sql/SQLInput<br/>\njava/sql/SQLOutput<br/>\njava/sql/SQLPermission<br/>\njava/sql/SQLWarning<br/>\njava/sql/Savepoint<br/>\njava/sql/Statement<br/>\njava/sql/Struct<br/>\njava/sql/Time<br/>\njava/sql/Timestamp<br/>\njava/sql/Types<br/>\njava/text/<br/>\njava/text/Annotation<br/>\njava/text/AttributedCharacterIterator<br/>\njava/text/AttributedString<br/>\njava/text/Bidi<br/>\njava/text/BreakDictionary<br/>\njava/text/BreakIterator<br/>\njava/text/CharacterIterator<br/>\njava/text/CharacterIteratorFieldDelegate<br/>\njava/text/ChoiceFormat<br/>\njava/text/CollationElementIterator<br/>\njava/text/CollationKey<br/>\njava/text/CollationRules<br/>\njava/text/Collator<br/>\njava/text/DateFormat<br/>\njava/text/DateFormatSymbols<br/>\njava/text/DecimalFormat<br/>\njava/text/DecimalFormatSymbols<br/>\njava/text/DictionaryBasedBreakIterator<br/>\njava/text/DigitList<br/>\njava/text/DontCareFieldPosition<br/>\njava/text/EntryPair<br/>\njava/text/FieldPosition<br/>\njava/text/Format<br/>\njava/text/MergeCollation<br/>\njava/text/MessageFormat<br/>\njava/text/NumberFormat<br/>\njava/text/ParseException<br/>\njava/text/ParsePosition<br/>\njava/text/PatternEntry<br/>\njava/text/RBCollationTables<br/>\njava/text/RBTableBuilder<br/>\njava/text/RuleBasedBreakIterator<br/>\njava/text/RuleBasedCollator<br/>\njava/text/SimpleDateFormat<br/>\njava/text/StringCharacterIterator<br/>\njava/util/<br/>\njava/util/AbstractCollection<br/>\njava/util/AbstractList<br/>\njava/util/AbstractMap<br/>\njava/util/AbstractQueue<br/>\njava/util/AbstractSequentialList<br/>\njava/util/AbstractSet<br/>\njava/util/ArrayList<br/>\njava/util/Arrays<br/>\njava/util/BitSet<br/>\njava/util/Calendar<br/>\njava/util/Collection<br/>\njava/util/Collections<br/>\njava/util/Comparator<br/>\njava/util/ConcurrentModificationException<br/>\njava/util/Currency<br/>\njava/util/Date<br/>\njava/util/Dictionary<br/>\njava/util/DuplicateFormatFlagsException<br/>\njava/util/EmptyStackException<br/>\njava/util/EnumMap<br/>\njava/util/EnumSet<br/>\njava/util/Enumeration<br/>\njava/util/EventListener<br/>\njava/util/EventListenerProxy<br/>\njava/util/EventObject<br/>\njava/util/FormatFlagsConversionMismatchException<br/>\njava/util/Formattable<br/>\njava/util/FormattableFlags<br/>\njava/util/Formatter<br/>\njava/util/FormatterClosedException<br/>\njava/util/GregorianCalendar<br/>\njava/util/HashMap<br/>\njava/util/HashSet<br/>\njava/util/Hashtable<br/>\njava/util/IdentityHashMap<br/>\njava/util/IllegalFormatCodePointException<br/>\njava/util/IllegalFormatConversionException<br/>\njava/util/IllegalFormatException<br/>\njava/util/IllegalFormatFlagsException<br/>\njava/util/IllegalFormatPrecisionException<br/>\njava/util/IllegalFormatWidthException<br/>\njava/util/InputMismatchException<br/>\njava/util/InvalidPropertiesFormatException<br/>\njava/util/Iterator<br/>\njava/util/JumboEnumSet<br/>\njava/util/LinkedHashMap<br/>\njava/util/LinkedHashSet<br/>\njava/util/LinkedList<br/>\njava/util/List<br/>\njava/util/ListIterator<br/>\njava/util/ListResourceBundle<br/>\njava/util/Locale<br/>\njava/util/Map<br/>\njava/util/MissingFormatArgumentException<br/>\njava/util/MissingFormatWidthException<br/>\njava/util/MissingResourceException<br/>\njava/util/NoSuchElementException<br/>\njava/util/Observable<br/>\njava/util/Observer<br/>\njava/util/PriorityQueue<br/>\njava/util/Properties<br/>\njava/util/PropertyPermission<br/>\njava/util/PropertyResourceBundle<br/>\njava/util/Queue<br/>\njava/util/Random<br/>\njava/util/RandomAccess<br/>\njava/util/RegularEnumSet<br/>\njava/util/ResourceBundle<br/>\njava/util/ResourceBundleEnumeration<br/>\njava/util/Scanner<br/>\njava/util/Set<br/>\njava/util/SimpleTimeZone<br/>\njava/util/SortedMap<br/>\njava/util/SortedSet<br/>\njava/util/Stack<br/>\njava/util/StringTokenizer<br/>\njava/util/TimeZone<br/>\njava/util/Timer<br/>\njava/util/TimerTask<br/>\njava/util/TooManyListenersException<br/>\njava/util/TreeMap<br/>\njava/util/TreeSet<br/>\njava/util/UUID<br/>\njava/util/UnknownFormatConversionException<br/>\njava/util/UnknownFormatFlagsException<br/>\njava/util/Vector<br/>\njava/util/WeakHashMap<br/>\njava/util/XMLUtils<br/>\njava/util/concurrent/<br/>\njava/util/concurrent/AbstractExecutorService<br/>\njava/util/concurrent/ArrayBlockingQueue<br/>\njava/util/concurrent/BlockingQueue<br/>\njava/util/concurrent/BrokenBarrierException<br/>\njava/util/concurrent/Callable<br/>\njava/util/concurrent/CancellationException<br/>\njava/util/concurrent/CompletionService<br/>\njava/util/concurrent/ConcurrentHashMap<br/>\njava/util/concurrent/ConcurrentLinkedQueue<br/>\njava/util/concurrent/ConcurrentMap<br/>\njava/util/concurrent/CopyOnWriteArrayList<br/>\njava/util/concurrent/CopyOnWriteArraySet<br/>\njava/util/concurrent/CountDownLatch<br/>\njava/util/concurrent/CyclicBarrier<br/>\njava/util/concurrent/DelayQueue<br/>\njava/util/concurrent/Delayed<br/>\njava/util/concurrent/Exchanger<br/>\njava/util/concurrent/ExecutionException<br/>\njava/util/concurrent/Executor<br/>\njava/util/concurrent/ExecutorCompletionService<br/>\njava/util/concurrent/ExecutorService<br/>\njava/util/concurrent/Executors<br/>\njava/util/concurrent/Future<br/>\njava/util/concurrent/FutureTask<br/>\njava/util/concurrent/LinkedBlockingQueue<br/>\njava/util/concurrent/PriorityBlockingQueue<br/>\njava/util/concurrent/RejectedExecutionException<br/>\njava/util/concurrent/RejectedExecutionHandler<br/>\njava/util/concurrent/ScheduledExecutorService<br/>\njava/util/concurrent/ScheduledFuture<br/>\njava/util/concurrent/ScheduledThreadPoolExecutor<br/>\njava/util/concurrent/Semaphore<br/>\njava/util/concurrent/SynchronousQueue<br/>\njava/util/concurrent/ThreadFactory<br/>\njava/util/concurrent/ThreadPoolExecutor<br/>\njava/util/concurrent/TimeUnit<br/>\njava/util/concurrent/TimeoutException<br/>\njava/util/concurrent/atomic/<br/>\njava/util/concurrent/atomic/AtomicBoolean<br/>\njava/util/concurrent/atomic/AtomicInteger<br/>\njava/util/concurrent/atomic/AtomicIntegerArray<br/>\njava/util/concurrent/atomic/AtomicIntegerFieldUpdater<br/>\njava/util/concurrent/atomic/AtomicLong<br/>\njava/util/concurrent/atomic/AtomicLongArray<br/>\njava/util/concurrent/atomic/AtomicLongFieldUpdater<br/>\njava/util/concurrent/atomic/AtomicMarkableReference<br/>\njava/util/concurrent/atomic/AtomicReference<br/>\njava/util/concurrent/atomic/AtomicReferenceArray<br/>\njava/util/concurrent/atomic/AtomicReferenceFieldUpdater<br/>\njava/util/concurrent/atomic/AtomicStampedReference<br/>\njava/util/concurrent/locks/<br/>\njava/util/concurrent/locks/AbstractQueuedSynchronizer<br/>\njava/util/concurrent/locks/Condition<br/>\njava/util/concurrent/locks/Lock<br/>\njava/util/concurrent/locks/LockSupport<br/>\njava/util/concurrent/locks/ReadWriteLock<br/>\njava/util/concurrent/locks/ReentrantLock<br/>\njava/util/concurrent/locks/ReentrantReadWriteLock<br/>\njava/util/jar/<br/>\njava/util/jar/Attributes<br/>\njava/util/jar/JarEntry<br/>\njava/util/jar/JarException<br/>\njava/util/jar/JarFile<br/>\njava/util/jar/JarInputStream<br/>\njava/util/jar/JarOutputStream<br/>\njava/util/jar/JarVerifier<br/>\njava/util/jar/JavaUtilJarAccessImpl<br/>\njava/util/jar/Manifest<br/>\njava/util/jar/Pack200<br/>\njava/util/logging/<br/>\njava/util/logging/ConsoleHandler<br/>\njava/util/logging/ErrorManager<br/>\njava/util/logging/FileHandler<br/>\njava/util/logging/Filter<br/>\njava/util/logging/Formatter<br/>\njava/util/logging/Handler<br/>\njava/util/logging/Level<br/>\njava/util/logging/LogManager<br/>\njava/util/logging/LogRecord<br/>\njava/util/logging/Logger<br/>\njava/util/logging/Logging<br/>\njava/util/logging/LoggingMXBean<br/>\njava/util/logging/LoggingPermission<br/>\njava/util/logging/MemoryHandler<br/>\njava/util/logging/SimpleFormatter<br/>\njava/util/logging/SocketHandler<br/>\njava/util/logging/StreamHandler<br/>\njava/util/logging/XMLFormatter<br/>\njava/util/prefs/<br/>\njava/util/prefs/AbstractPreferences<br/>\njava/util/prefs/BackingStoreException<br/>\njava/util/prefs/Base64<br/>\njava/util/prefs/InvalidPreferencesFormatException<br/>\njava/util/prefs/NodeChangeEvent<br/>\njava/util/prefs/NodeChangeListener<br/>\njava/util/prefs/PreferenceChangeEvent<br/>\njava/util/prefs/PreferenceChangeListener<br/>\njava/util/prefs/Preferences<br/>\njava/util/prefs/PreferencesFactory<br/>\njava/util/prefs/XmlSupport<br/>\njava/util/prefs/FileSystemPreferences<br/>\njava/util/prefs/FileSystemPreferencesFactory<br/>\njava/util/regex/<br/>\njava/util/regex/ASCII<br/>\njava/util/regex/MatchResult<br/>\njava/util/regex/Matcher<br/>\njava/util/regex/Pattern<br/>\njava/util/regex/PatternSyntaxException<br/>\njava/util/zip/<br/>\njava/util/zip/Adler32<br/>\njava/util/zip/CRC32<br/>\njava/util/zip/CheckedInputStream<br/>\njava/util/zip/CheckedOutputStream<br/>\njava/util/zip/Checksum<br/>\njava/util/zip/DataFormatException<br/>\njava/util/zip/Deflater<br/>\njava/util/zip/DeflaterOutputStream<br/>\njava/util/zip/GZIPInputStream<br/>\njava/util/zip/GZIPOutputStream<br/>\njava/util/zip/Inflater<br/>\njava/util/zip/InflaterInputStream<br/>\njava/util/zip/ZipConstants<br/>\njava/util/zip/ZipEntry<br/>\njava/util/zip/ZipException<br/>\njava/util/zip/ZipFile<br/>\njava/util/zip/ZipInputStream<br/>\njava/util/zip/ZipOutputStream<br/>\njava/util/CurrencyData<br/>\njavax/<br/>\njavax/accessibility/<br/>\njavax/accessibility/Accessible<br/>\njavax/accessibility/AccessibleAction<br/>\njavax/accessibility/AccessibleAttributeSequence<br/>\njavax/accessibility/AccessibleBundle<br/>\njavax/accessibility/AccessibleComponent<br/>\njavax/accessibility/AccessibleContext<br/>\njavax/accessibility/AccessibleEditableText<br/>\njavax/accessibility/AccessibleExtendedComponent<br/>\njavax/accessibility/AccessibleExtendedTable<br/>\njavax/accessibility/AccessibleExtendedText<br/>\njavax/accessibility/AccessibleHyperlink<br/>\njavax/accessibility/AccessibleHypertext<br/>\njavax/accessibility/AccessibleIcon<br/>\njavax/accessibility/AccessibleKeyBinding<br/>\njavax/accessibility/AccessibleRelation<br/>\njavax/accessibility/AccessibleRelationSet<br/>\njavax/accessibility/AccessibleResourceBundle<br/>\njavax/accessibility/AccessibleRole<br/>\njavax/accessibility/AccessibleSelection<br/>\njavax/accessibility/AccessibleState<br/>\njavax/accessibility/AccessibleStateSet<br/>\njavax/accessibility/AccessibleStreamable<br/>\njavax/accessibility/AccessibleTable<br/>\njavax/accessibility/AccessibleTableModelChange<br/>\njavax/accessibility/AccessibleText<br/>\njavax/accessibility/AccessibleTextSequence<br/>\njavax/accessibility/AccessibleValue<br/>\njavax/imageio/<br/>\njavax/imageio/IIOException<br/>\njavax/imageio/IIOImage<br/>\njavax/imageio/IIOParam<br/>\njavax/imageio/IIOParamController<br/>\njavax/imageio/ImageIO<br/>\njavax/imageio/ImageReadParam<br/>\njavax/imageio/ImageReader<br/>\njavax/imageio/ImageTranscoder<br/>\njavax/imageio/ImageTypeSpecifier<br/>\njavax/imageio/ImageWriteParam<br/>\njavax/imageio/ImageWriter<br/>\njavax/imageio/event/<br/>\njavax/imageio/event/IIOReadProgressListener<br/>\njavax/imageio/event/IIOReadUpdateListener<br/>\njavax/imageio/event/IIOReadWarningListener<br/>\njavax/imageio/event/IIOWriteProgressListener<br/>\njavax/imageio/event/IIOWriteWarningListener<br/>\njavax/imageio/metadata/<br/>\njavax/imageio/metadata/IIOInvalidTreeException<br/>\njavax/imageio/metadata/IIOMetadata<br/>\njavax/imageio/metadata/IIOMetadataController<br/>\njavax/imageio/metadata/IIOMetadataFormat<br/>\njavax/imageio/metadata/IIOMetadataFormatImpl<br/>\njavax/imageio/metadata/IIOMetadataNode<br/>\njavax/imageio/plugins/<br/>\njavax/imageio/plugins/bmp/<br/>\njavax/imageio/plugins/bmp/BMPImageWriteParam<br/>\njavax/imageio/plugins/jpeg/<br/>\njavax/imageio/plugins/jpeg/JPEGHuffmanTable<br/>\njavax/imageio/plugins/jpeg/JPEGImageReadParam<br/>\njavax/imageio/plugins/jpeg/JPEGImageWriteParam<br/>\njavax/imageio/plugins/jpeg/JPEGQTable<br/>\njavax/imageio/spi/<br/>\njavax/imageio/spi/DigraphNode<br/>\njavax/imageio/spi/IIORegistry<br/>\njavax/imageio/spi/IIOServiceProvider<br/>\njavax/imageio/spi/ImageInputStreamSpi<br/>\njavax/imageio/spi/ImageOutputStreamSpi<br/>\njavax/imageio/spi/ImageReaderSpi<br/>\njavax/imageio/spi/ImageReaderWriterSpi<br/>\njavax/imageio/spi/ImageTranscoderSpi<br/>\njavax/imageio/spi/ImageWriterSpi<br/>\njavax/imageio/spi/PartiallyOrderedSet<br/>\njavax/imageio/spi/RegisterableService<br/>\njavax/imageio/spi/ServiceRegistry<br/>\njavax/imageio/stream/<br/>\njavax/imageio/stream/FileCacheImageInputStream<br/>\njavax/imageio/stream/FileCacheImageOutputStream<br/>\njavax/imageio/stream/FileImageInputStream<br/>\njavax/imageio/stream/FileImageOutputStream<br/>\njavax/imageio/stream/IIOByteBuffer<br/>\njavax/imageio/stream/ImageInputStream<br/>\njavax/imageio/stream/ImageInputStreamImpl<br/>\njavax/imageio/stream/ImageOutputStream<br/>\njavax/imageio/stream/ImageOutputStreamImpl<br/>\njavax/imageio/stream/MemoryCache<br/>\njavax/imageio/stream/MemoryCacheImageInputStream<br/>\njavax/imageio/stream/MemoryCacheImageOutputStream<br/>\njavax/management/<br/>\njavax/management/AndQueryExp<br/>\njavax/management/Attribute<br/>\njavax/management/AttributeChangeNotification<br/>\njavax/management/AttributeChangeNotificationFilter<br/>\njavax/management/AttributeList<br/>\njavax/management/AttributeNotFoundException<br/>\njavax/management/AttributeValueExp<br/>\njavax/management/BadAttributeValueExpException<br/>\njavax/management/BadBinaryOpValueExpException<br/>\njavax/management/BadStringOperationException<br/>\njavax/management/BetweenQueryExp<br/>\njavax/management/BinaryOpValueExp<br/>\njavax/management/BinaryRelQueryExp<br/>\njavax/management/BooleanValueExp<br/>\njavax/management/ClassAttributeValueExp<br/>\njavax/management/DefaultLoaderRepository<br/>\njavax/management/Descriptor<br/>\njavax/management/DescriptorAccess<br/>\njavax/management/DynamicMBean<br/>\njavax/management/InQueryExp<br/>\njavax/management/InstanceAlreadyExistsException<br/>\njavax/management/InstanceNotFoundException<br/>\njavax/management/IntrospectionException<br/>\njavax/management/InvalidApplicationException<br/>\njavax/management/InvalidAttributeValueException<br/>\njavax/management/JMException<br/>\njavax/management/JMRuntimeException<br/>\njavax/management/ListenerNotFoundException<br/>\njavax/management/MBeanAttributeInfo<br/>\njavax/management/MBeanConstructorInfo<br/>\njavax/management/MBeanException<br/>\njavax/management/MBeanFeatureInfo<br/>\njavax/management/MBeanInfo<br/>\njavax/management/MBeanNotificationInfo<br/>\njavax/management/MBeanOperationInfo<br/>\njavax/management/MBeanParameterInfo<br/>\njavax/management/MBeanPermission<br/>\njavax/management/MBeanRegistration<br/>\njavax/management/MBeanRegistrationException<br/>\njavax/management/MBeanServer<br/>\njavax/management/MBeanServerBuilder<br/>\njavax/management/MBeanServerConnection<br/>\njavax/management/MBeanServerDelegate<br/>\njavax/management/MBeanServerDelegateMBean<br/>\njavax/management/MBeanServerFactory<br/>\njavax/management/MBeanServerInvocationHandler<br/>\njavax/management/MBeanServerNotification<br/>\njavax/management/MBeanServerPermission<br/>\njavax/management/MBeanTrustPermission<br/>\njavax/management/MalformedObjectNameException<br/>\njavax/management/MatchQueryExp<br/>\njavax/management/NotCompliantMBeanException<br/>\njavax/management/NotQueryExp<br/>\njavax/management/Notification<br/>\njavax/management/NotificationBroadcaster<br/>\njavax/management/NotificationBroadcasterSupport<br/>\njavax/management/NotificationEmitter<br/>\njavax/management/NotificationFilter<br/>\njavax/management/NotificationFilterSupport<br/>\njavax/management/NotificationListener<br/>\njavax/management/NumericValueExp<br/>\njavax/management/ObjectInstance<br/>\njavax/management/ObjectName<br/>\njavax/management/OperationsException<br/>\njavax/management/OrQueryExp<br/>\njavax/management/PersistentMBean<br/>\njavax/management/QualifiedAttributeValueExp<br/>\njavax/management/Query<br/>\njavax/management/QueryEval<br/>\njavax/management/QueryExp<br/>\njavax/management/ReflectionException<br/>\njavax/management/RuntimeErrorException<br/>\njavax/management/RuntimeMBeanException<br/>\njavax/management/RuntimeOperationsException<br/>\njavax/management/ServiceNotFoundException<br/>\njavax/management/StandardMBean<br/>\njavax/management/StringValueExp<br/>\njavax/management/ValueExp<br/>\njavax/management/loading/<br/>\njavax/management/loading/ClassLoaderRepository<br/>\njavax/management/loading/DefaultLoaderRepository<br/>\njavax/management/loading/MLet<br/>\njavax/management/loading/MLetContent<br/>\njavax/management/loading/MLetMBean<br/>\njavax/management/loading/MLetObjectInputStream<br/>\njavax/management/loading/MLetParser<br/>\njavax/management/loading/PrivateClassLoader<br/>\njavax/management/loading/PrivateMLet<br/>\njavax/management/modelmbean/<br/>\njavax/management/modelmbean/DescriptorSupport<br/>\njavax/management/modelmbean/InvalidTargetObjectTypeException<br/>\njavax/management/modelmbean/ModelMBean<br/>\njavax/management/modelmbean/ModelMBeanAttributeInfo<br/>\njavax/management/modelmbean/ModelMBeanConstructorInfo<br/>\njavax/management/modelmbean/ModelMBeanInfo<br/>\njavax/management/modelmbean/ModelMBeanInfoSupport<br/>\njavax/management/modelmbean/ModelMBeanNotificationBroadcaster<br/>\njavax/management/modelmbean/ModelMBeanNotificationInfo<br/>\njavax/management/modelmbean/ModelMBeanOperationInfo<br/>\njavax/management/modelmbean/RequiredModelMBean<br/>\njavax/management/modelmbean/XMLParseException<br/>\njavax/management/monitor/<br/>\njavax/management/monitor/CounterMonitor<br/>\njavax/management/monitor/CounterMonitorMBean<br/>\njavax/management/monitor/GaugeMonitor<br/>\njavax/management/monitor/GaugeMonitorMBean<br/>\njavax/management/monitor/Monitor<br/>\njavax/management/monitor/MonitorMBean<br/>\njavax/management/monitor/MonitorNotification<br/>\njavax/management/monitor/MonitorSettingException<br/>\njavax/management/monitor/StringMonitor<br/>\njavax/management/monitor/StringMonitorMBean<br/>\njavax/management/openmbean/<br/>\njavax/management/openmbean/ArrayType<br/>\njavax/management/openmbean/CompositeData<br/>\njavax/management/openmbean/CompositeDataSupport<br/>\njavax/management/openmbean/CompositeType<br/>\njavax/management/openmbean/InvalidKeyException<br/>\njavax/management/openmbean/InvalidOpenTypeException<br/>\njavax/management/openmbean/KeyAlreadyExistsException<br/>\njavax/management/openmbean/OpenDataException<br/>\njavax/management/openmbean/OpenMBeanAttributeInfo<br/>\njavax/management/openmbean/OpenMBeanAttributeInfoSupport<br/>\njavax/management/openmbean/OpenMBeanConstructorInfo<br/>\njavax/management/openmbean/OpenMBeanConstructorInfoSupport<br/>\njavax/management/openmbean/OpenMBeanInfo<br/>\njavax/management/openmbean/OpenMBeanInfoSupport<br/>\njavax/management/openmbean/OpenMBeanOperationInfo<br/>\njavax/management/openmbean/OpenMBeanOperationInfoSupport<br/>\njavax/management/openmbean/OpenMBeanParameterInfo<br/>\njavax/management/openmbean/OpenMBeanParameterInfoSupport<br/>\njavax/management/openmbean/OpenType<br/>\njavax/management/openmbean/SimpleType<br/>\njavax/management/openmbean/TabularData<br/>\njavax/management/openmbean/TabularDataSupport<br/>\njavax/management/openmbean/TabularType<br/>\njavax/management/relation/<br/>\njavax/management/relation/InvalidRelationIdException<br/>\njavax/management/relation/InvalidRelationServiceException<br/>\njavax/management/relation/InvalidRelationTypeException<br/>\njavax/management/relation/InvalidRoleInfoException<br/>\njavax/management/relation/InvalidRoleValueException<br/>\njavax/management/relation/MBeanServerNotificationFilter<br/>\njavax/management/relation/Relation<br/>\njavax/management/relation/RelationException<br/>\njavax/management/relation/RelationNotFoundException<br/>\njavax/management/relation/RelationNotification<br/>\njavax/management/relation/RelationService<br/>\njavax/management/relation/RelationServiceMBean<br/>\njavax/management/relation/RelationServiceNotRegisteredException<br/>\njavax/management/relation/RelationSupport<br/>\njavax/management/relation/RelationSupportMBean<br/>\njavax/management/relation/RelationType<br/>\njavax/management/relation/RelationTypeNotFoundException<br/>\njavax/management/relation/RelationTypeSupport<br/>\njavax/management/relation/Role<br/>\njavax/management/relation/RoleInfo<br/>\njavax/management/relation/RoleInfoNotFoundException<br/>\njavax/management/relation/RoleList<br/>\njavax/management/relation/RoleNotFoundException<br/>\njavax/management/relation/RoleResult<br/>\njavax/management/relation/RoleStatus<br/>\njavax/management/relation/RoleUnresolved<br/>\njavax/management/relation/RoleUnresolvedList<br/>\njavax/management/remote/<br/>\njavax/management/remote/JMXAuthenticator<br/>\njavax/management/remote/JMXConnectionNotification<br/>\njavax/management/remote/JMXConnector<br/>\njavax/management/remote/JMXConnectorFactory<br/>\njavax/management/remote/JMXConnectorProvider<br/>\njavax/management/remote/JMXConnectorServer<br/>\njavax/management/remote/JMXConnectorServerFactory<br/>\njavax/management/remote/JMXConnectorServerMBean<br/>\njavax/management/remote/JMXConnectorServerProvider<br/>\njavax/management/remote/JMXPrincipal<br/>\njavax/management/remote/JMXProviderException<br/>\njavax/management/remote/JMXServerErrorException<br/>\njavax/management/remote/JMXServiceURL<br/>\njavax/management/remote/MBeanServerForwarder<br/>\njavax/management/remote/NotificationResult<br/>\njavax/management/remote/SubjectDelegationPermission<br/>\njavax/management/remote/TargetedNotification<br/>\njavax/management/remote/rmi/<br/>\njavax/management/remote/rmi/NoCallStackClassLoader<br/>\njavax/management/remote/rmi/RMIConnection<br/>\njavax/management/remote/rmi/RMIConnectionImpl<br/>\njavax/management/remote/rmi/RMIConnector<br/>\njavax/management/remote/rmi/RMIConnectorServer<br/>\njavax/management/remote/rmi/RMIIIOPServerImpl<br/>\njavax/management/remote/rmi/RMIJRMPServerImpl<br/>\njavax/management/remote/rmi/RMIServer<br/>\njavax/management/remote/rmi/RMIServerImpl<br/>\njavax/management/remote/rmi/RMIConnectionImpl_Stub<br/>\njavax/management/remote/rmi/RMIServerImpl_Stub<br/>\njavax/management/timer/<br/>\njavax/management/timer/Timer<br/>\njavax/management/timer/TimerAlarmClockNotification<br/>\njavax/management/timer/TimerMBean<br/>\njavax/management/timer/TimerNotification<br/>\njavax/naming/<br/>\njavax/naming/AuthenticationException<br/>\njavax/naming/AuthenticationNotSupportedException<br/>\njavax/naming/BinaryRefAddr<br/>\njavax/naming/Binding<br/>\njavax/naming/CannotProceedException<br/>\njavax/naming/CommunicationException<br/>\njavax/naming/CompositeName<br/>\njavax/naming/CompoundName<br/>\njavax/naming/ConfigurationException<br/>\njavax/naming/Context<br/>\njavax/naming/ContextNotEmptyException<br/>\njavax/naming/InitialContext<br/>\njavax/naming/InsufficientResourcesException<br/>\njavax/naming/InterruptedNamingException<br/>\njavax/naming/InvalidNameException<br/>\njavax/naming/LimitExceededException<br/>\njavax/naming/LinkException<br/>\njavax/naming/LinkLoopException<br/>\njavax/naming/LinkRef<br/>\njavax/naming/MalformedLinkException<br/>\njavax/naming/Name<br/>\njavax/naming/NameAlreadyBoundException<br/>\njavax/naming/NameClassPair<br/>\njavax/naming/NameImpl<br/>\njavax/naming/NameNotFoundException<br/>\njavax/naming/NameParser<br/>\njavax/naming/NamingEnumeration<br/>\njavax/naming/NamingException<br/>\njavax/naming/NamingSecurityException<br/>\njavax/naming/NoInitialContextException<br/>\njavax/naming/NoPermissionException<br/>\njavax/naming/NotContextException<br/>\njavax/naming/OperationNotSupportedException<br/>\njavax/naming/PartialResultException<br/>\njavax/naming/RefAddr<br/>\njavax/naming/Reference<br/>\njavax/naming/Referenceable<br/>\njavax/naming/ReferralException<br/>\njavax/naming/ServiceUnavailableException<br/>\njavax/naming/SizeLimitExceededException<br/>\njavax/naming/StringRefAddr<br/>\njavax/naming/TimeLimitExceededException<br/>\njavax/naming/directory/<br/>\njavax/naming/directory/Attribute<br/>\njavax/naming/directory/AttributeInUseException<br/>\njavax/naming/directory/AttributeModificationException<br/>\njavax/naming/directory/Attributes<br/>\njavax/naming/directory/BasicAttribute<br/>\njavax/naming/directory/BasicAttributes<br/>\njavax/naming/directory/DirContext<br/>\njavax/naming/directory/InitialDirContext<br/>\njavax/naming/directory/InvalidAttributeIdentifierException<br/>\njavax/naming/directory/InvalidAttributeValueException<br/>\njavax/naming/directory/InvalidAttributesException<br/>\njavax/naming/directory/InvalidSearchControlsException<br/>\njavax/naming/directory/InvalidSearchFilterException<br/>\njavax/naming/directory/ModificationItem<br/>\njavax/naming/directory/NoSuchAttributeException<br/>\njavax/naming/directory/SchemaViolationException<br/>\njavax/naming/directory/SearchControls<br/>\njavax/naming/directory/SearchResult<br/>\njavax/naming/event/<br/>\njavax/naming/event/EventContext<br/>\njavax/naming/event/EventDirContext<br/>\njavax/naming/event/NamespaceChangeListener<br/>\njavax/naming/event/NamingEvent<br/>\njavax/naming/event/NamingExceptionEvent<br/>\njavax/naming/event/NamingListener<br/>\njavax/naming/event/ObjectChangeListener<br/>\njavax/naming/ldap/<br/>\njavax/naming/ldap/BasicControl<br/>\njavax/naming/ldap/Control<br/>\njavax/naming/ldap/ControlFactory<br/>\njavax/naming/ldap/ExtendedRequest<br/>\njavax/naming/ldap/ExtendedResponse<br/>\njavax/naming/ldap/HasControls<br/>\njavax/naming/ldap/InitialLdapContext<br/>\njavax/naming/ldap/LdapContext<br/>\njavax/naming/ldap/LdapName<br/>\njavax/naming/ldap/LdapReferralException<br/>\njavax/naming/ldap/ManageReferralControl<br/>\njavax/naming/ldap/PagedResultsControl<br/>\njavax/naming/ldap/PagedResultsResponseControl<br/>\njavax/naming/ldap/Rdn<br/>\njavax/naming/ldap/Rfc2253Parser<br/>\njavax/naming/ldap/SortControl<br/>\njavax/naming/ldap/SortKey<br/>\njavax/naming/ldap/SortResponseControl<br/>\njavax/naming/ldap/StartTlsRequest<br/>\njavax/naming/ldap/StartTlsResponse<br/>\njavax/naming/ldap/UnsolicitedNotification<br/>\njavax/naming/ldap/UnsolicitedNotificationEvent<br/>\njavax/naming/ldap/UnsolicitedNotificationListener<br/>\njavax/naming/spi/<br/>\njavax/naming/spi/ContinuationContext<br/>\njavax/naming/spi/ContinuationDirContext<br/>\njavax/naming/spi/DirObjectFactory<br/>\njavax/naming/spi/DirStateFactory<br/>\njavax/naming/spi/DirectoryManager<br/>\njavax/naming/spi/InitialContextFactory<br/>\njavax/naming/spi/InitialContextFactoryBuilder<br/>\njavax/naming/spi/NamingManager<br/>\njavax/naming/spi/ObjectFactory<br/>\njavax/naming/spi/ObjectFactoryBuilder<br/>\njavax/naming/spi/ResolveResult<br/>\njavax/naming/spi/Resolver<br/>\njavax/naming/spi/StateFactory<br/>\njavax/print/<br/>\njavax/print/AttributeException<br/>\njavax/print/CancelablePrintJob<br/>\njavax/print/Doc<br/>\njavax/print/DocFlavor<br/>\njavax/print/DocPrintJob<br/>\njavax/print/FlavorException<br/>\njavax/print/MimeType<br/>\njavax/print/MultiDoc<br/>\njavax/print/MultiDocPrintJob<br/>\njavax/print/MultiDocPrintService<br/>\njavax/print/PrintException<br/>\njavax/print/PrintService<br/>\njavax/print/PrintServiceLookup<br/>\njavax/print/ServiceUI<br/>\njavax/print/ServiceUIFactory<br/>\njavax/print/SimpleDoc<br/>\njavax/print/StreamPrintService<br/>\njavax/print/StreamPrintServiceFactory<br/>\njavax/print/URIException<br/>\njavax/print/attribute/<br/>\njavax/print/attribute/Attribute<br/>\njavax/print/attribute/AttributeSet<br/>\njavax/print/attribute/AttributeSetUtilities<br/>\njavax/print/attribute/DateTimeSyntax<br/>\njavax/print/attribute/DocAttribute<br/>\njavax/print/attribute/DocAttributeSet<br/>\njavax/print/attribute/EnumSyntax<br/>\njavax/print/attribute/HashAttributeSet<br/>\njavax/print/attribute/HashDocAttributeSet<br/>\njavax/print/attribute/HashPrintJobAttributeSet<br/>\njavax/print/attribute/HashPrintRequestAttributeSet<br/>\njavax/print/attribute/HashPrintServiceAttributeSet<br/>\njavax/print/attribute/IntegerSyntax<br/>\njavax/print/attribute/PrintJobAttribute<br/>\njavax/print/attribute/PrintJobAttributeSet<br/>\njavax/print/attribute/PrintRequestAttribute<br/>\njavax/print/attribute/PrintRequestAttributeSet<br/>\njavax/print/attribute/PrintServiceAttribute<br/>\njavax/print/attribute/PrintServiceAttributeSet<br/>\njavax/print/attribute/ResolutionSyntax<br/>\njavax/print/attribute/SetOfIntegerSyntax<br/>\njavax/print/attribute/Size2DSyntax<br/>\njavax/print/attribute/SupportedValuesAttribute<br/>\njavax/print/attribute/TextSyntax<br/>\njavax/print/attribute/URISyntax<br/>\njavax/print/attribute/UnmodifiableSetException<br/>\njavax/print/attribute/standard/<br/>\njavax/print/attribute/standard/Chromaticity<br/>\njavax/print/attribute/standard/ColorSupported<br/>\njavax/print/attribute/standard/Compression<br/>\njavax/print/attribute/standard/Copies<br/>\njavax/print/attribute/standard/CopiesSupported<br/>\njavax/print/attribute/standard/DateTimeAtCompleted<br/>\njavax/print/attribute/standard/DateTimeAtCreation<br/>\njavax/print/attribute/standard/DateTimeAtProcessing<br/>\njavax/print/attribute/standard/Destination<br/>\njavax/print/attribute/standard/DocumentName<br/>\njavax/print/attribute/standard/Fidelity<br/>\njavax/print/attribute/standard/Finishings<br/>\njavax/print/attribute/standard/JobHoldUntil<br/>\njavax/print/attribute/standard/JobImpressions<br/>\njavax/print/attribute/standard/JobImpressionsCompleted<br/>\njavax/print/attribute/standard/JobImpressionsSupported<br/>\njavax/print/attribute/standard/JobKOctets<br/>\njavax/print/attribute/standard/JobKOctetsProcessed<br/>\njavax/print/attribute/standard/JobKOctetsSupported<br/>\njavax/print/attribute/standard/JobMediaSheets<br/>\njavax/print/attribute/standard/JobMediaSheetsCompleted<br/>\njavax/print/attribute/standard/JobMediaSheetsSupported<br/>\njavax/print/attribute/standard/JobMessageFromOperator<br/>\njavax/print/attribute/standard/JobName<br/>\njavax/print/attribute/standard/JobOriginatingUserName<br/>\njavax/print/attribute/standard/JobPriority<br/>\njavax/print/attribute/standard/JobPrioritySupported<br/>\njavax/print/attribute/standard/JobSheets<br/>\njavax/print/attribute/standard/JobState<br/>\njavax/print/attribute/standard/JobStateReason<br/>\njavax/print/attribute/standard/JobStateReasons<br/>\njavax/print/attribute/standard/Media<br/>\njavax/print/attribute/standard/MediaName<br/>\njavax/print/attribute/standard/MediaPrintableArea<br/>\njavax/print/attribute/standard/MediaSize<br/>\njavax/print/attribute/standard/MediaSizeName<br/>\njavax/print/attribute/standard/MediaTray<br/>\njavax/print/attribute/standard/MultipleDocumentHandling<br/>\njavax/print/attribute/standard/NumberOfDocuments<br/>\njavax/print/attribute/standard/NumberOfInterveningJobs<br/>\njavax/print/attribute/standard/NumberUp<br/>\njavax/print/attribute/standard/NumberUpSupported<br/>\njavax/print/attribute/standard/OrientationRequested<br/>\njavax/print/attribute/standard/OutputDeviceAssigned<br/>\njavax/print/attribute/standard/PDLOverrideSupported<br/>\njavax/print/attribute/standard/PageRanges<br/>\njavax/print/attribute/standard/PagesPerMinute<br/>\njavax/print/attribute/standard/PagesPerMinuteColor<br/>\njavax/print/attribute/standard/PresentationDirection<br/>\njavax/print/attribute/standard/PrintQuality<br/>\njavax/print/attribute/standard/PrinterInfo<br/>\njavax/print/attribute/standard/PrinterIsAcceptingJobs<br/>\njavax/print/attribute/standard/PrinterLocation<br/>\njavax/print/attribute/standard/PrinterMakeAndModel<br/>\njavax/print/attribute/standard/PrinterMessageFromOperator<br/>\njavax/print/attribute/standard/PrinterMoreInfo<br/>\njavax/print/attribute/standard/PrinterMoreInfoManufacturer<br/>\njavax/print/attribute/standard/PrinterName<br/>\njavax/print/attribute/standard/PrinterResolution<br/>\njavax/print/attribute/standard/PrinterState<br/>\njavax/print/attribute/standard/PrinterStateReason<br/>\njavax/print/attribute/standard/PrinterStateReasons<br/>\njavax/print/attribute/standard/PrinterURI<br/>\njavax/print/attribute/standard/QueuedJobCount<br/>\njavax/print/attribute/standard/ReferenceUriSchemesSupported<br/>\njavax/print/attribute/standard/RequestingUserName<br/>\njavax/print/attribute/standard/Severity<br/>\njavax/print/attribute/standard/SheetCollate<br/>\njavax/print/attribute/standard/Sides<br/>\njavax/print/event/<br/>\njavax/print/event/PrintEvent<br/>\njavax/print/event/PrintJobAdapter<br/>\njavax/print/event/PrintJobAttributeEvent<br/>\njavax/print/event/PrintJobAttributeListener<br/>\njavax/print/event/PrintJobEvent<br/>\njavax/print/event/PrintJobListener<br/>\njavax/print/event/PrintServiceAttributeEvent<br/>\njavax/print/event/PrintServiceAttributeListener<br/>\njavax/rmi/<br/>\njavax/rmi/CORBA/<br/>\njavax/rmi/CORBA/ClassDesc<br/>\njavax/rmi/CORBA/GetORBPropertiesFileAction<br/>\njavax/rmi/CORBA/PortableRemoteObjectDelegate<br/>\njavax/rmi/CORBA/Stub<br/>\njavax/rmi/CORBA/StubDelegate<br/>\njavax/rmi/CORBA/Tie<br/>\njavax/rmi/CORBA/Util<br/>\njavax/rmi/CORBA/UtilDelegate<br/>\njavax/rmi/CORBA/ValueHandler<br/>\njavax/rmi/CORBA/ValueHandlerMultiFormat<br/>\njavax/rmi/PortableRemoteObject<br/>\njavax/rmi/ssl/<br/>\njavax/rmi/ssl/SslRMIClientSocketFactory<br/>\njavax/rmi/ssl/SslRMIServerSocketFactory<br/>\njavax/security/<br/>\njavax/security/auth/<br/>\njavax/security/auth/AuthPermission<br/>\njavax/security/auth/DestroyFailedException<br/>\njavax/security/auth/Destroyable<br/>\njavax/security/auth/Policy<br/>\njavax/security/auth/PrivateCredentialPermission<br/>\njavax/security/auth/RefreshFailedException<br/>\njavax/security/auth/Refreshable<br/>\njavax/security/auth/Subject<br/>\njavax/security/auth/SubjectDomainCombiner<br/>\njavax/security/auth/callback/<br/>\njavax/security/auth/callback/Callback<br/>\njavax/security/auth/callback/CallbackHandler<br/>\njavax/security/auth/callback/ChoiceCallback<br/>\njavax/security/auth/callback/ConfirmationCallback<br/>\njavax/security/auth/callback/LanguageCallback<br/>\njavax/security/auth/callback/NameCallback<br/>\njavax/security/auth/callback/PasswordCallback<br/>\njavax/security/auth/callback/TextInputCallback<br/>\njavax/security/auth/callback/TextOutputCallback<br/>\njavax/security/auth/callback/UnsupportedCallbackException<br/>\njavax/security/auth/kerberos/<br/>\njavax/security/auth/kerberos/DelegationPermission<br/>\njavax/security/auth/kerberos/KerberosKey<br/>\njavax/security/auth/kerberos/KerberosPrincipal<br/>\njavax/security/auth/kerberos/KerberosTicket<br/>\njavax/security/auth/kerberos/KeyImpl<br/>\njavax/security/auth/kerberos/ServicePermission<br/>\njavax/security/auth/login/<br/>\njavax/security/auth/login/AccountException<br/>\njavax/security/auth/login/AccountExpiredException<br/>\njavax/security/auth/login/AccountLockedException<br/>\njavax/security/auth/login/AccountNotFoundException<br/>\njavax/security/auth/login/AppConfigurationEntry<br/>\njavax/security/auth/login/Configuration<br/>\njavax/security/auth/login/CredentialException<br/>\njavax/security/auth/login/CredentialExpiredException<br/>\njavax/security/auth/login/CredentialNotFoundException<br/>\njavax/security/auth/login/FailedLoginException<br/>\njavax/security/auth/login/LoginContext<br/>\njavax/security/auth/login/LoginException<br/>\njavax/security/auth/spi/<br/>\njavax/security/auth/spi/LoginModule<br/>\njavax/security/auth/x500/<br/>\njavax/security/auth/x500/X500Principal<br/>\njavax/security/auth/x500/X500PrivateCredential<br/>\njavax/security/sasl/<br/>\njavax/security/sasl/AuthenticationException<br/>\njavax/security/sasl/AuthorizeCallback<br/>\njavax/security/sasl/RealmCallback<br/>\njavax/security/sasl/RealmChoiceCallback<br/>\njavax/security/sasl/Sasl<br/>\njavax/security/sasl/SaslClient<br/>\njavax/security/sasl/SaslClientFactory<br/>\njavax/security/sasl/SaslException<br/>\njavax/security/sasl/SaslServer<br/>\njavax/security/sasl/SaslServerFactory<br/>\njavax/sound/<br/>\njavax/sound/midi/<br/>\njavax/sound/midi/ControllerEventListener<br/>\njavax/sound/midi/Instrument<br/>\njavax/sound/midi/InvalidMidiDataException<br/>\njavax/sound/midi/MetaEventListener<br/>\njavax/sound/midi/MetaMessage<br/>\njavax/sound/midi/MidiChannel<br/>\njavax/sound/midi/MidiDevice<br/>\njavax/sound/midi/MidiEvent<br/>\njavax/sound/midi/MidiFileFormat<br/>\njavax/sound/midi/MidiMessage<br/>\njavax/sound/midi/MidiSystem<br/>\njavax/sound/midi/MidiUnavailableException<br/>\njavax/sound/midi/Patch<br/>\njavax/sound/midi/Receiver<br/>\njavax/sound/midi/Sequence<br/>\njavax/sound/midi/Sequencer<br/>\njavax/sound/midi/ShortMessage<br/>\njavax/sound/midi/Soundbank<br/>\njavax/sound/midi/SoundbankResource<br/>\njavax/sound/midi/Synthesizer<br/>\njavax/sound/midi/SysexMessage<br/>\njavax/sound/midi/Track<br/>\njavax/sound/midi/Transmitter<br/>\njavax/sound/midi/VoiceStatus<br/>\njavax/sound/midi/spi/<br/>\njavax/sound/midi/spi/MidiDeviceProvider<br/>\njavax/sound/midi/spi/MidiFileReader<br/>\njavax/sound/midi/spi/MidiFileWriter<br/>\njavax/sound/midi/spi/SoundbankReader<br/>\njavax/sound/sampled/<br/>\njavax/sound/sampled/AudioFileFormat<br/>\njavax/sound/sampled/AudioFormat<br/>\njavax/sound/sampled/AudioInputStream<br/>\njavax/sound/sampled/AudioPermission<br/>\njavax/sound/sampled/AudioSystem<br/>\njavax/sound/sampled/BooleanControl<br/>\njavax/sound/sampled/Clip<br/>\njavax/sound/sampled/CompoundControl<br/>\njavax/sound/sampled/Control<br/>\njavax/sound/sampled/DataLine<br/>\njavax/sound/sampled/EnumControl<br/>\njavax/sound/sampled/FloatControl<br/>\njavax/sound/sampled/Line<br/>\njavax/sound/sampled/LineEvent<br/>\njavax/sound/sampled/LineListener<br/>\njavax/sound/sampled/LineUnavailableException<br/>\njavax/sound/sampled/Mixer<br/>\njavax/sound/sampled/Port<br/>\njavax/sound/sampled/ReverbType<br/>\njavax/sound/sampled/SourceDataLine<br/>\njavax/sound/sampled/TargetDataLine<br/>\njavax/sound/sampled/UnsupportedAudioFileException<br/>\njavax/sound/sampled/spi/<br/>\njavax/sound/sampled/spi/AudioFileReader<br/>\njavax/sound/sampled/spi/AudioFileWriter<br/>\njavax/sound/sampled/spi/FormatConversionProvider<br/>\njavax/sound/sampled/spi/MixerProvider<br/>\njavax/sql/<br/>\njavax/sql/ConnectionEvent<br/>\njavax/sql/ConnectionEventListener<br/>\njavax/sql/ConnectionPoolDataSource<br/>\njavax/sql/DataSource<br/>\njavax/sql/PooledConnection<br/>\njavax/sql/RowSet<br/>\njavax/sql/RowSetEvent<br/>\njavax/sql/RowSetInternal<br/>\njavax/sql/RowSetListener<br/>\njavax/sql/RowSetMetaData<br/>\njavax/sql/RowSetReader<br/>\njavax/sql/RowSetWriter<br/>\njavax/sql/XAConnection<br/>\njavax/sql/XADataSource<br/>\njavax/sql/rowset/<br/>\njavax/sql/rowset/BaseRowSet<br/>\njavax/sql/rowset/CachedRowSet<br/>\njavax/sql/rowset/FilteredRowSet<br/>\njavax/sql/rowset/JdbcRowSet<br/>\njavax/sql/rowset/JoinRowSet<br/>\njavax/sql/rowset/Joinable<br/>\njavax/sql/rowset/Predicate<br/>\njavax/sql/rowset/RowSetMetaDataImpl<br/>\njavax/sql/rowset/RowSetWarning<br/>\njavax/sql/rowset/WebRowSet<br/>\njavax/sql/rowset/serial/<br/>\njavax/sql/rowset/serial/SQLInputImpl<br/>\njavax/sql/rowset/serial/SQLOutputImpl<br/>\njavax/sql/rowset/serial/SerialArray<br/>\njavax/sql/rowset/serial/SerialBlob<br/>\njavax/sql/rowset/serial/SerialClob<br/>\njavax/sql/rowset/serial/SerialDatalink<br/>\njavax/sql/rowset/serial/SerialException<br/>\njavax/sql/rowset/serial/SerialJavaObject<br/>\njavax/sql/rowset/serial/SerialRef<br/>\njavax/sql/rowset/serial/SerialStruct<br/>\njavax/sql/rowset/spi/<br/>\njavax/sql/rowset/spi/SyncFactory<br/>\njavax/sql/rowset/spi/SyncFactoryException<br/>\njavax/sql/rowset/spi/SyncProvider<br/>\njavax/sql/rowset/spi/SyncProviderException<br/>\njavax/sql/rowset/spi/SyncResolver<br/>\njavax/sql/rowset/spi/TransactionalWriter<br/>\njavax/sql/rowset/spi/XmlReader<br/>\njavax/sql/rowset/spi/XmlWriter<br/>\njavax/swing/<br/>\njavax/swing/AbstractAction<br/>\njavax/swing/AbstractActionPropertyChangeListener<br/>\njavax/swing/AbstractButton<br/>\njavax/swing/AbstractCellEditor<br/>\njavax/swing/AbstractListModel<br/>\njavax/swing/AbstractSpinnerModel<br/>\njavax/swing/Action<br/>\njavax/swing/ActionMap<br/>\njavax/swing/AncestorNotifier<br/>\njavax/swing/ArrayTable<br/>\njavax/swing/Autoscroller<br/>\njavax/swing/BorderFactory<br/>\njavax/swing/BoundedRangeModel<br/>\njavax/swing/Box<br/>\njavax/swing/BoxLayout<br/>\njavax/swing/ButtonGroup<br/>\njavax/swing/ButtonModel<br/>\njavax/swing/CellEditor<br/>\njavax/swing/CellRendererPane<br/>\njavax/swing/ComboBoxEditor<br/>\njavax/swing/ComboBoxModel<br/>\njavax/swing/ComponentInputMap<br/>\njavax/swing/DebugGraphics<br/>\njavax/swing/DebugGraphicsFilter<br/>\njavax/swing/DebugGraphicsInfo<br/>\njavax/swing/DebugGraphicsObserver<br/>\njavax/swing/DefaultBoundedRangeModel<br/>\njavax/swing/DefaultButtonModel<br/>\njavax/swing/DefaultCellEditor<br/>\njavax/swing/DefaultComboBoxModel<br/>\njavax/swing/DefaultDesktopManager<br/>\njavax/swing/DefaultFocusManager<br/>\njavax/swing/DefaultListCellRenderer<br/>\njavax/swing/DefaultListModel<br/>\njavax/swing/DefaultListSelectionModel<br/>\njavax/swing/DefaultSingleSelectionModel<br/>\njavax/swing/DelegatingDefaultFocusManager<br/>\njavax/swing/DesktopManager<br/>\njavax/swing/FocusManager<br/>\njavax/swing/GraphicsWrapper<br/>\njavax/swing/GrayFilter<br/>\njavax/swing/Icon<br/>\njavax/swing/ImageIcon<br/>\njavax/swing/InputMap<br/>\njavax/swing/InputVerifier<br/>\njavax/swing/InternalFrameFocusTraversalPolicy<br/>\njavax/swing/JApplet<br/>\njavax/swing/JButton<br/>\njavax/swing/JCheckBox<br/>\njavax/swing/JCheckBoxMenuItem<br/>\njavax/swing/JColorChooser<br/>\njavax/swing/JComboBox<br/>\njavax/swing/JComponent<br/>\njavax/swing/JDesktopPane<br/>\njavax/swing/JDialog<br/>\njavax/swing/JEditorPane<br/>\njavax/swing/JFileChooser<br/>\njavax/swing/JFormattedTextField<br/>\njavax/swing/JFrame<br/>\njavax/swing/JInternalFrame<br/>\njavax/swing/JLabel<br/>\njavax/swing/JLayeredPane<br/>\njavax/swing/JList<br/>\njavax/swing/JMenu<br/>\njavax/swing/JMenuBar<br/>\njavax/swing/JMenuItem<br/>\njavax/swing/JOptionPane<br/>\njavax/swing/JPanel<br/>\njavax/swing/JPasswordField<br/>\njavax/swing/JPopupMenu<br/>\njavax/swing/JProgressBar<br/>\njavax/swing/JRadioButton<br/>\njavax/swing/JRadioButtonMenuItem<br/>\njavax/swing/JRootPane<br/>\njavax/swing/JScrollBar<br/>\njavax/swing/JScrollPane<br/>\njavax/swing/JSeparator<br/>\njavax/swing/JSlider<br/>\njavax/swing/JSpinner<br/>\njavax/swing/JSplitPane<br/>\njavax/swing/JTabbedPane<br/>\njavax/swing/JTable<br/>\njavax/swing/JTextArea<br/>\njavax/swing/JTextField<br/>\njavax/swing/JTextPane<br/>\njavax/swing/JToggleButton<br/>\njavax/swing/JToolBar<br/>\njavax/swing/JToolTip<br/>\njavax/swing/JTree<br/>\njavax/swing/JViewport<br/>\njavax/swing/JWindow<br/>\njavax/swing/KeyStroke<br/>\njavax/swing/KeyboardManager<br/>\njavax/swing/LayoutComparator<br/>\njavax/swing/LayoutFocusTraversalPolicy<br/>\njavax/swing/LegacyGlueFocusTraversalPolicy<br/>\njavax/swing/ListCellRenderer<br/>\njavax/swing/ListModel<br/>\njavax/swing/ListSelectionModel<br/>\njavax/swing/LookAndFeel<br/>\njavax/swing/MenuElement<br/>\njavax/swing/MenuSelectionManager<br/>\njavax/swing/MultiUIDefaults<br/>\njavax/swing/MutableComboBoxModel<br/>\njavax/swing/OverlayLayout<br/>\njavax/swing/Popup<br/>\njavax/swing/PopupFactory<br/>\njavax/swing/ProgressMonitor<br/>\njavax/swing/ProgressMonitorInputStream<br/>\njavax/swing/Renderer<br/>\njavax/swing/RepaintManager<br/>\njavax/swing/RootPaneContainer<br/>\njavax/swing/ScrollPaneConstants<br/>\njavax/swing/ScrollPaneLayout<br/>\njavax/swing/Scrollable<br/>\njavax/swing/SingleSelectionModel<br/>\njavax/swing/SizeRequirements<br/>\njavax/swing/SizeSequence<br/>\njavax/swing/SortingFocusTraversalPolicy<br/>\njavax/swing/SpinnerDateModel<br/>\njavax/swing/SpinnerListModel<br/>\njavax/swing/SpinnerModel<br/>\njavax/swing/SpinnerNumberModel<br/>\njavax/swing/<a href=\"http://lib.csdn.net/base/javaee\" class=\"replace_word\" title=\"Java EE知识库\" style=\"color:rgb(223,52,52);text-decoration:none;font-weight:bold;\">spring</a><br/>\njavax/swing/SpringLayout<br/>\njavax/swing/SwingConstants<br/>\njavax/swing/SwingUtilities<br/>\njavax/swing/SystemEventQueueUtilities<br/>\njavax/swing/TablePrintable<br/>\njavax/swing/Timer<br/>\njavax/swing/TimerQueue<br/>\njavax/swing/ToolTipManager<br/>\njavax/swing/TransferHandler<br/>\njavax/swing/UIDefaults<br/>\njavax/swing/UIManager<br/>\njavax/swing/UnsupportedLookAndFeelException<br/>\njavax/swing/ViewportLayout<br/>\njavax/swing/WindowConstants<br/>\njavax/swing/border/<br/>\njavax/swing/border/AbstractBorder<br/>\njavax/swing/border/BevelBorder<br/>\njavax/swing/border/Border<br/>\njavax/swing/border/CompoundBorder<br/>\njavax/swing/border/EmptyBorder<br/>\njavax/swing/border/EtchedBorder<br/>\njavax/swing/border/LineBorder<br/>\njavax/swing/border/MatteBorder<br/>\njavax/swing/border/SoftBevelBorder<br/>\njavax/swing/border/TitledBorder<br/>\njavax/swing/colorchooser/<br/>\njavax/swing/colorchooser/AbstractColorChooserPanel<br/>\njavax/swing/colorchooser/CenterLayout<br/>\njavax/swing/colorchooser/ColorChooserComponentFactory<br/>\njavax/swing/colorchooser/ColorSelectionModel<br/>\njavax/swing/colorchooser/DefaultColorSelectionModel<br/>\njavax/swing/colorchooser/DefaultHSBChooserPanel<br/>\njavax/swing/colorchooser/DefaultPreviewPanel<br/>\njavax/swing/colorchooser/DefaultRGBChooserPanel<br/>\njavax/swing/colorchooser/DefaultSwatchChooserPanel<br/>\njavax/swing/colorchooser/SmartGridLayout<br/>\njavax/swing/colorchooser/SyntheticImage<br/>\njavax/swing/event/<br/>\njavax/swing/event/AncestorEvent<br/>\njavax/swing/event/AncestorListener<br/>\njavax/swing/event/CaretEvent<br/>\njavax/swing/event/CaretListener<br/>\njavax/swing/event/CellEditorListener<br/>\njavax/swing/event/ChangeEvent<br/>\njavax/swing/event/ChangeListener<br/>\njavax/swing/event/DocumentEvent<br/>\njavax/swing/event/DocumentListener<br/>\njavax/swing/event/EventListenerList<br/>\njavax/swing/event/HyperlinkEvent<br/>\njavax/swing/event/HyperlinkListener<br/>\njavax/swing/event/InternalFrameAdapter<br/>\njavax/swing/event/InternalFrameEvent<br/>\njavax/swing/event/InternalFrameListener<br/>\njavax/swing/event/ListDataEvent<br/>\njavax/swing/event/ListDataListener<br/>\njavax/swing/event/ListSelectionEvent<br/>\njavax/swing/event/ListSelectionListener<br/>\njavax/swing/event/MenuDragMouseEvent<br/>\njavax/swing/event/MenuDragMouseListener<br/>\njavax/swing/event/MenuEvent<br/>\njavax/swing/event/MenuKeyEvent<br/>\njavax/swing/event/MenuKeyListener<br/>\njavax/swing/event/MenuListener<br/>\njavax/swing/event/MouseInputAdapter<br/>\njavax/swing/event/MouseInputListener<br/>\njavax/swing/event/PopupMenuEvent<br/>\njavax/swing/event/PopupMenuListener<br/>\njavax/swing/event/SwingPropertyChangeSupport<br/>\njavax/swing/event/TableColumnModelEvent<br/>\njavax/swing/event/TableColumnModelListener<br/>\njavax/swing/event/TableModelEvent<br/>\njavax/swing/event/TableModelListener<br/>\njavax/swing/event/TreeExpansionEvent<br/>\njavax/swing/event/TreeExpansionListener<br/>\njavax/swing/event/TreeModelEvent<br/>\njavax/swing/event/TreeModelListener<br/>\njavax/swing/event/TreeSelectionEvent<br/>\njavax/swing/event/TreeSelectionListener<br/>\njavax/swing/event/TreeWillExpandListener<br/>\njavax/swing/event/UndoableEditEvent<br/>\njavax/swing/event/UndoableEditListener<br/>\njavax/swing/filechooser/<br/>\njavax/swing/filechooser/FileFilter<br/>\njavax/swing/filechooser/FileSystemView<br/>\njavax/swing/filechooser/FileView<br/>\njavax/swing/plaf/<br/>\njavax/swing/plaf/ActionMapUIResource<br/>\njavax/swing/plaf/BorderUIResource<br/>\njavax/swing/plaf/ButtonUI<br/>\njavax/swing/plaf/ColorChooserUI<br/>\njavax/swing/plaf/ColorUIResource<br/>\njavax/swing/plaf/ComboBoxUI<br/>\njavax/swing/plaf/ComponentInputMapUIResource<br/>\njavax/swing/plaf/ComponentUI<br/>\njavax/swing/plaf/DesktopIconUI<br/>\njavax/swing/plaf/DesktopPaneUI<br/>\njavax/swing/plaf/DimensionUIResource<br/>\njavax/swing/plaf/FileChooserUI<br/>\njavax/swing/plaf/FontUIResource<br/>\njavax/swing/plaf/IconUIResource<br/>\njavax/swing/plaf/InputMapUIResource<br/>\njavax/swing/plaf/InsetsUIResource<br/>\njavax/swing/plaf/InternalFrameUI<br/>\njavax/swing/plaf/LabelUI<br/>\njavax/swing/plaf/ListUI<br/>\njavax/swing/plaf/MenuBarUI<br/>\njavax/swing/plaf/MenuItemUI<br/>\njavax/swing/plaf/OptionPaneUI<br/>\njavax/swing/plaf/PanelUI<br/>\njavax/swing/plaf/PopupMenuUI<br/>\njavax/swing/plaf/ProgressBarUI<br/>\njavax/swing/plaf/RootPaneUI<br/>\njavax/swing/plaf/ScrollBarUI<br/>\njavax/swing/plaf/ScrollPaneUI<br/>\njavax/swing/plaf/SeparatorUI<br/>\njavax/swing/plaf/SliderUI<br/>\njavax/swing/plaf/SpinnerUI<br/>\njavax/swing/plaf/SplitPaneUI<br/>\njavax/swing/plaf/TabbedPaneUI<br/>\njavax/swing/plaf/TableHeaderUI<br/>\njavax/swing/plaf/TableUI<br/>\njavax/swing/plaf/TextUI<br/>\njavax/swing/plaf/ToolBarUI<br/>\njavax/swing/plaf/ToolTipUI<br/>\njavax/swing/plaf/TreeUI<br/>\njavax/swing/plaf/UIResource<br/>\njavax/swing/plaf/ViewportUI<br/>\njavax/swing/plaf/basic/<br/>\njavax/swing/plaf/basic/BasicArrowButton<br/>\njavax/swing/plaf/basic/BasicBorders<br/>\njavax/swing/plaf/basic/BasicButtonListener<br/>\njavax/swing/plaf/basic/BasicButtonUI<br/>\njavax/swing/plaf/basic/BasicCheckBoxMenuItemUI<br/>\njavax/swing/plaf/basic/BasicCheckBoxUI<br/>\njavax/swing/plaf/basic/BasicColorChooserUI<br/>\njavax/swing/plaf/basic/BasicComboBoxEditor<br/>\njavax/swing/plaf/basic/BasicComboBoxRenderer<br/>\njavax/swing/plaf/basic/BasicComboBoxUI<br/>\njavax/swing/plaf/basic/BasicComboPopup<br/>\njavax/swing/plaf/basic/BasicDesktopIconUI<br/>\njavax/swing/plaf/basic/BasicDesktopPaneUI<br/>\njavax/swing/plaf/basic/BasicDirectoryModel<br/>\njavax/swing/plaf/basic/BasicDragGestureRecognizer<br/>\njavax/swing/plaf/basic/BasicDropTargetListener<br/>\njavax/swing/plaf/basic/BasicEditorPaneUI<br/>\njavax/swing/plaf/basic/BasicFileChooserUI<br/>\njavax/swing/plaf/basic/BasicFormattedTextFieldUI<br/>\njavax/swing/plaf/basic/BasicGraphicsUtils<br/>\njavax/swing/plaf/basic/BasicHTML<br/>\njavax/swing/plaf/basic/BasicIconFactory<br/>\njavax/swing/plaf/basic/BasicInternalFrameTitlePane<br/>\njavax/swing/plaf/basic/BasicInternalFrameUI<br/>\njavax/swing/plaf/basic/BasicLabelUI<br/>\njavax/swing/plaf/basic/BasicListUI<br/>\njavax/swing/plaf/basic/BasicLookAndFeel<br/>\njavax/swing/plaf/basic/BasicMenuBarUI<br/>\njavax/swing/plaf/basic/BasicMenuItemUI<br/>\njavax/swing/plaf/basic/BasicMenuUI<br/>\njavax/swing/plaf/basic/BasicOptionPaneUI<br/>\njavax/swing/plaf/basic/BasicPanelUI<br/>\njavax/swing/plaf/basic/BasicPasswordFieldUI<br/>\njavax/swing/plaf/basic/BasicPopupMenuSeparatorUI<br/>\njavax/swing/plaf/basic/BasicPopupMenuUI<br/>\njavax/swing/plaf/basic/BasicProgressBarUI<br/>\njavax/swing/plaf/basic/BasicRadioButtonMenuItemUI<br/>\njavax/swing/plaf/basic/BasicRadioButtonUI<br/>\njavax/swing/plaf/basic/BasicRootPaneUI<br/>\njavax/swing/plaf/basic/BasicScrollBarUI<br/>\njavax/swing/plaf/basic/BasicScrollPaneUI<br/>\njavax/swing/plaf/basic/BasicSeparatorUI<br/>\njavax/swing/plaf/basic/BasicSliderUI<br/>\njavax/swing/plaf/basic/BasicSpinnerUI<br/>\njavax/swing/plaf/basic/BasicSplitPaneDivider<br/>\njavax/swing/plaf/basic/BasicSplitPaneUI<br/>\njavax/swing/plaf/basic/BasicTabbedPaneUI<br/>\njavax/swing/plaf/basic/BasicTableHeaderUI<br/>\njavax/swing/plaf/basic/BasicTableUI<br/>\njavax/swing/plaf/basic/BasicTextAreaUI<br/>\njavax/swing/plaf/basic/BasicTextFieldUI<br/>\njavax/swing/plaf/basic/BasicTextPaneUI<br/>\njavax/swing/plaf/basic/BasicTextUI<br/>\njavax/swing/plaf/basic/BasicToggleButtonUI<br/>\njavax/swing/plaf/basic/BasicToolBarSeparatorUI<br/>\njavax/swing/plaf/basic/BasicToolBarUI<br/>\njavax/swing/plaf/basic/BasicToolTipUI<br/>\njavax/swing/plaf/basic/BasicTransferable<br/>\njavax/swing/plaf/basic/BasicTreeUI<br/>\njavax/swing/plaf/basic/BasicViewportUI<br/>\njavax/swing/plaf/basic/CenterLayout<br/>\njavax/swing/plaf/basic/ComboPopup<br/>\njavax/swing/plaf/basic/DefaultMenuLayout<br/>\njavax/swing/plaf/basic/DragRecognitionSupport<br/>\njavax/swing/plaf/basic/LazyActionMap<br/>\njavax/swing/plaf/metal/<br/>\njavax/swing/plaf/metal/CachedPainter<br/>\njavax/swing/plaf/metal/DefaultMetalTheme<br/>\njavax/swing/plaf/metal/MetalBorders<br/>\njavax/swing/plaf/metal/MetalBumps<br/>\njavax/swing/plaf/metal/MetalButtonUI<br/>\njavax/swing/plaf/metal/MetalCheckBoxIcon<br/>\njavax/swing/plaf/metal/MetalCheckBoxUI<br/>\njavax/swing/plaf/metal/MetalComboBoxButton<br/>\njavax/swing/plaf/metal/MetalComboBoxEditor<br/>\njavax/swing/plaf/metal/MetalComboBoxIcon<br/>\njavax/swing/plaf/metal/MetalComboBoxUI<br/>\njavax/swing/plaf/metal/MetalDesktopIconUI<br/>\njavax/swing/plaf/metal/MetalFileChooserUI<br/>\njavax/swing/plaf/metal/MetalFontDesktopProperty<br/>\njavax/swing/plaf/metal/MetalHighContrastTheme<br/>\njavax/swing/plaf/metal/MetalIconFactory<br/>\njavax/swing/plaf/metal/MetalInternalFrameTitlePane<br/>\njavax/swing/plaf/metal/MetalInternalFrameUI<br/>\njavax/swing/plaf/metal/MetalLabelUI<br/>\njavax/swing/plaf/metal/MetalLookAndFeel<br/>\njavax/swing/plaf/metal/MetalMenuBarUI<br/>\njavax/swing/plaf/metal/MetalPopupMenuSeparatorUI<br/>\njavax/swing/plaf/metal/MetalProgressBarUI<br/>\njavax/swing/plaf/metal/MetalRadioButtonUI<br/>\njavax/swing/plaf/metal/MetalRootPaneUI<br/>\njavax/swing/plaf/metal/MetalScrollBarUI<br/>\njavax/swing/plaf/metal/MetalScrollButton<br/>\njavax/swing/plaf/metal/MetalScrollPaneUI<br/>\njavax/swing/plaf/metal/MetalSeparatorUI<br/>\njavax/swing/plaf/metal/MetalSliderUI<br/>\njavax/swing/plaf/metal/MetalSplitPaneDivider<br/>\njavax/swing/plaf/metal/MetalSplitPaneUI<br/>\njavax/swing/plaf/metal/MetalTabbedPaneUI<br/>\njavax/swing/plaf/metal/MetalTextFieldUI<br/>\njavax/swing/plaf/metal/MetalTheme<br/>\njavax/swing/plaf/metal/MetalTitlePane<br/>\njavax/swing/plaf/metal/MetalToggleButtonUI<br/>\njavax/swing/plaf/metal/MetalToolBarUI<br/>\njavax/swing/plaf/metal/MetalToolTipUI<br/>\njavax/swing/plaf/metal/MetalTreeUI<br/>\njavax/swing/plaf/metal/MetalUtils<br/>\njavax/swing/plaf/metal/OceanTheme<br/>\njavax/swing/plaf/multi/<br/>\njavax/swing/plaf/multi/MultiButtonUI<br/>\njavax/swing/plaf/multi/MultiColorChooserUI<br/>\njavax/swing/plaf/multi/MultiComboBoxUI<br/>\njavax/swing/plaf/multi/MultiDesktopIconUI<br/>\njavax/swing/plaf/multi/MultiDesktopPaneUI<br/>\njavax/swing/plaf/multi/MultiFileChooserUI<br/>\njavax/swing/plaf/multi/MultiInternalFrameUI<br/>\njavax/swing/plaf/multi/MultiLabelUI<br/>\njavax/swing/plaf/multi/MultiListUI<br/>\njavax/swing/plaf/multi/MultiLookAndFeel<br/>\njavax/swing/plaf/multi/MultiMenuBarUI<br/>\njavax/swing/plaf/multi/MultiMenuItemUI<br/>\njavax/swing/plaf/multi/MultiOptionPaneUI<br/>\njavax/swing/plaf/multi/MultiPanelUI<br/>\njavax/swing/plaf/multi/MultiPopupMenuUI<br/>\njavax/swing/plaf/multi/MultiProgressBarUI<br/>\njavax/swing/plaf/multi/MultiRootPaneUI<br/>\njavax/swing/plaf/multi/MultiScrollBarUI<br/>\njavax/swing/plaf/multi/MultiScrollPaneUI<br/>\njavax/swing/plaf/multi/MultiSeparatorUI<br/>\njavax/swing/plaf/multi/MultiSliderUI<br/>\njavax/swing/plaf/multi/MultiSpinnerUI<br/>\njavax/swing/plaf/multi/MultiSplitPaneUI<br/>\njavax/swing/plaf/multi/MultiTabbedPaneUI<br/>\njavax/swing/plaf/multi/MultiTableHeaderUI<br/>\njavax/swing/plaf/multi/MultiTableUI<br/>\njavax/swing/plaf/multi/MultiTextUI<br/>\njavax/swing/plaf/multi/MultiToolBarUI<br/>\njavax/swing/plaf/multi/MultiToolTipUI<br/>\njavax/swing/plaf/multi/MultiTreeUI<br/>\njavax/swing/plaf/multi/MultiViewportUI<br/>\njavax/swing/plaf/synth/<br/>\njavax/swing/plaf/synth/ColorType<br/>\njavax/swing/plaf/synth/DefaultMenuLayout<br/>\njavax/swing/plaf/synth/DefaultSynthStyleFactory<br/>\njavax/swing/plaf/synth/ImagePainter<br/>\njavax/swing/plaf/synth/ParsedSynthStyle<br/>\njavax/swing/plaf/synth/Region<br/>\njavax/swing/plaf/synth/SynthArrowButton<br/>\njavax/swing/plaf/synth/SynthBorder<br/>\njavax/swing/plaf/synth/SynthButtonUI<br/>\njavax/swing/plaf/synth/SynthCheckBoxMenuItemUI<br/>\njavax/swing/plaf/synth/SynthCheckBoxUI<br/>\njavax/swing/plaf/synth/SynthColorChooserUI<br/>\njavax/swing/plaf/synth/SynthComboBoxUI<br/>\njavax/swing/plaf/synth/SynthComboPopup<br/>\njavax/swing/plaf/synth/SynthConstants<br/>\njavax/swing/plaf/synth/SynthContext<br/>\njavax/swing/plaf/synth/SynthDefaultLookup<br/>\njavax/swing/plaf/synth/SynthDesktopIconUI<br/>\njavax/swing/plaf/synth/SynthDesktopPaneUI<br/>\njavax/swing/plaf/synth/SynthEditorPaneUI<br/>\njavax/swing/plaf/synth/SynthFormattedTextFieldUI<br/>\njavax/swing/plaf/synth/SynthGraphicsUtils<br/>\njavax/swing/plaf/synth/SynthInternalFrameTitlePane<br/>\njavax/swing/plaf/synth/SynthInternalFrameUI<br/>\njavax/swing/plaf/synth/SynthLabelUI<br/>\njavax/swing/plaf/synth/SynthListUI<br/>\njavax/swing/plaf/synth/SynthLookAndFeel<br/>\njavax/swing/plaf/synth/SynthMenuBarUI<br/>\njavax/swing/plaf/synth/SynthMenuItemUI<br/>\njavax/swing/plaf/synth/SynthMenuUI<br/>\njavax/swing/plaf/synth/SynthOptionPaneUI<br/>\njavax/swing/plaf/synth/SynthPainter<br/>\njavax/swing/plaf/synth/SynthPanelUI<br/>\njavax/swing/plaf/synth/SynthParser<br/>\njavax/swing/plaf/synth/SynthPasswordFieldUI<br/>\njavax/swing/plaf/synth/SynthPopupMenuUI<br/>\njavax/swing/plaf/synth/SynthProgressBarUI<br/>\njavax/swing/plaf/synth/SynthRadioButtonMenuItemUI<br/>\njavax/swing/plaf/synth/SynthRadioButtonUI<br/>\njavax/swing/plaf/synth/SynthRootPaneUI<br/>\njavax/swing/plaf/synth/SynthScrollBarUI<br/>\njavax/swing/plaf/synth/SynthScrollPaneUI<br/>\njavax/swing/plaf/synth/SynthSeparatorUI<br/>\njavax/swing/plaf/synth/SynthSliderUI<br/>\njavax/swing/plaf/synth/SynthSpinnerUI<br/>\njavax/swing/plaf/synth/SynthSplitPaneDivider<br/>\njavax/swing/plaf/synth/SynthSplitPaneUI<br/>\njavax/swing/plaf/synth/SynthStyle<br/>\njavax/swing/plaf/synth/SynthStyleFactory<br/>\njavax/swing/plaf/synth/SynthTabbedPaneUI<br/>\njavax/swing/plaf/synth/SynthTableHeaderUI<br/>\njavax/swing/plaf/synth/SynthTableUI<br/>\njavax/swing/plaf/synth/SynthTextAreaUI<br/>\njavax/swing/plaf/synth/SynthTextFieldUI<br/>\njavax/swing/plaf/synth/SynthTextPaneUI<br/>\njavax/swing/plaf/synth/SynthToggleButtonUI<br/>\njavax/swing/plaf/synth/SynthToolBarUI<br/>\njavax/swing/plaf/synth/SynthToolTipUI<br/>\njavax/swing/plaf/synth/SynthTreeUI<br/>\njavax/swing/plaf/synth/SynthViewportUI<br/>\njavax/swing/table/<br/>\njavax/swing/table/AbstractTableModel<br/>\njavax/swing/table/DefaultTableCellRenderer<br/>\njavax/swing/table/DefaultTableColumnModel<br/>\njavax/swing/table/DefaultTableModel<br/>\njavax/swing/table/JTableHeader<br/>\njavax/swing/table/TableCellEditor<br/>\njavax/swing/table/TableCellRenderer<br/>\njavax/swing/table/TableColumn<br/>\njavax/swing/table/TableColumnModel<br/>\njavax/swing/table/TableModel<br/>\njavax/swing/text/<br/>\njavax/swing/text/AbstractDocument<br/>\njavax/swing/text/AbstractWriter<br/>\njavax/swing/text/AsyncBoxView<br/>\njavax/swing/text/AttributeSet<br/>\njavax/swing/text/BadLocationException<br/>\njavax/swing/text/BoxView<br/>\njavax/swing/text/Caret<br/>\njavax/swing/text/ChangedCharSetException<br/>\njavax/swing/text/ComponentView<br/>\njavax/swing/text/CompositeView<br/>\njavax/swing/text/DateFormatter<br/>\njavax/swing/text/DefaultCaret<br/>\njavax/swing/text/DefaultEditorKit<br/>\njavax/swing/text/DefaultFormatter<br/>\njavax/swing/text/DefaultFormatterFactory<br/>\njavax/swing/text/DefaultHighlighter<br/>\njavax/swing/text/DefaultStyledDocument<br/>\njavax/swing/text/DefaultTextUI<br/>\njavax/swing/text/Document<br/>\njavax/swing/text/DocumentFilter<br/>\njavax/swing/text/EditorKit<br/>\njavax/swing/text/Element<br/>\njavax/swing/text/ElementIterator<br/>\njavax/swing/text/FieldView<br/>\njavax/swing/text/FlowView<br/>\njavax/swing/text/GapContent<br/>\njavax/swing/text/GapVector<br/>\njavax/swing/text/GlyphPainter1<br/>\njavax/swing/text/GlyphPainter2<br/>\njavax/swing/text/GlyphView<br/>\njavax/swing/text/Highlighter<br/>\njavax/swing/text/IconView<br/>\njavax/swing/text/InternationalFormatter<br/>\njavax/swing/text/JTextComponent<br/>\njavax/swing/text/Keymap<br/>\njavax/swing/text/LabelView<br/>\njavax/swing/text/LayeredHighlighter<br/>\njavax/swing/text/LayoutQueue<br/>\njavax/swing/text/MaskFormatter<br/>\njavax/swing/text/MutableAttributeSet<br/>\njavax/swing/text/NavigationFilter<br/>\njavax/swing/text/NumberFormatter<br/>\njavax/swing/text/ParagraphView<br/>\njavax/swing/text/PasswordView<br/>\njavax/swing/text/PlainDocument<br/>\njavax/swing/text/PlainView<br/>\njavax/swing/text/Position<br/>\njavax/swing/text/Segment<br/>\njavax/swing/text/SegmentCache<br/>\njavax/swing/text/SimpleAttributeSet<br/>\njavax/swing/text/StateInvariantError<br/>\njavax/swing/text/StringContent<br/>\njavax/swing/text/Style<br/>\njavax/swing/text/StyleConstants<br/>\njavax/swing/text/StyleContext<br/>\njavax/swing/text/StyledDocument<br/>\njavax/swing/text/StyledEditorKit<br/>\njavax/swing/text/TabExpander<br/>\njavax/swing/text/TabSet<br/>\njavax/swing/text/TabStop<br/>\njavax/swing/text/TabableView<br/>\njavax/swing/text/TableView<br/>\njavax/swing/text/TextAction<br/>\njavax/swing/text/TextLayoutStrategy<br/>\njavax/swing/text/Utilities<br/>\njavax/swing/text/View<br/>\njavax/swing/text/ViewFactory<br/>\njavax/swing/text/WrappedPlainView<br/>\njavax/swing/text/ZoneView<br/>\njavax/swing/text/html/<br/>\njavax/swing/text/html/AccessibleHTML<br/>\njavax/swing/text/html/BRView<br/>\njavax/swing/text/html/BlockView<br/>\njavax/swing/text/html/CSS<br/>\njavax/swing/text/html/CSSParser<br/>\njavax/swing/text/html/CommentView<br/>\njavax/swing/text/html/EditableView<br/>\njavax/swing/text/html/FormSubmitEvent<br/>\njavax/swing/text/html/FormView<br/>\njavax/swing/text/html/FrameSetView<br/>\njavax/swing/text/html/FrameView<br/>\njavax/swing/text/html/HRuleView<br/>\njavax/swing/text/html/HTML<br/>\njavax/swing/text/html/HTMLDocument<br/>\njavax/swing/text/html/HTMLEditorKit<br/>\njavax/swing/text/html/HTMLFrameHyperlinkEvent<br/>\njavax/swing/text/html/HTMLWriter<br/>\njavax/swing/text/html/HiddenTagView<br/>\njavax/swing/text/html/ImageView<br/>\njavax/swing/text/html/InlineView<br/>\njavax/swing/text/html/IsindexView<br/>\njavax/swing/text/html/LineView<br/>\njavax/swing/text/html/ListView<br/>\njavax/swing/text/html/Map<br/>\njavax/swing/text/html/MinimalHTMLWriter<br/>\njavax/swing/text/html/MuxingAttributeSet<br/>\njavax/swing/text/html/NoFramesView<br/>\njavax/swing/text/html/ObjectView<br/>\njavax/swing/text/html/Option<br/>\njavax/swing/text/html/OptionComboBoxModel<br/>\njavax/swing/text/html/OptionListModel<br/>\njavax/swing/text/html/ParagraphView<br/>\njavax/swing/text/html/ResourceLoader<br/>\njavax/swing/text/html/StyleSheet<br/>\njavax/swing/text/html/TableView<br/>\njavax/swing/text/html/TextAreaDocument<br/>\njavax/swing/text/html/parser/<br/>\njavax/swing/text/html/parser/AttributeList<br/>\njavax/swing/text/html/parser/ContentModel<br/>\njavax/swing/text/html/parser/ContentModelState<br/>\njavax/swing/text/html/parser/DTD<br/>\njavax/swing/text/html/parser/DTDConstants<br/>\njavax/swing/text/html/parser/DocumentParser<br/>\njavax/swing/text/html/parser/Element<br/>\njavax/swing/text/html/parser/Entity<br/>\njavax/swing/text/html/parser/Parser<br/>\njavax/swing/text/html/parser/ParserDelegator<br/>\njavax/swing/text/html/parser/ResourceLoader<br/>\njavax/swing/text/html/parser/TagElement<br/>\njavax/swing/text/html/parser/TagStack<br/>\njavax/swing/text/rtf/<br/>\njavax/swing/text/rtf/AbstractFilter<br/>\njavax/swing/text/rtf/Constants<br/>\njavax/swing/text/rtf/MockAttributeSet<br/>\njavax/swing/text/rtf/RTFAttribute<br/>\njavax/swing/text/rtf/RTFAttributes<br/>\njavax/swing/text/rtf/RTFEditorKit<br/>\njavax/swing/text/rtf/RTFGenerator<br/>\njavax/swing/text/rtf/RTFParser<br/>\njavax/swing/text/rtf/RTFReader<br/>\njavax/swing/tree/<br/>\njavax/swing/tree/AbstractLayoutCache<br/>\njavax/swing/tree/DefaultMutableTreeNode<br/>\njavax/swing/tree/DefaultTreeCellEditor<br/>\njavax/swing/tree/DefaultTreeCellRenderer<br/>\njavax/swing/tree/DefaultTreeModel<br/>\njavax/swing/tree/DefaultTreeSelectionModel<br/>\njavax/swing/tree/ExpandVetoException<br/>\njavax/swing/tree/FixedHeightLayoutCache<br/>\njavax/swing/tree/MutableTreeNode<br/>\njavax/swing/tree/RowMapper<br/>\njavax/swing/tree/TreeCellEditor<br/>\njavax/swing/tree/TreeCellRenderer<br/>\njavax/swing/tree/TreeModel<br/>\njavax/swing/tree/TreeNode<br/>\njavax/swing/tree/TreePath<br/>\njavax/swing/tree/TreeSelectionModel<br/>\njavax/swing/tree/VariableHeightLayoutCache<br/>\njavax/swing/undo/<br/>\njavax/swing/undo/AbstractUndoableEdit<br/>\njavax/swing/undo/CannotRedoException<br/>\njavax/swing/undo/CannotUndoException<br/>\njavax/swing/undo/CompoundEdit<br/>\njavax/swing/undo/StateEdit<br/>\njavax/swing/undo/StateEditable<br/>\njavax/swing/undo/UndoManager<br/>\njavax/swing/undo/UndoableEdit<br/>\njavax/swing/undo/UndoableEditSupport<br/>\njavax/xml/<br/>\njavax/xml/XMLConstants<br/>\njavax/xml/datatype/<br/>\njavax/xml/datatype/DatatypeConfigurationException<br/>\njavax/xml/datatype/DatatypeConstants<br/>\njavax/xml/datatype/DatatypeFactory<br/>\njavax/xml/datatype/Duration<br/>\njavax/xml/datatype/FactoryFinder<br/>\njavax/xml/datatype/SecuritySupport<br/>\njavax/xml/datatype/XMLGregorianCalendar<br/>\njavax/xml/namespace/<br/>\njavax/xml/namespace/NamespaceContext<br/>\njavax/xml/namespace/QName<br/>\njavax/xml/parsers/<br/>\njavax/xml/parsers/DocumentBuilder<br/>\njavax/xml/parsers/DocumentBuilderFactory<br/>\njavax/xml/parsers/FactoryConfigurationError<br/>\njavax/xml/parsers/FactoryFinder<br/>\njavax/xml/parsers/ParserConfigurationException<br/>\njavax/xml/parsers/SAXParser<br/>\njavax/xml/parsers/SAXParserFactory<br/>\njavax/xml/parsers/SecuritySupport<br/>\njavax/xml/transform/<br/>\njavax/xml/transform/ErrorListener<br/>\njavax/xml/transform/FactoryFinder<br/>\njavax/xml/transform/OutputKeys<br/>\njavax/xml/transform/Result<br/>\njavax/xml/transform/SecuritySupport<br/>\njavax/xml/transform/Source<br/>\njavax/xml/transform/SourceLocator<br/>\njavax/xml/transform/Templates<br/>\njavax/xml/transform/Transformer<br/>\njavax/xml/transform/TransformerConfigurationException<br/>\njavax/xml/transform/TransformerException<br/>\njavax/xml/transform/TransformerFactory<br/>\njavax/xml/transform/TransformerFactoryConfigurationError<br/>\njavax/xml/transform/URIResolver<br/>\njavax/xml/transform/dom/<br/>\njavax/xml/transform/dom/DOMLocator<br/>\njavax/xml/transform/dom/DOMResult<br/>\njavax/xml/transform/dom/DOMSource<br/>\njavax/xml/transform/sax/<br/>\njavax/xml/transform/sax/SAXResult<br/>\njavax/xml/transform/sax/SAXSource<br/>\njavax/xml/transform/sax/SAXTransformerFactory<br/>\njavax/xml/transform/sax/TemplatesHandler<br/>\njavax/xml/transform/sax/TransformerHandler<br/>\njavax/xml/transform/stream/<br/>\njavax/xml/transform/stream/StreamResult<br/>\njavax/xml/transform/stream/StreamSource<br/>\njavax/xml/validation/<br/>\njavax/xml/validation/Schema<br/>\njavax/xml/validation/SchemaFactory<br/>\njavax/xml/validation/SchemaFactoryFinder<br/>\njavax/xml/validation/SchemaFactoryLoader<br/>\njavax/xml/validation/SecuritySupport<br/>\njavax/xml/validation/TypeInfoProvider<br/>\njavax/xml/validation/Validator<br/>\njavax/xml/validation/ValidatorHandler<br/>\njavax/xml/xpath/<br/>\njavax/xml/xpath/SecuritySupport<br/>\njavax/xml/xpath/XPath<br/>\njavax/xml/xpath/XPathConstants<br/>\njavax/xml/xpath/XPathException<br/>\njavax/xml/xpath/XPathExpression<br/>\njavax/xml/xpath/XPathExpressionException<br/>\njavax/xml/xpath/XPathFactory<br/>\njavax/xml/xpath/XPathFactoryConfigurationException<br/>\njavax/xml/xpath/XPathFactoryFinder<br/>\njavax/xml/xpath/XPathFunction<br/>\njavax/xml/xpath/XPathFunctionException<br/>\njavax/xml/xpath/XPathFunctionResolver<br/>\njavax/xml/xpath/XPathVariableResolver</p>\n</div>\n<div class=\"bdsharebuttonbox tracking-ad bdshare-button-style0-16\" style=\"font-family:Arial, Console, Verdana, 'Courier New';float:right;\">\n<a href=\"http://blog.csdn.net/yongqingmiao/article/details/6272171#\" class=\"bds_more\" style=\"color:rgb(51,51,51);text-decoration:none;float:left;padding-left:17px;line-height:16px;margin:6px 6px 6px 0px;\"/><a href=\"http://blog.csdn.net/yongqingmiao/article/details/6272171#\" class=\"bds_qzone\" title=\"分享到QQ空间\" style=\"color:rgb(202,0,0);text-decoration:none;float:left;padding-left:17px;line-height:16px;margin:6px 6px 6px 0px;\"/><a href=\"http://blog.csdn.net/yongqingmiao/article/details/6272171#\" class=\"bds_tsina\" title=\"分享到新浪微博\" style=\"color:rgb(202,0,0);text-decoration:none;float:left;padding-left:17px;line-height:16px;margin:6px 6px 6px 0px;\"/><a href=\"http://blog.csdn.net/yongqingmiao/article/details/6272171#\" class=\"bds_tqq\" title=\"分享到腾讯微博\" style=\"color:rgb(202,0,0);text-decoration:none;float:left;padding-left:17px;line-height:16px;margin:6px 6px 6px 0px;\"/><a href=\"http://blog.csdn.net/yongqingmiao/article/details/6272171#\" class=\"bds_renren\" title=\"分享到人人网\" style=\"color:rgb(202,0,0);text-decoration:none;float:left;padding-left:17px;line-height:16px;margin:6px 6px 6px 0px;\"/><a href=\"http://blog.csdn.net/yongqingmiao/article/details/6272171#\" class=\"bds_weixin\" title=\"分享到微信\" style=\"color:rgb(202,0,0);text-decoration:none;float:left;padding-left:17px;line-height:16px;margin:6px 6px 6px 0px;\"/></div>\n<div id=\"digg\" style=\"clear:both;margin:0px auto;padding:30px 0px 15px;text-align:center;font-family:Arial, Console, Verdana, 'Courier New';\">\n</div>\n            </div>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"Java SE 基础概述（一）",
			"content":"\n                    <div class=\"markdown_views\">\n                <h1 id=\"java-se基础概述\">Java SE基础概述</h1>\n\n<p>Java SE : Java Standard Edition <br/>\nJava ME : Java Mobile Edition <br/>\nJava EE : Java Enerprise Edition</p>\n\n<p>JDK : Java Development Kit（Java开发必备） <br/>\nJRE : Java Runtime Environment（Java执行环境） <br/>\n其中JDK包含了JRE</p>\n\n\n\n<h4 id=\"java环境变量配置\"><strong>Java环境变量配置</strong></h4>\n\n<p>　　环境变量是一个具有特定名字的对象，它包含了一个或者多个应用程序所将使用到的信息。例如path，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到path中指定的路径去找。用户通过设置环境变量，来更好的运行进程。 <br/>\n　　右键我的电脑-&gt;属性-&gt;高级-&gt;环境变量 中配置系统变量和用户变量，新建系统变量： <br/>\n　　变量名：JAVA_HOME  <br/>\n　　变量值：D:\\Program Files\\Java\\jdk1.8.0_40（其中变量值为jdk的安装目录） <br/>\n　　变量名：CLASSPATH  <br/>\n　　变量值：;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; <br/>\n　　变量名：Path  <br/>\n　　变量值：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin; <br/>\n　　最后通过命令行窗口输入java -version，显示出Java版本信息 <br/>\n<img src=\"https://img-blog.csdn.net/20150427103821849\" alt=\"Java版本信息\" title=\"\"/> <br/>\nJava程序的执行分为两步：</p>\n\n<ol>\n<li>编译命令：java Test.java</li>\n<li>执行命令：java Test（没有.java）</li>\n</ol>\n\n<p>Class文件是字节码文件，程序最终执行的就是这个字节码（bytecode）文件</p>\n\n<h4 id=\"primitive-data-type-pitfall-of-primitive-data-type\"><strong>Primitive Data Type &amp; Pitfall of Primitive Data Type</strong></h4>\n\n<ol>\n<li><p>Java中的数据类型分为两大类： <br/>\n原生数据类型（Primitive Data Type） <br/>\n引用类型（对象类型）（Reference Type）</p></li>\n<li><p>如何定义变量？ <br/>\n变量类型 变量名;</p></li>\n<li><p>变量命名规则： <br/>\n在Java中，变量名以下划线、字母、<span class=\"MathJax_Preview\"/><span class=\"MathJax\" id=\"MathJax-Element-127-Frame\" role=\"textbox\" aria-readonly=\"true\"><nobr><span class=\"math\" id=\"MathJax-Span-6295\" style=\"width: 16.003em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 12.803em; height: 0px; font-size: 125%;\"><span style=\"position: absolute; clip: rect(1.389em 1000.003em 2.723em -0.477em); top: -2.344em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-6296\"><span class=\"texatom\" id=\"MathJax-Span-6297\"><span class=\"mrow\" id=\"MathJax-Span-6298\"><span class=\"mo\" id=\"MathJax-Span-6299\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">字</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6300\"><span class=\"mrow\" id=\"MathJax-Span-6301\"><span class=\"mo\" id=\"MathJax-Span-6302\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">符</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6303\"><span class=\"mrow\" id=\"MathJax-Span-6304\"><span class=\"mo\" id=\"MathJax-Span-6305\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">开</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6306\"><span class=\"mrow\" id=\"MathJax-Span-6307\"><span class=\"mo\" id=\"MathJax-Span-6308\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">头</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6309\"><span class=\"mrow\" id=\"MathJax-Span-6310\"><span class=\"mo\" id=\"MathJax-Span-6311\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">，</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6312\"><span class=\"mrow\" id=\"MathJax-Span-6313\"><span class=\"mo\" id=\"MathJax-Span-6314\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">并</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6315\"><span class=\"mrow\" id=\"MathJax-Span-6316\"><span class=\"mo\" id=\"MathJax-Span-6317\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">且</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6318\"><span class=\"mrow\" id=\"MathJax-Span-6319\"><span class=\"mo\" id=\"MathJax-Span-6320\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">后</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6321\"><span class=\"mrow\" id=\"MathJax-Span-6322\"><span class=\"mo\" id=\"MathJax-Span-6323\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">跟</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6324\"><span class=\"mrow\" id=\"MathJax-Span-6325\"><span class=\"mo\" id=\"MathJax-Span-6326\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">下</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6327\"><span class=\"mrow\" id=\"MathJax-Span-6328\"><span class=\"mo\" id=\"MathJax-Span-6329\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">划</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6330\"><span class=\"mrow\" id=\"MathJax-Span-6331\"><span class=\"mo\" id=\"MathJax-Span-6332\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">线</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6333\"><span class=\"mrow\" id=\"MathJax-Span-6334\"><span class=\"mo\" id=\"MathJax-Span-6335\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">、</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6336\"><span class=\"mrow\" id=\"MathJax-Span-6337\"><span class=\"mo\" id=\"MathJax-Span-6338\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">字</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6339\"><span class=\"mrow\" id=\"MathJax-Span-6340\"><span class=\"mo\" id=\"MathJax-Span-6341\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">母</span></span></span></span><span class=\"texatom\" id=\"MathJax-Span-6342\"><span class=\"mrow\" id=\"MathJax-Span-6343\"><span class=\"mo\" id=\"MathJax-Span-6344\"><span style=\"font-family: STIXGeneral, 'Arial Unicode MS', serif; font-size: 80%; font-style: normal; font-weight: normal;\">、</span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.349em;\"/></span></span><span style=\"border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.403em; vertical-align: -0.33em;\"/></span></nobr></span><script type=\"math/tex\" id=\"MathJax-Element-127\">字符开头，并且后跟下划线、字母、</script>符号以及数字。Java中的变量名不能以数字开头。</p></li>\n<li><p>Java中的原生数据类型：</p>\n\n<ol><li>整形：使用 int 表示。 （32位）</li>\n<li>字节型：使用 byte 表示。（表示-128~127之间的256个整数）。</li>\n<li>短整型：使用 short 表示 。（16位）</li>\n<li>长整型：使用 long 表示。（64位）</li>\n<li>单精度浮点型：使用 float 表示。</li>\n<li>双精度浮点型：使用 double 表示。</li>\n<li>字符型：使用 char 表示。 </li>\n<li>布尔类型：使用 boolean 表示。</li></ol></li>\n<li><p>Java中的所有浮点类型默认情况下都为double。不能将double类型的值赋给float类型的变量，即便该double类型的值处于float类型的范围内也是不可以的。总之，能否成功赋值取决于等号右边的值类型与等号左边的变量类型是否一致。</p></li>\n<li>可以将表示范围小的值赋给表示范围大的变量，但不能直接将表示范围大的值赋给表示范围小的变量，只能通过强制类型转换实现。</li>\n<li>Java的注释方法： <br/>\n<ol><li>单行注释：以//开头，//后面的本行所有内容均被当做注释处理</li>\n<li>多行注释：/* */ 同C++</li>\n<li>另一种多行注释。用于产生java doc帮助文档   /<em>*   </em>/</li></ol></li>\n</ol>\n\n<h4 id=\"operater\"><strong>Operater</strong></h4>\n\n<ol>\n<li>当有若干个变量参与运算时，结果类型取决于这些变量中表示范围最大的那个变量类型。</li>\n<li>取模的规律：取模的结果符号永远与被除数的符号相同</li>\n</ol>\n\n\n\n<h4 id=\"object-oriented-programing\"><strong>Object Oriented Programing</strong></h4>\n\n<ol>\n<li>在面向对象程序设计中有两个重要的概念：类（class）与对象（object）。</li>\n<li>类：类是一种抽象的概念，类中包含了数据（通常使用使用名词）与对数据的操纵（通常使用动词表示）。</li>\n<li>对象：对象是一种具体的概念，是类的一种具体表示方式。</li>\n<li>类所包含的内容，类一共包含两部分的内容： <br/>\n<ol><li>数据，数据在类中称作属性（ property或attribute）或者叫成员变量（member variable）。</li>\n<li>对数据的操纵，这种操纵在类中称作方法（method）。</li></ol></li>\n</ol>\n\n<h4 id=\"encapsulation-面向对象之封装\"><strong>Encapsulation 面向对象之封装</strong></h4>\n\n<ol>\n<li>面向对象程序设计的三大特征：继承（inheritance）、封装（ encapsulation）、多态（ polymorphism）。</li>\n<li>封装：类包含了数据与方法，将数据与方法放在一个类中就构成了封装。</li>\n<li>类的定义： <img src=\"https://img-blog.csdn.net/20150427110102615\" alt=\"这里写图片描述\" title=\"\"/></li>\n<li>方法的定义：<img src=\"https://img-blog.csdn.net/20150427110023983\" alt=\"这里写图片描述\" title=\"\"/></li>\n<li>main方法是整个Java程序的入口点，如果类的定义中没有main方法，则程序无法执行。</li>\n<li>方法定义不能嵌套，也就是说不能在一个方法中定义另一个方法。方法只能定义在类中。</li>\n<li>关于方法的执行：首先需要定义方法，接下来就可以使用方法（调用方法），当方法调用完毕后，方法可以返回值。方法是否返回值由方法的定义决定。</li>\n<li>如何生成对象？通过类来生成对象（通常使用new关键字来生成对象）。    <img src=\"https://img-blog.csdn.net/20150427110104901\" alt=\"这里写图片描述\" title=\"\"/></li>\n<li><p>方法调用需要通过对象来完成，方法的调用形式是： <br/>\n<img src=\"https://img-blog.csdn.net/20150427110241957\" alt=\"这里写图片描述\" title=\"\"/></p></li>\n<li><p>方法定义时的参数叫做形式参数，方法调用时所赋予的具体值叫做实际参数。</p></li>\n</ol>            </div>\n            <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/markdown_views-ea0013b516.css\"/>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"java学习_1.java介绍以及第一个程序",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                \n<p> </p>\n<p>Java SE：Java StandardEdition</p>\n<p>Java ME: Java Micro Edition</p>\n<p>Java EE：Java EnterpriseEdition</p>\n<p> </p>\n<p>Java是由Sun公司推出的（已被Oracle公司收购）。</p>\n<p> </p>\n<p>收购价格：74亿美金</p>\n<p> </p>\n<p>J2SE=java SE、 J2ME、J2EE</p>\n<p> </p>\n<p>JDK：Java DevelopmentKit  java开发包（Java开发必备）</p>\n<p>JRE：Java RuntimeEnvironment （Java执行环境）</p>\n<p> </p>\n<p>JDK包含了JRE。</p>\n<p>Java.exe  javac.exe (c=compile)</p>\n<p>Bin=binary 二进制的</p>\n<p> </p>\n<p>Jdk 1.4, jdk 1.5(5.0), jdk 1.6(6.0)</p>\n<p> </p>\n<p>jdk 1.5(5.0)：Tiger，老虎</p>\n<p>jdk 1.6(6.0)：Mustang，野马</p>\n<p> </p>\n<p>1.      下载JDK</p>\n<p>2.      安装JDK</p>\n<p>3.      设定环境变量（可以是用户变量，也可以是系统变量），指向JDK安装目录中的bin目录</p>\n<p>4.      通过运行，输入cmd打开命令行窗口，输入java –version，显示出Java版本信息</p>\n<p> </p>\n<p>接下来就可以编写Java程序了。</p>\n<p> </p>\n<p>可以直接使用windows记事本来编写Java程序，也可以使用Editplus，UltraEdit等高级文本编辑工具编写Java程序，还可以使用专业的IDE（Integrated DevelopmentEnvironment）编写。</p>\n<p> </p>\n<p>Hello World的Java程序。</p>\n<p> </p>\n<p><strong>所有的Java代码，其后缀都是以java结尾。</strong></p>\n<p><strong> </strong></p>\n<p><strong>Java程序的执行过程分为两步：</strong></p>\n<p><strong>1.     编译</strong></p>\n<p><strong>2.     执行</strong></p>\n<p><strong> </strong></p>\n<p>Class文件是字节码文件，程序最终执行的就是这个字节码（bytecode）文件。</p>\n<p>编译命令：java Test.java</p>\n<p>执行命令：java Test（注意，Test后面没有.class）</p>\n<p> </p>\n<p> </p>\n<p>输入代码：</p>\n<p>public class Test</p>\n<p>{</p>\n<p>       public static voidmain(String[]args)</p>\n<p>       {</p>\n<p>              System.out.println(\"hello,world\");</p>\n<p>       }</p>\n<p>}</p>\n<p> </p>\n<p>去掉public 类名可以和文件名不一样，但是执行的时候按类名来。</p>\n<p> </p>\n<p><strong>Java是跨平台的语言，真正执行的不是二进制代码，而是字节码。</strong></p>\n<p><strong> </strong></p>\n<p><strong>JVM（Java Virtual Machine，Java虚拟机）</strong></p>\n<p><strong> </strong></p>\n<p><strong>Java是跨平台的，而JVM不是跨平台的（JVM是由C语言编写的）</strong></p>\n<p><strong> </strong></p>\n<p><strong>Java之所以能够做到跨平台，本质原因在于JVM不是跨平台的。</strong></p>\n<p><strong> </strong></p>\n<p><strong> </strong></p>\n            </div>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"java体系结构",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                \n<p>java体系结构包含了四个相对独立但相关的技术：</p>\n<p>java程序设计语言；Java class文件格式；Java应用程序接口(API)；Java虚拟机；</p>\n<p>其中，Java API和Java虚拟机被称为Java平台<br/></p>\n<br/>            </div>\n                ",
			"keywords":["programing"]
		},
		
		{

			"title":"linux下查看java路径",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                <p>用命令 whereis java就可以看到了 <br/>\n eg: <br/>\n -bash-3.1$ whereis java <br/>\n java: /usr/bin/java /etc/java /usr/lib/java /usr/share/java /opt/jdk1.6.0_01/bin/java <br/><br/>\n 如果仅仅想知道java执行路径在那里的话 用which java就可以了 <br/>\n eg: <br/>\n -bash-3.1$ which java <br/>\n /usr/bin/java</p>            </div>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"Java变量类型",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                \n<p><span style=\"color:#008000;\">       根据声明方式来为变量分类<br/></span><span style=\"color:#008000;\">             </span>根据声明方式详细来区分，Java的变量有七种,下面的程序代码展示了这七种变量的声明方式：<br/>\n             </p>\n<pre class=\"java\">    Class Myclass {\n                        static int a;\n                        int b;\n                        public static void myMethod(int c)  {\n                              try {\n                        int d;\n                              } catch(Exception e) {\n                           }\n                   }\n                    MyClass(int f) {\n                        int[]g = new int[100];\n                        }\n                     }</pre>\n<p><br/><br/>\n         <span style=\"color:#000000;\">class variable:</span><span style=\"color:#000000;\">声明在class内，method之外，且使用static修饰的变量,例如上面程序代码的a.<br/>\n         </span><span style=\"color:#000000;\">instance variable:</span><span style=\"color:#000000;\">声明在class内，method之外，且未使用static修饰的变量，例如上面程序的b.<br/>\n         </span><span style=\"color:#000000;\">method parameter:</span><span style=\"color:#000000;\">声明在method小括号内的变量，例如上面程序代码的c.<br/>\n         </span><span style=\"color:#000000;\">狭义的局部变量(local variable):</span><span style=\"color:#000000;\">声明在method内的变量，例如上面程序代码的d和g.<br/>\n         </span><span style=\"color:#000000;\">exception-handler parameter:</span><span style=\"color:#000000;\">声明在catch小括号内的变量，例如上面程序代码的e.<br/>\n        </span><span style=\"color:#000000;\"> constructor parameter:</span><span style=\"color:#000000;\">声明在constructor小括号内的变量，例如上面程序代码的f.<br/>\n         </span><span style=\"color:#000000;\">数组元素(array element):</span><span style=\"color:#000000;\">数组的元素值没有识别名称，必须透过数组和索引值(index)来识别.例如上面 程序代码的g[0].<br/>\n         <br/>\n         </span><span style=\"color:#008000;\">根据变量内存来分类<br/>\n             <span style=\"color:#000000;\">根据变量内存位置来区分，Java的变量有两种，包括了:<br/>\n          heap variable:占用的内存在heap中，这类变量包括了class variable,instance variable,array component,<br/>\n          即前面程序的a,b,g[0].这类变量会自动被JVM初始化默认值.<br/>\n          stack variable:通常广义的局部变量(pan-local variable),其占的内存在stack中，这类变量包括了狭义的<br/>\n          局部变量，method parameter,exception-handler parameter,constructor parameter,即前面程序 的c,d,e,f.狭义   的局部变量不会被JVM初始化成默认值，使用者必须自行初始化该变量,但是parameter类(包括method parameter,exception-handler parameter,constructor parameter)会被JVM初始化成传入值.</span></span></p>\n<p><span style=\"color:#008000;\"><span style=\"color:#000000;\"><br/>\n        </span><span style=\"color:#008000;\">根据使用方式来为变量分类<br/>\n            <span style=\"color:#000000;\">根据使用方式，只要分三类即可，分别是:<br/>\n        class variable:即上例的a.<br/>\n        instance variable:即上例的b.<br/>\n        广义的局部变量:包含上例的c,d,e,f.这四者的差别很小，直接归为一类.<br/>\n        至于\"数组元素\"(array component)则不在此三类中，但是\"数组元素\"并不常被注意到，为它多分出一类的用处不大.我通常将数组视为对象,将array component视为对象的instance variable. </span></span></span></p>\n<p><br/></p>\n<p>转自：<a href=\"http://www.blogjava.net/TonyW/archive/2005/06/12/5950.html\">http://www.blogjava.net/TonyW/archive/2005/06/12/5950.html</a></p>\n<div>﻿﻿</div>\n            </div>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"Java串口通信详解】",
			"content":"\n                    <div class=\"markdown_views\">\n                <h2 id=\"序言\">序言</h2>\n\n<p>说到开源，恐怕很少有人不挑大指称赞。学生通过开源代码学到了知识，程序员通过开源类库获得了别人的成功经验及能够按时完成手头的工程，商家通过开源软件赚到了钱……，总之是皆大欢喜。然而开源软件或类库的首要缺点就是大多缺乏详细的说明文档和使用的例子，或者就是软件代码随便你用，就是文档，例子和后期服务收钱。这也难怪，毕竟就像某个著名NBA球员说的那样：“我还要养家，所以千万美元以下的合同别找我谈，否则我宁可待业”。是啊，支持开源的人也要养家，收点钱也不过分。要想既不花钱又学到知识就只能借助网络和了，我只是想抛砖引玉，为开源事业做出点微薄共献，能为你的工程解决哪怕一个小问题，也就足够了。</p>\n\n<p>虽然我的这个系列介绍的东西不是什么Web框架，也不是什么开源服务器，但是我相信，作为一个程序员，什么样的问题都会遇到。有时候越是简单的问题反而越棘手；越是小的地方就越是找不到称手的家伙。只要你不是整天只与“架构”、“构件”、“框架”打交道的话，相信我所说的东西你一定会用到。</p>\n\n\n\n<h2 id=\"1串口通信简介\"><strong>1</strong>．串口通信简介</h2>\n\n<p>嵌入式系统或传感器网络的很多应用和测试都需要通过PC机与嵌入式设备或传感器节点进行通信。其中，最常用的接口就是RS-232串口和并口（鉴于USB接口的复杂性以及不需要很大的数据传输量，USB接口用在这里还是显得过于奢侈，况且目前除了SUN有一个支持USB的包之外，我还没有看到其他直接支持USB的Java类库）。SUN的CommAPI分别提供了对常用的RS232串行端口和IEEE1284并行端口通讯的支持。RS-232-C(又称EIA RS-232-C，以下简称RS232)是在1970年由美国电子工业协会(EIA)联合贝尔系统、调制解调器厂家及计算机终端生产厂家共同制定的用于串行通讯的标准。RS232是一个全双工的通讯协议，它可以同时进行数据接收和发送的工作。</p>\n\n\n\n<h3 id=\"11常见的java串口包\"><strong>1.1</strong>．常见的Java串口包</h3>\n\n<p>目前，常见的Java串口包有SUN在1998年发布的串口通信API：comm2.0.jar（Windows下）、comm3.0.jar（Linux/Solaris）；IBM的串口通信API以及一个开源的实现。鉴于在Windows下SUN的API比较常用以及IBM的实现和SUN的在API层面都是一样的，那个开源的实现又不像两家大厂的产品那样让人放心，这里就只介绍SUN的串口通信API在Windows平台下的使用。</p>\n\n\n\n<h3 id=\"12串口包的安装windows下\"><strong>1.2</strong>．串口包的安装（Windows下）</h3>\n\n<p>到SUN的网站下载javacomm20-win32.zip，包含的东西如下所示： <br/>\n<img src=\"https://img-blog.csdn.net/20150216222501659\" alt=\"这里写图片描述\" title=\"\"/> <br/>\n按照其使用说明（Readme.html）的说法，要想使用串口包进行串口通信，除了设置好环境变量之外，还要将win32com.dll复制到/bin目录下；将comm.jar复制到/lib；把javax.comm.properties也同样拷贝到/lib目录下。然而在真正运行使用串口包的时候，仅作这些是不够的。因为通常当运行“java MyApp”的时候，是由JRE下的虚拟机启动MyApp的。而我们只复制上述文件到JDK相应目录下，所以应用程序将会提示找不到串口。解决这个问题的方法很简单，我们只须将上面提到的文件放到JRE相应的目录下就可以了。</p>\n\n\n\n<h2 id=\"2-串口api概览\"><strong>2</strong>． 串口API概览</h2>\n\n\n\n<h3 id=\"21javaxcommcommport\"><strong>2.1</strong>．javax.comm.CommPort</h3>\n\n<p>这是用于描述一个被底层系统支持的端口的抽象类。它包含一些高层的IO控制方法，这些方法对于所有不同的通讯端口来说是通用的。SerialPort 和ParallelPort都是它的子类，前者用于控制串行端口而后者用于控这并口，二者对于各自底层的物理端口都有不同的控制方法。这里我们只关心SerialPort。</p>\n\n\n\n<h3 id=\"22-javaxcommcommportidentifier\"><strong>2.2</strong>． javax.comm.CommPortIdentifier</h3>\n\n<p>这个类主要用于对串口进行管理和设置，是对串口进行访问控制的核心类。主要包括以下方法</p>\n\n<ul>\n<li>确定是否有可用的通信端口</li>\n<li>为IO操作打开通信端口</li>\n<li>决定端口的所有权</li>\n<li>处理端口所有权的争用</li>\n<li>管理端口所有权变化引发的事件（Event）</li>\n</ul>\n\n\n\n<h2 id=\"23javaxcommserialport\"><strong>2.3</strong>．javax.comm.SerialPort</h2>\n\n<p>这个类用于描述一个RS-232串行通信端口的底层接口，它定义了串口通信所需的最小功能集。通过它，用户可以直接对串口进行读、写及设置工作。</p>\n\n\n\n<h2 id=\"24串口api实例\"><strong>2.4</strong>．串口API实例</h2>\n\n<p>大段的文字怎么也不如一个小例子来的清晰，下面我们就一起看一下串口包自带的例子—SerialDemo中的一小段代码来加深对串口API核心类的使用方法的认识。</p>\n\n\n\n<h3 id=\"241列举出本机所有可用串口\"><strong>2.4.1</strong>．列举出本机所有可用串口</h3>\n\n<pre class=\"prettyprint\"><code class=\"language-java hljs \"><span class=\"hljs-keyword\">void</span> listPortChoices() {\n            CommPortIdentifier portId;\n            Enumeration en = CommPortIdentifier.getPortIdentifiers();\n            <span class=\"hljs-comment\">// iterate through the ports.</span>\n            <span class=\"hljs-keyword\">while</span> (en.hasMoreElements()) {\n                portId = (CommPortIdentifier) en.nextElement();\n                <span class=\"hljs-keyword\">if</span> (portId.getPortType() == CommPortIdentifier.PORT_SERIAL) {\n                    System.out.println(portId.getName());\n                }\n            }\n            portChoice.select(parameters.getPortName());\n        }</code></pre>\n\n<p>以上代码可以列举出当前系统所有可用的串口名称，我的机器上输出的结果是COM1和COM3。</p>\n\n\n\n<h3 id=\"242串口参数的配置\"><strong>2.4.2</strong>．串口参数的配置</h3>\n\n<p>串口一般有如下参数可以在该串口打开以前配置进行配置： <br/>\n<img src=\"https://img-blog.csdn.net/20150216223103832\" alt=\"这里写图片描述\" title=\"\"/> <br/>\n包括波特率，输入/输出流控制，数据位数，停止位和齐偶校验。</p>\n\n\n\n<pre class=\"prettyprint\"><code class=\"language-java hljs \">SerialPort sPort;\n<span class=\"hljs-keyword\">try</span> {            sPort.setSerialPortParams(BaudRate,Databits,Stopbits,Parity);\n                     <span class=\"hljs-comment\">//设置输入/输出控制流                     sPort.setFlowControlMode(FlowControlIn | FlowControlOut);</span>\n        } <span class=\"hljs-keyword\">catch</span> (UnsupportedCommOperationException e) {\n        }</code></pre>\n\n\n\n<h3 id=\"243串口的读写\"><strong>2.4.3</strong>．串口的读写</h3>\n\n<p>对串口读写之前需要先打开一个串口：</p>\n\n\n\n<pre class=\"prettyprint\"><code class=\"language-java hljs \">CommPortIdentifier portId = CommPortIdentifier.getPortIdentifier(PortName);\n<span class=\"hljs-keyword\">try</span> {\n            SerialPort  sPort = (SerialPort) portId.open(<span class=\"hljs-string\">\"串口所有者名称\"</span>, 超时等待时间);\n        } <span class=\"hljs-keyword\">catch</span> (PortInUseException e) {<span class=\"hljs-comment\">//如果端口被占用就抛出这个异常</span>\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> SerialConnectionException(e.getMessage());\n        }\n<span class=\"hljs-comment\">//用于对串口写数据</span>\nOutputStream os = <span class=\"hljs-keyword\">new</span> BufferedOutputStream(sPort.getOutputStream());\nos.write(<span class=\"hljs-keyword\">int</span> data);\n<span class=\"hljs-comment\">//用于从串口读数据</span>\nInputStream is = <span class=\"hljs-keyword\">new</span> BufferedInputStream(sPort.getInputStream());\n<span class=\"hljs-keyword\">int</span> receivedData = is.read();</code></pre>\n\n<p>读出来的是int型，你可以把它转换成需要的其他类型。 <br/>\n这里要注意的是，由于Java语言没有无符号类型，即所有的类型都是带符号的，在由byte到int的时候应该尤其注意。因为如果byte的最高位是1，则转成int类型时将用1来占位。这样，原本是10000000的byte类型的数变成int型就成了1111111110000000，这是很严重的问题，应该注意避免。</p>\n\n<h2 id=\"3串口通信的通用模式及其问题\"><strong>3</strong>．串口通信的通用模式及其问题</h2>\n\n<p>终于唠叨完我最讨厌的基础知识了，下面开始我们本次的重点–串口应用的研究。由于向串口写数据很简单，所以这里我们只关注于从串口读数据的情况。通常，串口通信应用程序有两种模式，一种是实现SerialPortEventListener接口，监听各种串口事件并作相应处理；另一种就是建立一个独立的接收线程专门负责数据的接收。由于这两种方法在某些情况下存在很严重的问题（至于什么问题这里先卖个关子J），所以我的实现是采用第三种方法来解决这个问题。</p>\n\n<h2 id=\"31事件监听模型\"><strong>3.1</strong>．事件监听模型</h2>\n\n<p>现在我们来看看事件监听模型是如何运作的：</p>\n\n<ul>\n<li>首先需要在你的端口控制类（例如SManager）加上“implements SerialPortEventListener”</li>\n<li>在初始化时加入如下代码：</li>\n</ul>\n\n<pre class=\"prettyprint\"><code class=\"language-java hljs \"><span class=\"hljs-keyword\">try</span> {\n            SerialPort sPort.addEventListener(SManager);\n        } <span class=\"hljs-keyword\">catch</span> (TooManyListenersException e) {\n            sPort.close();\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> SerialConnectionException(<span class=\"hljs-string\">\"too many listeners added\"</span>);\n        }\n        sPort.notifyOnDataAvailable(<span class=\"hljs-keyword\">true</span>);</code></pre>\n\n<ul>\n<li>覆写public void serialEvent(SerialPortEvent e)方法，在其中对如下事件进行判断： <br/>\n　　BI -通讯中断. <br/>\n　　CD -载波检测. <br/>\n　　CTS -清除发送. <br/>\n　　DATA_AVAILABLE -有数据到达. <br/>\n　　DSR -数据设备准备好. <br/>\n　　FE -帧错误. <br/>\n　　OE -溢位错误. <br/>\n　　OUTPUT_BUFFER_EMPTY -输出缓冲区已清空. <br/>\n　　PE -奇偶校验错. <br/>\n　　RI -　振铃指示.</li>\n</ul>\n\n<p>一般最常用的就是DATA_AVAILABLE–串口有数据到达事件。也就是说当串口有数据到达时，你可以在serialEvent中接收并处理所收到的数据。然而在我的实践中，遇到了一个十分严重的问题。 <br/>\n首先描述一下我的实验：我的应用程序需要接收传感器节点从串口发回的查询数据，并将结果以图标的形式显示出来。串口设定的波特率是115200，川口每隔128毫秒返回一组数据（大约是30字节左右），周期（即持续时间）为31秒。实测的时候在一个周期内应该返回4900多个字节，而用事件监听模型我最多只能收到不到1500字节，不知道这些字节都跑哪里去了，也不清楚到底丢失的是那部分数据。值得注意的是，这是我将serialEvent()中所有处理代码都注掉，只剩下打印代码所得的结果。数据丢失的如此严重是我所不能忍受的，于是我决定采用其他方法。</p>\n\n<h3 id=\"32串口读数据的线程模型\"><strong>3.2</strong>．串口读数据的线程模型</h3>\n\n<p>这个模型顾名思义，就是将接收数据的操作写成一个线程的形式:</p>\n\n\n\n<pre class=\"prettyprint\"><code class=\"language-java hljs \"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">startReadingDataThread</span>() {\n        Thread readDataProcess = <span class=\"hljs-keyword\">new</span> Thread(<span class=\"hljs-keyword\">new</span> Runnable() {\n            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">run</span>() {\n                            <span class=\"hljs-keyword\">while</span> (newData != -<span class=\"hljs-number\">1</span>) {\n                    <span class=\"hljs-keyword\">try</span> {\n                                          newData = is.read();\n                        System.out.println(newData);\n                                          <span class=\"hljs-comment\">//其他的处理过程</span>\n                                          ……….\n                                   } <span class=\"hljs-keyword\">catch</span> (IOException ex) {\n                        System.err.println(ex);\n                        <span class=\"hljs-keyword\">return</span>;\n                    }\n                     }\n              readDataProcess.start();\n}</code></pre>\n\n<p>在我的应用程序中，我将收到的数据打包放到一个缓存中，然后启动另一个线程从缓存中获取并处理数据。两个线程以生产者—消费者模式协同工作，数据的流向如下图所示： <br/>\n<img src=\"https://img-blog.csdn.net/20150216223828869\" alt=\"这里写图片描述\" title=\"\"/> <br/>\n这样，我就圆满解决了丢数据问题。然而，没高兴多久我就又发现了一个同样严重的问题：虽然这回不再丢数据了，可是原本一个周期（31秒）之后，传感器节电已经停止传送数据了，但我的串口线程依然在努力的执行读串口操作，在控制台也可以看见收到的数据仍在不断的打印。原来，由于传感器节点发送的数据过快，而我的接收线程处理不过来，所以InputStream就先把已到达却还没处理的字节缓存起来，于是就导致了明明传感器节点已经不再发数据了，而控制台却还能看见数据不断打印这一奇怪的现象。唯一值得庆幸的是最后收到数据确实是4900左右字节，没出现丢失现象。然而当处理完最后一个数据的时候已经快1分半钟了，这个时间远远大于节点运行周期。这一延迟对于一个实时的显示系统来说简直是灾难！ <br/>\n后来我想，是不是由于两个线程之间的同步和通信导致了数据接收缓慢呢？于是我在接收线程的代码中去掉了所有处理代码，仅保留打印收到数据的语句，结果依然如故。看来并不是线程间的通信阻碍了数据的接收速度，而是用线程模型导致了对于发送端数据发送速率过快的情况下的数据接收延迟。这里申明一点，就是对于数据发送速率不是如此快的情况下前面者两种模型应该还是好用的，只是特殊情况还是应该特殊处理。</p>\n\n\n\n<h3 id=\"33第三种方法\"><strong>3.3</strong>．第三种方法</h3>\n\n<p>痛苦了许久（Boss天天催我L）之后，偶然的机会，我听说TinyOS中（又是开源的）有一部分是和我的应用程序类似的串口通信部分，于是我下载了它的1.x版的Java代码部分，参考了它的处理方法。解决问题的方法说穿了其实很简单，就是从根源入手。根源不就是接收线程导致的吗，那好，我就干脆取消接收线程和作为中介的共享缓存，而直接在处理线程中调用串口读数据的方法来解决问题（什么，为什么不把处理线程也一并取消？—-都取消应用程序界面不就锁死了吗？所以必须保留）于是程序变成了这样：</p>\n\n\n\n<pre class=\"prettyprint\"><code class=\"language-java hljs \"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">byte</span>[] <span class=\"hljs-title\">getPack</span>(){\n       <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-keyword\">true</span>) {\n                       <span class=\"hljs-comment\">// PacketLength为数据包长度</span>\n                    <span class=\"hljs-keyword\">byte</span>[] msgPack = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">byte</span>[PacketLength];\n                    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; PacketLength; i++){\n                        <span class=\"hljs-keyword\">if</span>( (newData = is.read()) != -<span class=\"hljs-number\">1</span>){\n                            msgPack[i] = (<span class=\"hljs-keyword\">byte</span>) newData;\n                            System.out.println(msgPack[i]);\n                        }\n                    }\n                    <span class=\"hljs-keyword\">return</span> msgPack;\n                            }\n}</code></pre>\n\n<p>在处理线程中调用这个方法返回所需要的数据序列并处理之，这样不但没有丢失数据的现象行出现，也没有数据接收延迟了。这里唯一需要注意的就是当串口停止发送数据或没有数据的时候is.read()一直都返回-1，如果一旦在开始接收数据的时候发现-1就不要理它，继续接收，直到收到真正的数据为止。</p>            </div>\n            <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/markdown_views-ea0013b516.css\"/>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"JAVA的名词释义",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                JDK : Java Development Toolkit (java 开发工具包)。\n<p style=\"margin-left:30px;\">         JDK是整个JAVA的核心,包括了java运行环境（Java Runtime Envirnmet），一堆java工具（javac、java，jdb等）和java基础的类库（即 java API 包括rt.jar）</p>\n<p style=\"margin-left:30px;\">JRE: java运行环境（Java Runtime Envirnmet）</p>\n<p style=\"margin-left:30px;\">JVM:是JRE 的一部分，是java虚拟机。</p>            </div>\n                ",
			"keywords":["programing"]
		},
		{

			"title":"Java EE基础知识1",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                \n<p><span style=\"font-size:18px;\">一、Java EE规范及发展历史</span></p>\n<p><span style=\"font-size:18px;\"/></p>\n<p><span style=\"color:#002060;\">       Java</span><span style=\"color:#002060;\">平台的三种版本</span></p>\n<div><span style=\"color:#28BFEE;\"/><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span><span style=\"font-size:18px;\"><span style=\"color:#002060;\">       </span>\n</span>1、<span style=\"color:#002060;\">Java SE</span><span style=\"color:#002060;\">（</span><span style=\"color:#002060;\">Java\n</span><span style=\"color:#FF0000;\">S</span><span style=\"color:#002060;\">tandard </span>\n<span style=\"color:#FF0000;\">E</span><span style=\"color:#002060;\">dition</span><span style=\"color:#002060;\">）</span></div>\n<div><span style=\"color:#28BFEE;\"/><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span><span style=\"font-size:18px;\"><span style=\"color:#002060;\">       </span>\n</span>2、<span style=\"color:#002060;\">Java ME</span><span style=\"color:#002060;\"> （</span><span style=\"color:#002060;\">Java\n</span><span style=\"color:#FF0000;\">M</span><span style=\"color:#002060;\">icro </span><span style=\"color:#FF0000;\">E</span><span style=\"color:#002060;\">dition</span><span style=\"color:#002060;\">）</span></div>\n<div><span style=\"color:#28BFEE;\"/><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span><span style=\"font-size:18px;\"><span style=\"color:#002060;\">       </span>\n</span>3、<span style=\"color:#002060;\">Java EE</span><span style=\"color:#002060;\"> （</span><span style=\"color:#002060;\">Java\n</span><span style=\"color:#FF0000;\">E</span><span style=\"color:#002060;\">nterprise </span>\n<span style=\"color:#FF0000;\">E</span><span style=\"color:#002060;\">dition</span><span style=\"color:#002060;\">）<br/><br/>\n二、<span style=\"color:#000000;\">Java EE的角色<br/></span></span>\n<div><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span>1、</span><span style=\"color:#002060;\">JavaEE</span><span style=\"color:#002060;\">Product</span><span style=\"color:#002060;\">：</span><span style=\"color:#002060;\">即实现了</span><span style=\"color:#002060;\">Java EE</span><span style=\"color:#002060;\">技术规范的厂商\n</span></div>\n<div><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span>2、</span><span style=\"color:#002060;\">Application Component Provider</span></div>\n<div><span style=\"color:#49CACD;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span><span style=\"font-size:18px;\"><span style=\"color:#002060;\">       </span>\n</span></span><span style=\"color:#002060;\">企业</span><span style=\"color:#002060;\">Bean</span><span style=\"color:#002060;\">开发者</span></div>\n<div><span style=\"color:#49CACD;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span><span style=\"font-size:18px;\"><span style=\"color:#002060;\">       </span>\n</span></span><span style=\"color:#002060;\">Web</span><span style=\"color:#002060;\">组件开发者\n</span></div>\n<div><span style=\"color:#49CACD;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span><span style=\"font-size:18px;\"><span style=\"color:#002060;\">       </span>\n</span></span><span style=\"color:#002060;\">应用客户端开发者 </span></div>\n<div><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span>3、</span><span style=\"color:#002060;\">Application Assembler</span><span style=\"color:#002060;\">（打包</span><span style=\"color:#002060;\">.ear</span><span style=\"color:#002060;\">）</span></div>\n<div><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span>4、</span><span style=\"color:#002060;\">Deployer</span></div>\n<div><span style=\"color:#28BFEE;\"/><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span>5、<span style=\"color:#002060;\">System Administrator</span></div>\n<div><span style=\"color:#28BFEE;\"/><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span>6、<span style=\"color:#002060;\">Tool Provider：</span><span style=\"color:#002060;\">即工具厂商，比如开发、打包、装配以及部署工具的提供<br/><br/>\n三<span style=\"color:#000000;\">、EJB的概念<br/></span></span>\n<div><span style=\"color:#28BFEE;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">的产生：</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font><span style=\"color:#002060;\">服务器端构件开发很困难（多用户、多线程和事务处理等）</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font><span style=\"color:#002060;\">1998</span><span style=\"color:#002060;\">年</span><span style=\"color:#002060;\">3</span><span style=\"color:#002060;\">月召开的</span><span style=\"color:#002060;\">JavaOne98</span><span style=\"color:#002060;\">开发者大会上，</span><span style=\"color:#002060;\">SUN</span><span style=\"color:#002060;\">公司正式发布了</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">版规范（</span><span style=\"color:#002060;\">Enterprise\n</span><span style=\"color:#002060;\">JavaBean</span><span style=\"color:#002060;\"> 1.0</span><span style=\"color:#002060;\">）<br/><br/></span>\n<div><span style=\"color:#28BFEE;\">四、</span><span style=\"color:#002060;\">什么是</span><span style=\"color:#002060;\">EJB</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font>1、<span style=\"color:#002060;\">EJB\n</span><span style=\"color:#002060;\">（</span><span style=\"color:#002060;\">Enterprise Beans</span><span style=\"color:#002060;\">）是基于分布式事务处理的企业级应用程序的组件。</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font>2、<span style=\"color:#002060;\">Sun</span><span style=\"color:#002060;\">公司对</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">规范的定义：\n</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">是用于开发和部署基于组件的、多层结构的、分布式的、面向对象的</span><span style=\"color:#002060;\">Java</span><span style=\"color:#002060;\">商业应用系统的跨平台的一种组件架构。</span></div>\n<div><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font>3、</font><span style=\"color:#002060;\">用</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">架构开发的应用程序是可伸缩的、事务性的、多用户安全的。这些应用程序可能只需要编写一次，就可以在</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">规范的任何服务器上部署。<br/><br/>\n五<span style=\"color:#000000;\">、EJB的意义<br/></span></span>\n<div><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">用来干什么的？</span></div>\n<div><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">       </span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">实际上是用于编写</span><span style=\"color:#002060;\">业务层代码</span><span style=\"color:#002060;\">。对于一个基于</span><span style=\"color:#002060;\">MVC</span><span style=\"color:#002060;\">结构的应用，应包含显示层、控制层和业务层</span><span style=\"color:#002060;\">,\n</span><span style=\"color:#002060;\">假设我们采用</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">开发基于</span><span style=\"color:#002060;\">MVC</span><span style=\"color:#002060;\">结构的应用，那么</span><span style=\"color:#002060;\">ejb</span><span style=\"color:#002060;\">就是用于开发应用的业务层。<br/><br/></span>\n<div><span style=\"color:#28BFEE;\"><span style=\"color:#002060;\">六、</span></span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">的意义</span></div>\n<div><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>1、</font><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">为我们提供了很多在企业开发中需要使用到的服务，如事务管理、安全、持久化、分布式等，因为这些服务由服务器提供，无需我们自行开发，这样大大减少了我们的开发工作量。</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>2、<span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">是一种可以快速开发大规模企业应用的组件体系结构，它让应用开发者可以集中精力去开发解决各种复杂业务逻辑问题，而不用花费精力来处理分布式服务器、远程调用等底层技术。</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">模型可以让开发者避免底层功能的重复开发，从而提高开发效率。<br/><br/>\n七、<span style=\"color:#002060;\">以</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">为核心的应用程序结构</span><br/><img src=\"https://img-blog.csdn.net/20161113152747101?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" width=\"547\" height=\"289\" alt=\"\"/><br/><br/></span>\n<div><span style=\"color:#28BFEE;\"><span style=\"color:#002060;\">八、</span></span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">的应用场景</span></div>\n<div><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>1、</font><span style=\"color:#002060;\">应用的规模较大，而且增长速度快速。</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>2、<span style=\"color:#002060;\">应用的伸缩性要求很高。（分布式支持）</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>3、<span style=\"color:#002060;\">应用要求支持不同类型的客户端。</span></div>\n<div><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>4、</font><span style=\"color:#002060;\">应用要求采用标准技术。（</span><span style=\"color:#002060;\">EJB</span><span style=\"color:#002060;\">是规范中的标准技术）<br/><br/><span style=\"color:#000000;\">九、EJB3的分类<br/></span></span>\n<div><span style=\"color:#28BFEE;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>1、<span style=\"color:#002060;\">会话</span><span style=\"color:#002060;\">Bean(SessionBean)</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><span style=\"color:#002060;\">代表一个可处理应用中业务逻辑的完整组件，主要包含了各种业务逻辑的实现代码。也就是是编写业务逻辑的地方。</span></div>\n<div><span style=\"color:#28BFEE;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>2、<span style=\"color:#002060;\">消息驱动</span><span style=\"color:#002060;\">Bean(</span><span style=\"color:#002060;\">Message-Driven\n Bean</span><span style=\"color:#002060;\">，简称</span><span style=\"color:#002060;\">MDB</span><span style=\"color:#002060;\">)</span></div>\n<div><span style=\"color:#49CACD;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><span style=\"color:#002060;\">专门用于异步处理</span><span style=\"color:#002060;\">java</span><span style=\"color:#002060;\">消息的组件，具有处理大量并发消息的能力。它是由无状态</span><span style=\"color:#002060;\">Session\n Bean</span><span style=\"color:#002060;\">发展而来，用作</span><span style=\"color:#002060;\">JMS</span><span style=\"color:#002060;\">消息的异步消费者。</span></div>\n<div><span style=\"color:#28BFEE;\"/><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>3、<span style=\"color:#002060;\">JPA（Java</span><span style=\"color:#002060;\">Persistence\n API）</span></div>\n<div><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><span style=\"color:#002060;\">主要是为了简化现有的持久化开发工作和整合</span><span style=\"color:#002060;\">ORM</span><span style=\"color:#002060;\">技术</span></div>\n<div><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#28BFEE\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#49CACD\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><font color=\"#002060\"><font color=\"#000000\"><font size=\"4\"><font color=\"#002060\"><font color=\"#000000\"><span style=\"color:#28BFEE;\"><span style=\"font-size:18px;\"><span style=\"color:#002060;\">      \n</span></span></span></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><span style=\"color:#002060;\">实体</span><span style=\"color:#002060;\">Bean</span><span style=\"color:#002060;\">（</span><span style=\"color:#002060;\">Entity\n Bean）</span></div>\n<br/></div>\n<span style=\"color:#002060;\"/></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<span style=\"font-size:18px;\"><br/></span>\n            </div>\n                ",
			"keywords":["programing"]
		},
		
		{

			"title":"JVM——结构（小结）",
			"content":"\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\"/>\n            <div class=\"htmledit_views\">\n                \n<h1>\n</h1><p><span style=\"line-height:25px;\"><span style=\"font-family:SimSun;font-size:13px;\">Java体系：</span></span></p>\n<p><span style=\"line-height:25px;font-weight:normal;\"><span style=\"font-family:SimSun;font-size:13px;\">    JDK（Java development Kit）包括：java程序设计语言，java虚拟机，java API类库。如图：<br/></span></span></p>\n<p><span style=\"line-height:25px;font-weight:normal;\"><span style=\"font-family:SimSun;font-size:13px;\"><img src=\"http://hi.csdn.net/attachment/201111/8/0_132072628200NW.gif\" width=\"700\" height=\"342\" alt=\"\"/><br/></span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"line-height:25px;font-weight:normal;\">   Java技术体系：Java Card（Applets），Java ME(Micro Edition)，Java SE（Standard Edition），Java EE（Enterprise Edition）。<br/></span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"line-height:25px;\">Jvm结构概念:<br/></span><span style=\"font-weight:normal;line-height:25px;\">   <img src=\"http://hi.csdn.net/attachment/201111/8/0_13207288278zdw.gif\" alt=\"\" width=\"700\" height=\"400\"/><br/></span><span style=\"font-weight:normal;line-height:25px;\"><span><span style=\"background-color:rgb(255,255,255);\">   <br/></span></span></span><span style=\"font-weight:normal;color:rgb(51,51,255);\">运行时数据区域（Runtime Data Areas）</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\">    Jvm定义了一组运行时数据区域,这些区域在Jvm运行程序时使用。一些区域在JVM启动的时候就被创建，在JVM关闭时销毁。还有些区域是每个线程所有的。线</span></span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">程启动时创建，线程结束时销毁。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;background-color:rgb(255,255,255);\"><span style=\"color:#3333ff;\">pc 寄存器（Program Counter Register）</span></span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\">    JVM支持多线程,每个线程都有自己的pc寄存器。如果线程正在执行的是一个Java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址，如果是</span></span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">native的，这个计数器值则为空（Undefined）。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;color:rgb(51,51,255);\">Jvm栈</span><br/><span style=\"font-weight:normal;\">    虚拟机栈描述的是Java方法执行的内存模型：每个方法被执行的时候都会同时创建一个栈帧（Stack Frame）用于存储局部变量表，操作栈，动态链接，方</span></span><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\">法出口等信息。每一个方法被调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中从入栈道出栈的过程。</span></span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">栈的局部变量主要存放一些基本类型的变量（int,</span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">short,\n long, byte, float, double, boolean, char）,对象句柄（reference类型）和returnAddress类型。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"color:#3333ff;\">本地方法栈(Native Method Stacks)</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">   本地方法栈于虚拟机栈所发挥的作用非常相似，区别是虚拟机栈为虚拟机执行Java方法服务，本地方法栈则是为虚拟机使用到的Native方法服务。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"color:#3333ff;\">Java堆（Heap）</span><br/>\n   Jvm有一个堆，所有Jvm中的线程共享这个堆。所有的类对象实例和数组都分配在堆上。Jvm堆在Jvm启动的时候被创建。Jvm提供一个垃圾收集者来管理堆。堆</span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">上的对象不需要程序员显式地销毁。堆可以是固定大小，也可以根据需要增加大小。堆可以是不连续的。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"color:#3333ff;\">方法区域（Method Area）</span><br/>\n    所有Jvm中的线程共享这个区域,它用于存储已被虚拟机加载的类信息，常量，静态变量，即使编译器编译后的代码等数据。</span></p>\n<p><span style=\"font-family:SimSun;font-weight:normal;font-size:13px;\"><span style=\"color:#3333ff;\">运行时常量池（Runtime Constant Pool）</span></span></p>\n<p><span style=\"font-family:SimSun;font-weight:normal;font-size:13px;\">    运行时常量池是方法区的一部分。Class文件中除了有类的版本，字段，方法，接口等描述信息外，还有一项信息是常量池，用于存放编译期生成的各种字面</span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">量和符号引用，这部分内容将在类加载后存放到方法区的运行时常量池。</span></p>\n<p><span style=\"font-family:SimSun;font-weight:normal;font-size:13px;\"><br/></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><strong>Jvm结构</strong>说明：</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">    1.</span><span style=\"font-family:SimSun;font-size:13px;\">每个Java虚拟机实例都有一个方法区以及一个堆</span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">，它们是由该虚拟机实例中所有线程共享的。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><img src=\"http://hi.csdn.net/attachment/201202/25/0_1330170872aMS8.gif\" width=\"500\" height=\"400\" alt=\"\"/></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">    2.</span><span style=\"font-family:SimSun;font-size:13px;\">每个线程被创建时，都将得到自己的PC寄存器以及一个Java栈。<span style=\"font-weight:normal;\">任何线程都不能访问另一个线程的PC寄存器或者Java栈。</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><img src=\"http://hi.csdn.net/attachment/201202/25/0_1330171746srU2.gif\" width=\"700\" height=\"500\" alt=\"\"/><br/></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\">   3.数据类型：基本类型和引用类型：</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\"><img src=\"http://hi.csdn.net/attachment/201202/25/0_1330174024A33i.gif\" alt=\"\" width=\"639\" height=\"520\"/><br/></span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\">    4.方法区：</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"white-space:pre;\"/>1）对方法区数据的访问是线程安全的。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"white-space:pre;\"/>2）方法区的大小不必是固定的，虚拟机可以根据应用的需要动态调整。方法区也不必是连续的，方法区可以在一个堆（甚至是虚拟机自己的堆）中自由</span><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">分配。虚拟机允许用户或者程序员指定方法区的初始大小以及最小和最大尺寸等。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"white-space:pre;\"/>3）方法区也可以被垃圾回收。</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"white-space:pre;\"/>4）方法区中储存的信息：</span></p>\n\n<ul><li><ul><li><span style=\"font-family:SimSun;font-size:13px;\">这个类型的全限定名。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">这个类型的直接超类的全限定名（除非这个类是java.lang.Object，它没有超类）</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">这个类型是类类型还是接口类型。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">这个类型的访问修饰符（public,abstract或final的某个子集）</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">任何直接超接口的全限定名的有序列表。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">该类型的常量池。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">字段信息。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">方法信息。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">除了常量以外的所有类（静态）变量。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">一个到类ClassLoader的引用。</span></li><li><span style=\"font-family:SimSun;font-size:13px;\">一个到Class类的引用。</span></li></ul></li></ul><h1>\n</h1><p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"white-space:pre;\"><span style=\"font-family:SimSun;font-size:13px;\">5.执行引擎</span></span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;white-space:pre;\"><span style=\"white-space:pre;\"/>1）运行中Java程序的每一个线程都是一个独立的虚拟机执行引擎的实例。</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;white-space:pre;\"><span style=\"white-space:pre;\"/>2）JVM的指令集以栈为中心，而非以寄存器为中心，使得在那些只有很少的寄存器，或者寄存器很没有规律的机器上实现Java更便利。</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;white-space:pre;\"><br/></span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\">PS：</span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\">    1.Class类使得运行程序可以访问方法区中保存的信息（及反射的原理）。</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;\"><span style=\"font-weight:normal;\">    2.数组是真正的对象，和其他对象一样，数组总是存储在堆中。</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"line-height:25px;\"><br/></span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"line-height:25px;\">参考资料：<br/></span><span style=\"line-height:25px;\">《深入理解java虚拟机》</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"line-height:25px;\">《深入Java虚拟机》</span></span></p>\n<p><span style=\"font-family:SimSun;font-size:13px;font-weight:normal;\"><span style=\"line-height:25px;\"><span style=\"background-color:rgb(255,255,255);\"><span style=\"font-family:Tahoma, Arial, Helvetica, sans-serif;font-size:14px;line-height:18px;\">转载请注明出处：</span><a title=\"view: Nagle算法和Delayed ACK的一个测试\" href=\"http://www.blogjava.net/killme2008/archive/2011/06/archive/2011/06/30/353441.html\" style=\"margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0px;padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px;font-family:Tahoma, Arial, Helvetica, sans-serif;font-size:14px;line-height:18px;text-align:left;\"/><a href=\"http://blog.csdn.net/thomescai\">http://blog.csdn.net/thomescai</a></span><br/></span></span></p>\n\n            </div>\n                ",
			"keywords":["programing"]
		}
	]
}
