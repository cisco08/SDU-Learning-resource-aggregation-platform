{
    "arr" : [
        {   
            "title":"[机器学习] 机器学习笔记_csv文件格式特点",
            "content":"<div id=\"article_content\" class=\"article_content clearfix csdn-tracking-statistics\" data-pid=\"blog\" data-mod=\"popu_307\" data-dsm=\"post\">\n                    <div class=\"markdown_views\">\n                <p> <br>\n <br>\n    </p>\n\n<pre><code>&lt;article&gt;\n&lt;h6&gt;转载于L.Lawliet的博客&lt;/h6&gt;\n</code></pre>\n\n<h2 id=\"什么是csv\">什么是CSV</h2>\n\n<p><strong>逗号分隔值</strong>（Comma-Separated Values，CSV），其文件以纯文本形式存储表格数据（数字和文本），文件的每一行都是一个数据记录。每个记录由一个或多个字段组成，用逗号分隔。使用逗号作为字段分隔符是此文件格式的名称的来源，因为分隔字符也可以不是逗号，有时也称为字符分隔值。</p>\n\n<p>CSV广泛用于不同体系结构的应用程序之间交换数据表格信息，解决不兼容数据格式的互通问题，一般按照传输双方既定标准进行格式定义，而其本身并无明确格式标准。</p>\n\n<p><strong>CSV用逗号分隔字段的基本思想是清楚的，但是当字段数据也可能包含逗号或者甚至嵌入换行符时，该想法变得复杂。</strong> CSV实现可能无法处理这些字段数据，或者可能会使用引号来包围字段。引用并不能解决所有问题：有些字段可能需要嵌入引号，因此CSV实现可能包含转义字符或转义序列。</p>\n\n<p><strong>RFC 4180</strong>提出了MIME类型（”text/csv”）对于CSV格式的标准，可以作为一般使用的常用定义，满足大多数实现似乎遵循的格式。</p>\n\n<h2 id=\"csv的格式规范\">CSV的格式规范</h2>\n\n<p>下面的格式规范定义来源于RFC 4180，附上原文供参考，一共也就七点。</p>\n\n<p><strong>1. 每一行记录位于一个单独的行上，用回车换行符CRLF(也就是\\r\\n)分割。</strong></p>\n\n<blockquote>\n  <p>Each record is located on a separate line, delimited by a line break (CRLF).  For example:</p>\n\n  <pre class=\"prettyprint\"><code class=\" hljs livecodeserver hljs \">aaa,bbb,ccc <span class=\"hljs-constant\"><span class=\"hljs-constant\">CRLF</span></span>\nzzz,yyy,xxx <span class=\"hljs-constant\"><span class=\"hljs-constant\">CRLF</span></span></code></pre>\n</blockquote>\n\n<p><strong>2. 文件中的最后一行记录可以有结尾回车换行符，也可以没有。</strong></p>\n\n<blockquote>\n  <p>The last record in the file may or may not have an ending line break.  For example:</p>\n\n  <pre class=\"prettyprint\"><code class=\" hljs livecodeserver hljs \">aaa,bbb,ccc <span class=\"hljs-constant\"><span class=\"hljs-constant\">CRLF</span></span>\nzzz,yyy,xxx</code></pre>\n</blockquote>\n\n<p><strong>3. 第一行可以存在一个可选的标题头，格式和普通记录行的格式一样。标题头要包含文件记录字段对应的名称，应该有和记录字段一样的数量。（在MIME类型中，标题头行的存在与否可以通过MIME type中的可选”header”参数指明）</strong></p>\n\n<blockquote>\n  <p>There maybe an optional header line appearing as the first line of the file with the same format as normal record lines.  This header will contain names corresponding to the fields in the file and should contain the same number of fields as the records in the rest of the file (the presence or absence of the header line should be indicated via the optional “header” parameter of this MIME type).  For example:</p>\n\n  <pre class=\"prettyprint\"><code class=\" hljs livecodeserver hljs \">field_name,field_name,field_name <span class=\"hljs-constant\"><span class=\"hljs-constant\">CRLF</span></span>\naaa,bbb,ccc <span class=\"hljs-constant\"><span class=\"hljs-constant\">CRLF</span></span>\nzzz,yyy,xxx <span class=\"hljs-constant\"><span class=\"hljs-constant\">CRLF</span></span></code></pre>\n</blockquote>\n\n<p><strong>4. 在标题头行和普通行每行记录中，会存在一个或多个由半角逗号(,)分隔的字段。整个文件中每行应包含相同数量的字段，空格也是字段的一部分，不应被忽略。每一行记录最后一个字段后不能跟逗号。（通常用逗号分隔，也有其他字符分隔的CSV，需事先约定）</strong></p>\n\n<blockquote>\n  <p>Within the header and each record, there may be one or more fields, separated by commas.  Each line should contain the same number of fields throughout the file.  Spaces are considered part of a field and should not be ignored.  The last field in the record must not be followed by a comma.  For example:</p>\n\n  <pre class=\"prettyprint\"><code class=\" hljs  hljs \">aaa,bbb,ccc</code></pre>\n</blockquote>\n\n<p><strong>5. 每个字段可用也可不用半角双引号(“)括起来（不过有些程序，如Microsoft的Excel就根本不用双引号）。如果字段没有用引号括起来，那么该字段内部不能出现双引号字符。</strong></p>\n\n<blockquote>\n  <p>Each field may or may not be enclosed in double quotes (however some programs, such as Microsoft Excel, do not use double quotes at all).  If fields are not enclosed with double quotes, then double quotes may not appear inside the fields.  For example:</p>\n\n  <pre class=\"prettyprint\"><code class=\" hljs livecodeserver hljs \"><span class=\"hljs-string\"><span class=\"hljs-string\">\"aaa\"</span></span>,<span class=\"hljs-string\"><span class=\"hljs-string\">\"bbb\"</span></span>,<span class=\"hljs-string\"><span class=\"hljs-string\">\"ccc\"</span></span> <span class=\"hljs-constant\"><span class=\"hljs-constant\">CRLF</span></span>\nzzz,yyy,xxx</code></pre>\n</blockquote>\n\n<p><strong>6. 字段中若包含回车换行符、双引号或者逗号，该字段需要用双引号括起来。</strong></p>\n\n<blockquote>\n  <p>Fields containing line breaks (CRLF), double quotes, and commas should be enclosed in double-quotes.  For example:<em>（下面原文的例子可能有些问题）</em></p>\n\n  <pre class=\"prettyprint\"><code class=\" hljs 1c hljs \"><span class=\"hljs-string\"><span class=\"hljs-string\">\"aaa\"</span></span>,<span class=\"hljs-string\"><span class=\"hljs-string\">\"b CRLF</span></span>\nbb<span class=\"hljs-string\"><span class=\"hljs-string\">\",\"</span></span>ccc<span class=\"hljs-string\"><span class=\"hljs-string\">\" CRLF</span></span>\nzzz,yyy,xxx</code></pre>\n</blockquote>\n\n<p><strong>7. 如果用双引号括字段，那么出现在字段内的双引号前必须加一个双引号进行转义。</strong></p>\n\n<blockquote>\n  <p>If double-quotes are used to enclose fields, then a double-quote appearing inside a field must be escaped by preceding it with another double quote.  For example:</p>\n\n  <pre class=\"prettyprint\"><code class=\" hljs bash hljs \"><span class=\"hljs-string\"><span class=\"hljs-string\">\"aaa\"</span></span>,<span class=\"hljs-string\"><span class=\"hljs-string\">\"b\"</span></span><span class=\"hljs-string\"><span class=\"hljs-string\">\"bb\"</span></span>,<span class=\"hljs-string\"><span class=\"hljs-string\">\"ccc\"</span></span></code></pre>\n</blockquote>\n\n<h2 id=\"关于csv文件解析\">关于CSV文件解析</h2>\n\n<p>上面说过，CSV并不是一种单一的、定义明确的格式（尽管RFC 4180有一个被通常使用的定义）。因此在实践中，术语“CSV”泛指具有以下特征的任何文件：</p>\n\n<ul>\n<li>纯文本，使用某个字符集，比如ASCII、Unicode、EBCDIC或GB2312； </li>\n<li>由记录组成（典型的是每行一条记录）；</li>\n<li>每条记录被分隔符分隔为字段（典型分隔符有逗号、分号或制表符；有时分隔符可以包括可选的空格）； </li>\n<li>每条记录都有同样的字段序列。</li>\n</ul>\n\n<p>所以，在常规的约束条件下，存在着许多CSV变体，故CSV文件并不完全互通，如使用约定好的其他分隔符、转义规则等。因此，实际使用CSV需要数据交换双方约定规则（其实大体思路不变，一些细节），在进行CSV文件读写就免不了进行文件的解析。</p>\n\n<p>正如CSV并不明确的格式，CSV文件的解析同样没有标准方法，一般可以自己实现读写，网上也有很多种不同语言的实现版本。例如opencsv、csvreader等。它们可能会与RFC中的规定有所出入，例如在csvreader中有要求：</p>\n\n<blockquote>\n  <p>前缀和后缀的空格字符，逗号和制表符，与逗号或记录分隔符相邻的内容将被修剪。 <br>\n  为了保证前导和后缀空白字符的保留，必须通过将字段嵌入到双引号集合中来限定字段。</p>\n</blockquote>\n\n<p> <br>\n</p>            </div>\n            <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/markdown_views-ea0013b516.css\">\n                </div>",
            "keywords":["machine_learning"]
        },
        
        {
            "title" : "机器学习中的熵和 loss function",
            "content" : "<div id=\"article_content\" class=\"article_content clearfix csdn-tracking-statistics\" data-pid=\"blog\" data-mod=\"popu_307\" data-dsm=\"post\">\n                    <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css\">\n            <div class=\"htmledit_views\">\n                <h1>什么是熵？</h1><p>熵是由热力学领域首次提出的。在机器学习领域内，熵用来表示数据的信息量大小。</p><p>在机器学习中，一个事件出现的概率越小，那么当这个事件发生时，它所代表的信息量越大的数据，其熵越大。</p><p></p><p>对于一个随机变量，其熵等于它所有可能取值信息的期望，公式如下：</p><p><img src=\"https://img-blog.csdn.net/20180603045914401?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaWNoaVBseQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"></p><p>当X 只有两个取值时，其熵与概率p之间的关系如下所示：<br><br></p><p><img src=\"https://img-blog.csdn.net/20180603050127726?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaWNoaVBseQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"><br></p><p>由此图可知，当p = 0.5 时，熵最大。其意义为，当这两种事件发生的概率相等时，很难预测下一次会发生的事件是哪个。故此时随机变量的混乱度最大，此时其熵最大。</p><p>如果要理解交叉熵，则必须首先理解一个概念叫 <strong><span style=\"font-size:24px;\">相对熵</span></strong></p><p><span style=\"font-size:14px;\">相对熵(relative entropy) 又称为 KL 散度 (Kullback-Leibler divergence) 。其意义是用来表示两个随机分布之间的差别。记做</span></p><p><span style=\"font-size:14px;\">Dkl(p||q) </span></p><p><span style=\"font-size:14px;\">在机器学习领域，真实分布为p，假设分布为q。用KL 散度来度量q的无效性。其公式如下：</span></p><p><span style=\"font-size:14px;\"><img src=\"https://img-blog.csdn.net/20180603050920106?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaWNoaVBseQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"><br></span></p><p><span style=\"font-size:14px;\"><br></span></p><h1><span style=\"font-size:24px;\">交叉熵</span></h1><p><span style=\"font-size:14px;\">公式中的 Ep[-logq(x)] 就是交叉熵。其计算公式可变为：</span></p><p><span style=\"font-size:14px;\"><img src=\"https://img-blog.csdn.net/2018060305112587?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaWNoaVBseQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"><br></span></p><p><span style=\"font-size:14px;\">当模型已知时，H(p)即为一个常数。</span></p><p><span style=\"font-size:14px;\">此时可认为交叉熵和 KL散度是等价的。结合机器学习的目的，可得出以下重要结论：</span></p><p><span style=\"font-size:14px;\">1. 当KL散度大时，交叉熵大，表示 p，q 两个随机分布之间的差别较大，由于p表示真实分布，q表示预测的分布。故可认为，此时预测分布与真实分布之间差距较大，此时的预测不准确。</span></p><p><span style=\"font-size:14px;\">2. 当KL散度较小时，交叉熵小，表示p，q两个随机分布之间的差别较小，可认为此时的预测较可信。</span></p><p><span style=\"font-size:14px;\">针对 logistic regression 来说，交叉熵 cross entropy 可认为是：</span></p><p><span style=\"font-size:14px;\"><img src=\"https://img-blog.csdn.net/20180603051618608?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaWNoaVBseQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"\"><br></span></p><p><span style=\"font-size:14px;\">p是真实情况，q是预测情况。对应到模型的预测结果中，可认为 p = yi， q = yhat</span></p><p><span style=\"font-size:14px;\">当 yi = 0,  yhat = 0 即预测和实际相等时，cross entropy = 0</span></p><p><span style=\"font-size:14px;\">当yi = 0 , yhat = 1 即预测和实际不等时，cross entropy =  正无穷</span></p><p><span style=\"font-size:14px;\">同理可得到 yi = 1 的情况。</span></p><p><span style=\"font-size:14px;\">所以可得出cross entropy 和模型准确率以及真值预测值之间的关系。</span></p><p><span style=\"font-size:14px;\">如果想要使得模型越准确，则需要使得 yhat 和 yi 的值尽量接近，则需要cross entropy 较小。</span></p><p><span style=\"font-size:14px;\">故可通过求cross entropy的最小值，来求某一组参数，这组参数使得 yhat 和 yi 的值尽量接近，那么就可以使整个模型更加接近准确模型。</span></p><p><br></p><p>最后通过字面含义来记住什么叫交叉熵。</p><p>首先理解“交叉”，这里的交叉是公式中将指p和 q结合在一起。p，q分别指两个随机分布。p是真实分布，q是预测分布。</p><p>“熵”是指 p * log(q)。 </p><p>“交叉熵”的意义就是评价 p 和 q的相似程度。</p><p><br></p><h1><span style=\"font-size:24px;\">Loss Function</span></h1><p><span style=\"font-size:14px;\">所有的分类问题，其loss function 都可以是 交叉熵。其中模型参数出现在yhat中。通过对模型的参数进行更新，从而yhat的更新，使得loss function 越来越小。</span></p><h1><span style=\"font-size:18px;\">参考链接：</span></h1><p><span style=\"font-size:14px;\">https://blog.csdn.net/rtygbwwwerr/article/details/50778098<br></span></p><p><span style=\"font-size:14px;\"><br></span></p><p><br></p>            </div>\n                </div>",
            "keywords" : ["machine_learning"]
        }
    ]
}
